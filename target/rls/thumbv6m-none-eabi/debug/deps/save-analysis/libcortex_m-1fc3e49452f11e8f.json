{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3","program":"/home/nebelgrau/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cortex_m","--edition=2018","/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=1fc3e49452f11e8f","-C","extra-filename=-1fc3e49452f11e8f","--out-dir","/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps","--target","thumbv6m-none-eabi","-L","dependency=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps","-L","dependency=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/debug/deps","--extern","aligned=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libaligned-d43ffa9cd3ecfacd.rmeta","--extern","bare_metal=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libbare_metal-b9851c0b0cf6e794.rmeta","--extern","bitfield=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libbitfield-18e000ef2447381f.rmeta","--extern","volatile_register=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libvolatile_register-1478aa50c0902b64.rmeta","--cap-lints","allow","-L","/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/build/cortex-m-6765468e744d2d5b/out","--cfg","cortex_m","--cfg","armv6m","-l","static=cortex-m","--error-format=json","--sysroot","/home/nebelgrau/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libcortex_m-1fc3e49452f11e8f.rmeta"},"prelude":{"crate_id":{"name":"cortex_m","disambiguator":[12289535216290961465,5796611925549609499]},"crate_root":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src","external_crates":[{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16446848000528418901,13531319396254931020]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8381671975949658107,11909934328590408277]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[9931451773773014550,14248369741941424395]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":4,"id":{"name":"aligned","disambiguator":[10715104351088817953,8985885963772221514]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":5,"id":{"name":"as_slice","disambiguator":[2382817032773192487,11662016923047239367]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":6,"id":{"name":"generic_array","disambiguator":[1955381876053627478,10519268987105312988]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":7,"id":{"name":"typenum","disambiguator":[14075267191247045430,4337194191479019516]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":8,"id":{"name":"generic_array","disambiguator":[12512764234067537703,10503462924777692632]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":9,"id":{"name":"stable_deref_trait","disambiguator":[18335430308644270238,13988826176776470062]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":10,"id":{"name":"bare_metal","disambiguator":[7687816475388660200,8214433962265001]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":11,"id":{"name":"volatile_register","disambiguator":[9145258012750199555,9820125862514599790]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","num":12,"id":{"name":"vcell","disambiguator":[936490541271218492,2458580528827657919]}}],"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":0,"byte_end":2346,"line_start":1,"line_end":69,"column_start":1,"column_end":40}},"imports":[{"kind":"Use","ref_id":{"krate":10,"index":11},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":15653,"byte_end":15668,"line_start":5,"line_end":5,"column_start":22,"column_end":37},"alias_span":null,"name":"CriticalSection","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":10,"index":15},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":15670,"byte_end":15675,"line_start":5,"line_end":5,"column_start":39,"column_end":44},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":10,"index":26},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":15677,"byte_end":15679,"line_start":5,"line_end":5,"column_start":46,"column_end":48},"alias_span":null,"name":"Nr","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":2334,"byte_end":2345,"line_start":69,"line_end":69,"column_start":28,"column_end":39},"alias_span":null,"name":"Peripherals","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":0,"byte_end":2346,"line_start":1,"line_end":69,"column_start":1,"column_end":40},"name":"","qualname":"::","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":13},{"krate":0,"index":44},{"krate":0,"index":58},{"krate":0,"index":382},{"krate":0,"index":429}],"decl_id":null,"docs":" Low level access to Cortex-M processors","sig":null,"attributes":[{"value":"! Low level access to Cortex-M processors","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":0,"byte_end":43,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":44,"byte_end":47,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate provides:","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":48,"byte_end":72,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":73,"byte_end":76,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! - Access to core peripherals like NVIC, SCB and SysTick.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":77,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"! - Access to core registers like CONTROL, MSP and PSR.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":138,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"! - Interrupt manipulation mechanisms","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":196,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"! - Safe wrappers around Cortex-M specific instructions like `bkpt`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":236,"byte_end":305,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":306,"byte_end":309,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! # Optional features","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":310,"byte_end":333,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":334,"byte_end":337,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! ## `inline-asm`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":338,"byte_end":357,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":358,"byte_end":361,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! When this feature is enabled the implementation of all the functions inside the `asm` and","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":362,"byte_end":455,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"! `register` modules use inline assembly (`llvm_asm!`) instead of external assembly (FFI into separate","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":456,"byte_end":560,"line_start":15,"line_end":15,"column_start":1,"column_end":105}},{"value":"! assembly files pre-compiled using `arm-none-eabi-gcc`). The advantages of enabling `inline-asm`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":561,"byte_end":660,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"! are:","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":661,"byte_end":669,"line_start":17,"line_end":17,"column_start":1,"column_end":9}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":670,"byte_end":673,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! - Reduced overhead. FFI eliminates the possibility of inlining so all operations include a","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":674,"byte_end":768,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"! function call overhead when `inline-asm` is not enabled.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":769,"byte_end":829,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":830,"byte_end":833,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! - Some of the `register` API only becomes available only when `inline-asm` is enabled. Check the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":834,"byte_end":934,"line_start":22,"line_end":22,"column_start":1,"column_end":101}},{"value":"! API docs for details.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":935,"byte_end":960,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":961,"byte_end":964,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! The disadvantage is that `inline-asm` requires a nightly toolchain.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":965,"byte_end":1036,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":1037,"byte_end":1040,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! # Minimum Supported Rust Version (MSRV)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":1041,"byte_end":1084,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":1085,"byte_end":1088,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! This crate is guaranteed to compile on stable Rust 1.31 and up. It *might*","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":1089,"byte_end":1167,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"! compile with older versions but that may change in any new patch release.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":1168,"byte_end":1245,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"deny(missing_docs)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":1303,"byte_end":1325,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":1326,"byte_end":1336,"line_start":34,"line_end":34,"column_start":1,"column_end":11}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":1337,"byte_end":1367,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":1368,"byte_end":1405,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"deny(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":2018,"byte_end":2066,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"asm","qualname":"::asm","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41}],"decl_id":null,"docs":" Miscellaneous assembly instructions\n","sig":null,"attributes":[{"value":"! Miscellaneous assembly instructions","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5078,"byte_end":5117,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5340,"byte_end":5344,"line_start":8,"line_end":8,"column_start":8,"column_end":12},"name":"bkpt","qualname":"::asm::bkpt","value":"pub fn bkpt()","parent":null,"children":[],"decl_id":null,"docs":" Puts the processor in Debug state. Debuggers can pick this up as a \"breakpoint\".","sig":null,"attributes":[{"value":"/ Puts the processor in Debug state. Debuggers can pick this up as a \"breakpoint\".","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5119,"byte_end":5203,"line_start":3,"line_end":3,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5204,"byte_end":5207,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ **NOTE** calling `bkpt` when the processor is not connected to a debugger will cause an","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5208,"byte_end":5299,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ exception.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5300,"byte_end":5314,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"inline(always)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5315,"byte_end":5332,"line_start":7,"line_end":7,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":6027,"byte_end":6032,"line_start":34,"line_end":34,"column_start":8,"column_end":13},"name":"delay","qualname":"::asm::delay","value":"pub fn delay(u32)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the program for *at least* `n` instruction cycles","sig":null,"attributes":[{"value":"/ Blocks the program for *at least* `n` instruction cycles","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5735,"byte_end":5795,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5796,"byte_end":5799,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This is implemented in assembly so its execution time is the same regardless of the optimization","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5800,"byte_end":5900,"line_start":29,"line_end":29,"column_start":1,"column_end":101}},{"value":"/ level.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5901,"byte_end":5911,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5912,"byte_end":5915,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ NOTE that the delay can take much longer if interrupts are serviced during its execution.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":5916,"byte_end":6009,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":6010,"byte_end":6019,"line_start":33,"line_end":33,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":6824,"byte_end":6827,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"nop","qualname":"::asm::nop","value":"pub fn nop()","parent":null,"children":[],"decl_id":null,"docs":" A no-operation. Useful to prevent delay loops from being optimized away.\n","sig":null,"attributes":[{"value":"/ A no-operation. Useful to prevent delay loops from being optimized away.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":6730,"byte_end":6806,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":6807,"byte_end":6816,"line_start":64,"line_end":64,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":7355,"byte_end":7358,"line_start":89,"line_end":89,"column_start":8,"column_end":11},"name":"udf","qualname":"::asm::udf","value":"pub fn udf() -> !","parent":null,"children":[],"decl_id":null,"docs":" Generate an Undefined Instruction exception.","sig":null,"attributes":[{"value":"/ Generate an Undefined Instruction exception.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":7215,"byte_end":7263,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":7264,"byte_end":7267,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Can be used as a stable alternative to `core::intrinsics::abort`.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":7268,"byte_end":7337,"line_start":87,"line_end":87,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":7338,"byte_end":7347,"line_start":88,"line_end":88,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":7907,"byte_end":7910,"line_start":115,"line_end":115,"column_start":8,"column_end":11},"name":"wfe","qualname":"::asm::wfe","value":"pub fn wfe()","parent":null,"children":[],"decl_id":null,"docs":" Wait For Event\n","sig":null,"attributes":[{"value":"/ Wait For Event","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":7871,"byte_end":7889,"line_start":113,"line_end":113,"column_start":1,"column_end":19}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":7890,"byte_end":7899,"line_start":114,"line_end":114,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":8337,"byte_end":8340,"line_start":136,"line_end":136,"column_start":8,"column_end":11},"name":"wfi","qualname":"::asm::wfi","value":"pub fn wfi()","parent":null,"children":[],"decl_id":null,"docs":" Wait For Interrupt\n","sig":null,"attributes":[{"value":"/ Wait For Interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":8297,"byte_end":8319,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":8320,"byte_end":8329,"line_start":135,"line_end":135,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":8759,"byte_end":8762,"line_start":157,"line_end":157,"column_start":8,"column_end":11},"name":"sev","qualname":"::asm::sev","value":"pub fn sev()","parent":null,"children":[],"decl_id":null,"docs":" Send Event\n","sig":null,"attributes":[{"value":"/ Send Event","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":8727,"byte_end":8741,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":8742,"byte_end":8751,"line_start":156,"line_end":156,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":9378,"byte_end":9381,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"isb","qualname":"::asm::isb","value":"pub fn isb()","parent":null,"children":[],"decl_id":null,"docs":" Instruction Synchronization Barrier","sig":null,"attributes":[{"value":"/ Instruction Synchronization Barrier","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":9149,"byte_end":9188,"line_start":176,"line_end":176,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":9189,"byte_end":9192,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Flushes the pipeline in the processor, so that all instructions following the `ISB` are fetched","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":9193,"byte_end":9292,"line_start":178,"line_end":178,"column_start":1,"column_end":100}},{"value":"/ from cache or memory, after the instruction has been completed.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":9293,"byte_end":9360,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":9361,"byte_end":9370,"line_start":180,"line_end":180,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10267,"byte_end":10270,"line_start":209,"line_end":209,"column_start":8,"column_end":11},"name":"dsb","qualname":"::asm::dsb","value":"pub fn dsb()","parent":null,"children":[],"decl_id":null,"docs":" Data Synchronization Barrier","sig":null,"attributes":[{"value":"/ Data Synchronization Barrier","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":9846,"byte_end":9878,"line_start":201,"line_end":201,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":9879,"byte_end":9882,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Acts as a special kind of memory barrier. No instruction in program order after this instruction","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":9883,"byte_end":9983,"line_start":203,"line_end":203,"column_start":1,"column_end":101}},{"value":"/ can execute until this instruction completes. This instruction completes only when both:","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":9984,"byte_end":10076,"line_start":204,"line_end":204,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10077,"byte_end":10080,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/  * any explicit memory access made before this instruction is complete","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10081,"byte_end":10155,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"/  * all cache and branch predictor maintenance operations before this instruction complete","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10156,"byte_end":10249,"line_start":207,"line_end":207,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10250,"byte_end":10259,"line_start":208,"line_end":208,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10999,"byte_end":11002,"line_start":235,"line_end":235,"column_start":8,"column_end":11},"name":"dmb","qualname":"::asm::dmb","value":"pub fn dmb()","parent":null,"children":[],"decl_id":null,"docs":" Data Memory Barrier","sig":null,"attributes":[{"value":"/ Data Memory Barrier","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10735,"byte_end":10758,"line_start":229,"line_end":229,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10759,"byte_end":10762,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ Ensures that all explicit memory accesses that appear in program order before the `DMB`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10763,"byte_end":10854,"line_start":231,"line_end":231,"column_start":1,"column_end":92}},{"value":"/ instruction are observed before any explicit memory accesses that appear in program order","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10855,"byte_end":10948,"line_start":232,"line_end":232,"column_start":1,"column_end":94}},{"value":"/ after the `DMB` instruction.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10949,"byte_end":10981,"line_start":233,"line_end":233,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/asm.rs","byte_start":10982,"byte_end":10991,"line_start":234,"line_end":234,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"interrupt","qualname":"::interrupt","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55}],"decl_id":null,"docs":" Interrupts\n","sig":null,"attributes":[{"value":"! Interrupts","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":15570,"byte_end":15584,"line_start":1,"line_end":1,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":15728,"byte_end":15735,"line_start":9,"line_end":9,"column_start":8,"column_end":15},"name":"disable","qualname":"::interrupt::disable","value":"pub fn disable()","parent":null,"children":[],"decl_id":null,"docs":" Disables all interrupts\n","sig":null,"attributes":[{"value":"/ Disables all interrupts","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":15683,"byte_end":15710,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":15711,"byte_end":15720,"line_start":8,"line_end":8,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16379,"byte_end":16385,"line_start":37,"line_end":37,"column_start":15,"column_end":21},"name":"enable","qualname":"::interrupt::enable","value":"pub unsafe fn enable()","parent":null,"children":[],"decl_id":null,"docs":" Enables all the interrupts","sig":null,"attributes":[{"value":"/ Enables all the interrupts","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16226,"byte_end":16256,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16257,"byte_end":16260,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16261,"byte_end":16273,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16274,"byte_end":16277,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ - Do not call this function inside an `interrupt::free` critical section","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16278,"byte_end":16354,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16355,"byte_end":16364,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16959,"byte_end":16963,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"free","qualname":"::interrupt::free","value":"pub fn free<F, R>(F) -> R where F: FnOnce(&CriticalSection) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute closure `f` in an interrupt-free context.","sig":null,"attributes":[{"value":"/ Execute closure `f` in an interrupt-free context.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16836,"byte_end":16889,"line_start":57,"line_end":57,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16890,"byte_end":16893,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This as also known as a \"critical section\".","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16894,"byte_end":16941,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/interrupt.rs","byte_start":16942,"byte_end":16951,"line_start":60,"line_end":60,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"peripheral","qualname":"::peripheral","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":583},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":77},{"krate":0,"index":95},{"krate":0,"index":113},{"krate":0,"index":129},{"krate":0,"index":186},{"krate":0,"index":252},{"krate":0,"index":292},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":381}],"decl_id":null,"docs":" Core peripherals","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17369,"byte_end":17409,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"! Core peripherals","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17410,"byte_end":17430,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17431,"byte_end":17434,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! # API","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17435,"byte_end":17444,"line_start":4,"line_end":4,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17445,"byte_end":17448,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! To use (most of) the peripheral API first you must get an *instance* of the peripheral. All the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17449,"byte_end":17548,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"! core peripherals are modeled as singletons (there can only ever be, at most, one instance of any","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17549,"byte_end":17649,"line_start":7,"line_end":7,"column_start":1,"column_end":101}},{"value":"! one of them at any given point in time) and the only way to get an instance of them is through","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17650,"byte_end":17748,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"! the [`Peripherals::take`](struct.Peripherals.html#method.take) method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17749,"byte_end":17823,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17824,"byte_end":17827,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ``` no_run","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17828,"byte_end":17842,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"! use cortex_m::peripheral::Peripherals;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17843,"byte_end":17885,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17886,"byte_end":17889,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17890,"byte_end":17905,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"!     let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17906,"byte_end":17965,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"!     peripherals.DWT.enable_cycle_counter();","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":17966,"byte_end":18013,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"! }","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18014,"byte_end":18019,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18020,"byte_end":18027,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18028,"byte_end":18031,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! This method can only be successfully called *once* -- this is why the method returns an","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18032,"byte_end":18123,"line_start":20,"line_end":20,"column_start":1,"column_end":92}},{"value":"! `Option`. Subsequent calls to the method will result in a `None` value being returned.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18124,"byte_end":18214,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18215,"byte_end":18218,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! ``` no_run","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18219,"byte_end":18233,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"! use cortex_m::peripheral::Peripherals;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18234,"byte_end":18276,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18277,"byte_end":18280,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18281,"byte_end":18296,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"!     let ok = Peripherals::take().unwrap();","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18297,"byte_end":18343,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"!     let panics = Peripherals::take().unwrap();","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18344,"byte_end":18394,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"! }","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18395,"byte_end":18400,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18401,"byte_end":18408,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"! A part of the peripheral API doesn't require access to a peripheral instance. This part of the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18409,"byte_end":18507,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"! API is provided as static methods on the peripheral types. One example is the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18508,"byte_end":18589,"line_start":32,"line_end":32,"column_start":1,"column_end":82}},{"value":"! [`DWT::get_cycle_count`](struct.DWT.html#method.get_cycle_count) method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18590,"byte_end":18666,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18667,"byte_end":18670,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! ``` no_run","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18671,"byte_end":18685,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"! use cortex_m::peripheral::{DWT, Peripherals};","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18686,"byte_end":18735,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18736,"byte_end":18739,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18740,"byte_end":18755,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"!     {","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18756,"byte_end":18765,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"!         let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18766,"byte_end":18829,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"!         peripherals.DWT.enable_cycle_counter();","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18830,"byte_end":18881,"line_start":41,"line_end":41,"column_start":1,"column_end":52}},{"value":"!     } // all the peripheral singletons are destroyed here","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18882,"byte_end":18943,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18944,"byte_end":18947,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"!     // but this method can be called without a DWT instance","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":18948,"byte_end":19011,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"!     let cyccnt = DWT::get_cycle_count();","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19012,"byte_end":19056,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"! }","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19057,"byte_end":19062,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19063,"byte_end":19070,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19071,"byte_end":19074,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! The singleton property can be *unsafely* bypassed using the `ptr` static method which is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19075,"byte_end":19167,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"! available on all the peripheral types. This method is a useful building block for implementing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19168,"byte_end":19266,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"! safe higher level abstractions.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19267,"byte_end":19302,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19303,"byte_end":19306,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! ``` no_run","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19307,"byte_end":19321,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! use cortex_m::peripheral::{DWT, Peripherals};","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19322,"byte_end":19371,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19372,"byte_end":19375,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19376,"byte_end":19391,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"!     {","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19392,"byte_end":19401,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"!         let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19402,"byte_end":19465,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"!         peripherals.DWT.enable_cycle_counter();","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19466,"byte_end":19517,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"!     } // all the peripheral singletons are destroyed here","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19518,"byte_end":19579,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19580,"byte_end":19583,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"!     // actually safe because this is an atomic read with no side effects","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19584,"byte_end":19660,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"!     let cyccnt = unsafe { (*DWT::ptr()).cyccnt.read() };","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19661,"byte_end":19721,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"! }","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19722,"byte_end":19727,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19728,"byte_end":19735,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19736,"byte_end":19739,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! # References","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19740,"byte_end":19756,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19757,"byte_end":19760,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! - ARMv7-M Architecture Reference Manual (Issue E.b) - Chapter B3","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19761,"byte_end":19829,"line_start":69,"line_end":69,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/cpuid.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cpuid","qualname":"::peripheral::cpuid","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/cpuid.rs","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" CPUID\n","sig":null,"attributes":[{"value":"! CPUID","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/cpuid.rs","byte_start":29179,"byte_end":29188,"line_start":1,"line_end":1,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":64},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/cpuid.rs","byte_start":29357,"byte_end":29370,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::cpuid::RegisterBlock","value":"RegisterBlock { base }","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/cpuid.rs","byte_start":29316,"byte_end":29334,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/cpuid.rs","byte_start":29335,"byte_end":29345,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":65},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/cpuid.rs","byte_start":29400,"byte_end":29404,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"base","qualname":"::peripheral::cpuid::RegisterBlock::base","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" CPUID base\n","sig":null,"attributes":[{"value":"/ CPUID base","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/cpuid.rs","byte_start":29377,"byte_end":29391,"line_start":13,"line_end":13,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":77},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dcb","qualname":"::peripheral::dcb","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":89}],"decl_id":null,"docs":" Debug Control Block\n","sig":null,"attributes":[{"value":"! Debug Control Block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32469,"byte_end":32492,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32653,"byte_end":32666,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::dcb::RegisterBlock","value":"RegisterBlock { dhcsr, dcrsr, dcrdr, demcr }","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32612,"byte_end":32630,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32631,"byte_end":32641,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":85},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32718,"byte_end":32723,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"dhcsr","qualname":"::peripheral::dcb::RegisterBlock::dhcsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Debug Halting Control and Status\n","sig":null,"attributes":[{"value":"/ Debug Halting Control and Status","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32673,"byte_end":32709,"line_start":13,"line_end":13,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":86},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32779,"byte_end":32784,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"dcrsr","qualname":"::peripheral::dcb::RegisterBlock::dcrsr","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Debug Core Register Selector\n","sig":null,"attributes":[{"value":"/ Debug Core Register Selector","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32738,"byte_end":32770,"line_start":15,"line_end":15,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":87},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32836,"byte_end":32841,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"dcrdr","qualname":"::peripheral::dcb::RegisterBlock::dcrdr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Debug Core Register Data\n","sig":null,"attributes":[{"value":"/ Debug Core Register Data","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32799,"byte_end":32827,"line_start":17,"line_end":17,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":88},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32904,"byte_end":32909,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"demcr","qualname":"::peripheral::dcb::RegisterBlock::demcr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Debug Exception and Monitor Control\n","sig":null,"attributes":[{"value":"/ Debug Exception and Monitor Control","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32856,"byte_end":32895,"line_start":19,"line_end":19,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33176,"byte_end":33188,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"name":"enable_trace","qualname":"<DCB>::enable_trace","value":"pub fn enable_trace(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables TRACE. This is for example required by the\n `peripheral::DWT` cycle counter to work properly.\n As by STM documentation, this flag is not reset on\n soft-reset, only on power reset.\n","sig":null,"attributes":[{"value":"/ Enables TRACE. This is for example required by the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32938,"byte_end":32992,"line_start":24,"line_end":24,"column_start":5,"column_end":59}},{"value":"/ `peripheral::DWT` cycle counter to work properly.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32997,"byte_end":33050,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/ As by STM documentation, this flag is not reset on","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33055,"byte_end":33109,"line_start":26,"line_end":26,"column_start":5,"column_end":59}},{"value":"/ soft-reset, only on power reset.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33114,"byte_end":33150,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33155,"byte_end":33164,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33416,"byte_end":33429,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"disable_trace","qualname":"<DCB>::disable_trace","value":"pub fn disable_trace(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables TRACE. See `DCB::enable_trace()` for more details\n","sig":null,"attributes":[{"value":"/ Disables TRACE. See `DCB::enable_trace()` for more details","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33328,"byte_end":33390,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33395,"byte_end":33404,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":34190,"byte_end":34210,"line_start":53,"line_end":53,"column_start":12,"column_end":32},"name":"is_debugger_attached","qualname":"<DCB>::is_debugger_attached","value":"pub fn is_debugger_attached() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is there a debugger attached? (see note)","sig":null,"attributes":[{"value":"/ Is there a debugger attached? (see note)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33572,"byte_end":33616,"line_start":45,"line_end":45,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33621,"byte_end":33624,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note: This function is [reported not to","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33629,"byte_end":33672,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/ work](http://web.archive.org/web/20180821191012/https://community.nxp.com/thread/424925#comment-782843)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33677,"byte_end":33784,"line_start":48,"line_end":48,"column_start":5,"column_end":112}},{"value":"/ on Cortex-M0 devices. Per the ARM v6-M Architecture Reference Manual, \"Access to the DHCSR","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33789,"byte_end":33883,"line_start":49,"line_end":49,"column_start":5,"column_end":99}},{"value":"/ from software running on the processor is IMPLEMENTATION DEFINED\". Indeed, from the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33888,"byte_end":33975,"line_start":50,"line_end":50,"column_start":5,"column_end":92}},{"value":"/ [Cortex-M0+ r0p1 Technical Reference Manual](http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0484c/BABJHEIG.html), \"Note Software cannot access the debug registers.\"","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":33980,"byte_end":34164,"line_start":51,"line_end":51,"column_start":5,"column_end":189}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":34169,"byte_end":34178,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dwt","qualname":"::peripheral::dwt","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":107},{"krate":0,"index":112}],"decl_id":null,"docs":" Data Watchpoint and Trace unit\n","sig":null,"attributes":[{"value":"! Data Watchpoint and Trace unit","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":34436,"byte_end":34470,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":34623,"byte_end":34636,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::dwt::RegisterBlock","value":"RegisterBlock { ctrl, pcsr, c }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":34582,"byte_end":34600,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":34601,"byte_end":34611,"line_start":10,"line_end":10,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":101},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":34663,"byte_end":34667,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::peripheral::dwt::RegisterBlock::ctrl","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Control\n","sig":null,"attributes":[{"value":"/ Control","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":34643,"byte_end":34654,"line_start":12,"line_end":12,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":104},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35247,"byte_end":35251,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"name":"pcsr","qualname":"::peripheral::dwt::RegisterBlock::pcsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Program Counter Sample\n","sig":null,"attributes":[{"value":"/ Program Counter Sample","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35212,"byte_end":35238,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35309,"byte_end":35310,"line_start":39,"line_end":39,"column_start":9,"column_end":10},"name":"c","qualname":"::peripheral::dwt::RegisterBlock::c","value":"[peripheral::dwt::Comparator; 2]","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Comparators\n","sig":null,"attributes":[{"value":"/ Comparators","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35266,"byte_end":35281,"line_start":37,"line_end":37,"column_start":5,"column_end":20}},{"value":"cfg(armv6m)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35286,"byte_end":35300,"line_start":38,"line_end":38,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":107},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35624,"byte_end":35634,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"Comparator","qualname":"::peripheral::dwt::Comparator","value":"Comparator { comp, mask, function }","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"decl_id":null,"docs":" Comparator\n","sig":null,"attributes":[{"value":"/ Comparator","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35587,"byte_end":35601,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"repr(C)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35602,"byte_end":35612,"line_start":54,"line_end":54,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35664,"byte_end":35668,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"name":"comp","qualname":"::peripheral::dwt::Comparator::comp","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" Comparator\n","sig":null,"attributes":[{"value":"/ Comparator","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35641,"byte_end":35655,"line_start":56,"line_end":56,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":109},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35711,"byte_end":35715,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"name":"mask","qualname":"::peripheral::dwt::Comparator::mask","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" Comparator Mask\n","sig":null,"attributes":[{"value":"/ Comparator Mask","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35683,"byte_end":35702,"line_start":58,"line_end":58,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":110},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35762,"byte_end":35770,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"name":"function","qualname":"::peripheral::dwt::Comparator::function","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" Comparator Function\n","sig":null,"attributes":[{"value":"/ Comparator Function","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35730,"byte_end":35753,"line_start":60,"line_end":60,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":113},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpu","qualname":"::peripheral::mpu","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"! Memory Protection Unit","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36554,"byte_end":36580,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36657,"byte_end":36670,"line_start":7,"line_end":7,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::mpu::RegisterBlock","value":"RegisterBlock { _type, ctrl, rnr, rbar, rasr, rbar_a1, rsar_a1, rbar_a2, rsar_a2, rbar_a3, rsar_a3 }","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36616,"byte_end":36634,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36635,"byte_end":36645,"line_start":6,"line_end":6,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":118},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36694,"byte_end":36699,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"_type","qualname":"::peripheral::mpu::RegisterBlock::_type","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Type\n","sig":null,"attributes":[{"value":"/ Type","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36677,"byte_end":36685,"line_start":8,"line_end":8,"column_start":5,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":119},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36734,"byte_end":36738,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::peripheral::mpu::RegisterBlock::ctrl","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Control\n","sig":null,"attributes":[{"value":"/ Control","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36714,"byte_end":36725,"line_start":10,"line_end":10,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":120},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36779,"byte_end":36782,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"rnr","qualname":"::peripheral::mpu::RegisterBlock::rnr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Region Number\n","sig":null,"attributes":[{"value":"/ Region Number","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36753,"byte_end":36770,"line_start":12,"line_end":12,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":121},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36829,"byte_end":36833,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"rbar","qualname":"::peripheral::mpu::RegisterBlock::rbar","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Region Base Address\n","sig":null,"attributes":[{"value":"/ Region Base Address","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36797,"byte_end":36820,"line_start":14,"line_end":14,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":122},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36886,"byte_end":36890,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"rasr","qualname":"::peripheral::mpu::RegisterBlock::rasr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Region Attribute and Size\n","sig":null,"attributes":[{"value":"/ Region Attribute and Size","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36848,"byte_end":36877,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":123},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36933,"byte_end":36940,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"rbar_a1","qualname":"::peripheral::mpu::RegisterBlock::rbar_a1","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Alias 1 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 1 of RBAR","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36905,"byte_end":36924,"line_start":18,"line_end":18,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":124},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36983,"byte_end":36990,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"name":"rsar_a1","qualname":"::peripheral::mpu::RegisterBlock::rsar_a1","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Alias 1 of RSAR\n","sig":null,"attributes":[{"value":"/ Alias 1 of RSAR","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":36955,"byte_end":36974,"line_start":20,"line_end":20,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":125},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":37033,"byte_end":37040,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"rbar_a2","qualname":"::peripheral::mpu::RegisterBlock::rbar_a2","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Alias 2 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 2 of RBAR","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":37005,"byte_end":37024,"line_start":22,"line_end":22,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":126},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":37083,"byte_end":37090,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"name":"rsar_a2","qualname":"::peripheral::mpu::RegisterBlock::rsar_a2","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Alias 2 of RSAR\n","sig":null,"attributes":[{"value":"/ Alias 2 of RSAR","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":37055,"byte_end":37074,"line_start":24,"line_end":24,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":127},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":37133,"byte_end":37140,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"rbar_a3","qualname":"::peripheral::mpu::RegisterBlock::rbar_a3","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Alias 3 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 3 of RBAR","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":37105,"byte_end":37124,"line_start":26,"line_end":26,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":128},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":37183,"byte_end":37190,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"rsar_a3","qualname":"::peripheral::mpu::RegisterBlock::rsar_a3","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Alias 3 of RSAR\n","sig":null,"attributes":[{"value":"/ Alias 3 of RSAR","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mpu.rs","byte_start":37155,"byte_end":37174,"line_start":28,"line_end":28,"column_start":5,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nvic","qualname":"::peripheral::nvic","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":156}],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"! Nested Vector Interrupt Controller","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37204,"byte_end":37242,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37422,"byte_end":37435,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::nvic::RegisterBlock","value":"RegisterBlock { iser, icer, ispr, icpr, ipr }","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37381,"byte_end":37399,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37400,"byte_end":37410,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":134},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37475,"byte_end":37479,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"iser","qualname":"::peripheral::nvic::RegisterBlock::iser","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Interrupt Set-Enable\n","sig":null,"attributes":[{"value":"/ Interrupt Set-Enable","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37442,"byte_end":37466,"line_start":13,"line_end":13,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":138},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37564,"byte_end":37568,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"icer","qualname":"::peripheral::nvic::RegisterBlock::icer","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Interrupt Clear-Enable\n","sig":null,"attributes":[{"value":"/ Interrupt Clear-Enable","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37529,"byte_end":37555,"line_start":18,"line_end":18,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37652,"byte_end":37656,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"ispr","qualname":"::peripheral::nvic::RegisterBlock::ispr","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Interrupt Set-Pending\n","sig":null,"attributes":[{"value":"/ Interrupt Set-Pending","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37618,"byte_end":37643,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":146},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37742,"byte_end":37746,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"icpr","qualname":"::peripheral::nvic::RegisterBlock::icpr","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Interrupt Clear-Pending\n","sig":null,"attributes":[{"value":"/ Interrupt Clear-Pending","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":37706,"byte_end":37733,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":154},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":39173,"byte_end":39176,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"ipr","qualname":"::peripheral::nvic::RegisterBlock::ipr","value":"[volatile_register::RW<u32>; 8]","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Interrupt Priority","sig":null,"attributes":[{"value":"cfg(armv6m)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":38596,"byte_end":38610,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/ Interrupt Priority","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":38615,"byte_end":38637,"line_start":56,"line_end":56,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":38642,"byte_end":38645,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ On ARMv7-M, 124 word-sized registers are available. Each of those","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":38650,"byte_end":38719,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ contains of 4 interrupt priorities of 8 byte each.The architecture","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":38724,"byte_end":38794,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ specifically allows accessing those along byte boundaries, so they are","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":38799,"byte_end":38873,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ represented as 496 byte-sized registers, for convenience, and to allow","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":38878,"byte_end":38952,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ atomic priority updates.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":38957,"byte_end":38985,"line_start":62,"line_end":62,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":38990,"byte_end":38993,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, the registers must only be accessed along word boundaries,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":38998,"byte_end":39072,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ so convenient byte-sized representation wouldn't work on that","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":39077,"byte_end":39142,"line_start":65,"line_end":65,"column_start":5,"column_end":70}},{"value":"/ architecture.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":39147,"byte_end":39164,"line_start":66,"line_end":66,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40028,"byte_end":40041,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"clear_pending","qualname":"<NVIC>::clear_pending","value":"pub fn clear_pending<I>(&mut Self, I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Clears `interrupt`'s pending state\n","sig":null,"attributes":[{"value":"/ Clears `interrupt`'s pending state","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":39900,"byte_end":39938,"line_start":98,"line_end":98,"column_start":5,"column_end":43}},{"value":"deprecated(since = \"0.5.8\", note = \"Use `NVIC::unpend`\")","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":39943,"byte_end":40002,"line_start":99,"line_end":99,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40007,"byte_end":40016,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40194,"byte_end":40198,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"mask","qualname":"<NVIC>::mask","value":"pub fn mask<I>(I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Disables `interrupt`\n","sig":null,"attributes":[{"value":"/ Disables `interrupt`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40144,"byte_end":40168,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40173,"byte_end":40182,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40586,"byte_end":40592,"line_start":123,"line_end":123,"column_start":19,"column_end":25},"name":"unmask","qualname":"<NVIC>::unmask","value":"pub unsafe fn unmask<I>(I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Enables `interrupt`","sig":null,"attributes":[{"value":"/ Enables `interrupt`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40438,"byte_end":40461,"line_start":119,"line_end":119,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40466,"byte_end":40469,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function is `unsafe` because it can break mask-based critical sections","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40474,"byte_end":40553,"line_start":121,"line_end":121,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40558,"byte_end":40567,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40930,"byte_end":40937,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"disable","qualname":"<NVIC>::disable","value":"pub fn disable<I>(&mut Self, I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Disables `interrupt`\n","sig":null,"attributes":[{"value":"/ Disables `interrupt`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40818,"byte_end":40842,"line_start":132,"line_end":132,"column_start":5,"column_end":29}},{"value":"deprecated(since = \"0.6.1\", note = \"Use `NVIC::mask`\")","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40847,"byte_end":40904,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":40909,"byte_end":40918,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41288,"byte_end":41294,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"enable","qualname":"<NVIC>::enable","value":"pub fn enable<I>(&mut Self, I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" **WARNING** This method is a soundness hole in the API; it should actually be an `unsafe`\n function. Use `NVIC::unmask` which has the right unsafety.\n","sig":null,"attributes":[{"value":"/ **WARNING** This method is a soundness hole in the API; it should actually be an `unsafe`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41038,"byte_end":41131,"line_start":142,"line_end":142,"column_start":5,"column_end":98}},{"value":"/ function. Use `NVIC::unmask` which has the right unsafety.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41136,"byte_end":41198,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"deprecated(since = \"0.6.1\", note = \"Use `NVIC::unmask`\")","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41203,"byte_end":41262,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41267,"byte_end":41276,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41737,"byte_end":41749,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"get_priority","qualname":"<NVIC>::get_priority","value":"pub fn get_priority<I>(I) -> u8 where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Returns the NVIC priority of `interrupt`","sig":null,"attributes":[{"value":"/ Returns the NVIC priority of `interrupt`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41408,"byte_end":41452,"line_start":153,"line_end":153,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41457,"byte_end":41460,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ *NOTE* NVIC encodes priority in the highest bits of a byte so values like `1` and `2` map","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41465,"byte_end":41558,"line_start":155,"line_end":155,"column_start":5,"column_end":98}},{"value":"/ to the same priority. Also for NVIC priorities, a lower value (e.g. `16`) has higher","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41563,"byte_end":41651,"line_start":156,"line_end":156,"column_start":5,"column_end":93}},{"value":"/ priority (urgency) than a larger value (e.g. `32`).","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41656,"byte_end":41711,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":41716,"byte_end":41725,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":42774,"byte_end":42784,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<NVIC>::is_enabled","value":"pub fn is_enabled<I>(I) -> bool where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Checks if `interrupt` is enabled\n","sig":null,"attributes":[{"value":"/ Checks if `interrupt` is enabled","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":42712,"byte_end":42748,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":42753,"byte_end":42762,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43125,"byte_end":43135,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"is_pending","qualname":"<NVIC>::is_pending","value":"pub fn is_pending<I>(I) -> bool where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Checks if `interrupt` is pending\n","sig":null,"attributes":[{"value":"/ Checks if `interrupt` is pending","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43063,"byte_end":43099,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43104,"byte_end":43113,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43481,"byte_end":43485,"line_start":221,"line_end":221,"column_start":12,"column_end":16},"name":"pend","qualname":"<NVIC>::pend","value":"pub fn pend<I>(I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Forces `interrupt` into pending state\n","sig":null,"attributes":[{"value":"/ Forces `interrupt` into pending state","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43414,"byte_end":43455,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43460,"byte_end":43469,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43868,"byte_end":43879,"line_start":234,"line_end":234,"column_start":12,"column_end":23},"name":"set_pending","qualname":"<NVIC>::set_pending","value":"pub fn set_pending<I>(&mut Self, I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Forces `interrupt` into pending state\n","sig":null,"attributes":[{"value":"/ Forces `interrupt` into pending state","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43739,"byte_end":43780,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"deprecated(since = \"0.5.8\", note = \"Use `NVIC::pend`\")","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43785,"byte_end":43842,"line_start":232,"line_end":232,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43847,"byte_end":43856,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44597,"byte_end":44609,"line_start":254,"line_end":254,"column_start":19,"column_end":31},"name":"set_priority","qualname":"<NVIC>::set_priority","value":"pub unsafe fn set_priority<I>(&mut Self, I, u8) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Sets the \"priority\" of `interrupt` to `prio`","sig":null,"attributes":[{"value":"/ Sets the \"priority\" of `interrupt` to `prio`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":43980,"byte_end":44028,"line_start":241,"line_end":241,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44033,"byte_end":44036,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ *NOTE* See [`get_priority`](struct.NVIC.html#method.get_priority) method for an explanation","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44041,"byte_end":44136,"line_start":243,"line_end":243,"column_start":5,"column_end":100}},{"value":"/ of how NVIC priorities work.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44141,"byte_end":44173,"line_start":244,"line_end":244,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44178,"byte_end":44181,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, updating an interrupt priority requires a read-modify-write operation. On","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44186,"byte_end":44275,"line_start":246,"line_end":246,"column_start":5,"column_end":94}},{"value":"/ ARMv7-M, the operation is performed in a single atomic write operation.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44280,"byte_end":44355,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44360,"byte_end":44363,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44368,"byte_end":44382,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44387,"byte_end":44390,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Changing priority levels can break priority-based critical sections (see","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44395,"byte_end":44471,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ [`register::basepri`](../register/basepri/index.html)) and compromise memory safety.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44476,"byte_end":44564,"line_start":252,"line_end":252,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":44569,"byte_end":44578,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":45201,"byte_end":45207,"line_start":277,"line_end":277,"column_start":12,"column_end":18},"name":"unpend","qualname":"<NVIC>::unpend","value":"pub fn unpend<I>(I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Clears `interrupt`'s pending state\n","sig":null,"attributes":[{"value":"/ Clears `interrupt`'s pending state","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":45137,"byte_end":45175,"line_start":275,"line_end":275,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":45180,"byte_end":45189,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":186},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scb","qualname":"::peripheral::scb","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":209},{"krate":0,"index":430},{"krate":0,"index":450},{"krate":0,"index":449},{"krate":0,"index":447},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":211},{"krate":0,"index":452},{"krate":0,"index":470},{"krate":0,"index":469},{"krate":0,"index":467},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":472},{"krate":0,"index":488},{"krate":0,"index":487},{"krate":0,"index":485},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":246},{"krate":0,"index":248}],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"! System Control Block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":45775,"byte_end":45799,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":190},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46032,"byte_end":46045,"line_start":17,"line_end":17,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::scb::RegisterBlock","value":"RegisterBlock { icsr, vtor, aircr, scr, ccr, shpr, shcsr }","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":45991,"byte_end":46009,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46010,"byte_end":46020,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":191},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46092,"byte_end":46096,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"icsr","qualname":"::peripheral::scb::RegisterBlock::icsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Interrupt Control and State\n","sig":null,"attributes":[{"value":"/ Interrupt Control and State","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46052,"byte_end":46083,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":192},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46180,"byte_end":46184,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"vtor","qualname":"::peripheral::scb::RegisterBlock::vtor","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Vector Table Offset (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Vector Table Offset (not present on Cortex-M0 variants)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46112,"byte_end":46171,"line_start":21,"line_end":21,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":193},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46252,"byte_end":46257,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"aircr","qualname":"::peripheral::scb::RegisterBlock::aircr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Application Interrupt and Reset Control\n","sig":null,"attributes":[{"value":"/ Application Interrupt and Reset Control","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46200,"byte_end":46243,"line_start":24,"line_end":24,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":194},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46300,"byte_end":46303,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"name":"scr","qualname":"::peripheral::scb::RegisterBlock::scr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" System Control\n","sig":null,"attributes":[{"value":"/ System Control","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46273,"byte_end":46291,"line_start":27,"line_end":27,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":195},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46357,"byte_end":46360,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"name":"ccr","qualname":"::peripheral::scb::RegisterBlock::ccr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Configuration and Control\n","sig":null,"attributes":[{"value":"/ Configuration and Control","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46319,"byte_end":46348,"line_start":30,"line_end":30,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":197},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46861,"byte_end":46865,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"name":"shpr","qualname":"::peripheral::scb::RegisterBlock::shpr","value":"[volatile_register::RW<u32>; 2]","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" System Handler Priority (word accessible only on Cortex-M0 variants)","sig":null,"attributes":[{"value":"/ System Handler Priority (word accessible only on Cortex-M0 variants)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46653,"byte_end":46725,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46730,"byte_end":46733,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ On ARMv7-M, `shpr[0]` points to SHPR1","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46738,"byte_end":46779,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46784,"byte_end":46787,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, `shpr[0]` points to SHPR2","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46792,"byte_end":46833,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"cfg(armv6m)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46838,"byte_end":46852,"line_start":47,"line_end":47,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":199},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46931,"byte_end":46936,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"name":"shcsr","qualname":"::peripheral::scb::RegisterBlock::shcsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" System Handler Control and State\n","sig":null,"attributes":[{"value":"/ System Handler Control and State","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":46886,"byte_end":46922,"line_start":50,"line_end":50,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":50464,"byte_end":50475,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"vect_active","qualname":"<SCB>::vect_active","value":"pub fn vect_active() -> VectActive","parent":null,"children":[],"decl_id":null,"docs":" Returns the active exception number\n","sig":null,"attributes":[{"value":"/ Returns the active exception number","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":50399,"byte_end":50438,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":50443,"byte_end":50452,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":431},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":51752,"byte_end":51766,"line_start":201,"line_end":201,"column_start":5,"column_end":19},"name":"NonMaskableInt","qualname":"::peripheral::scb::Exception::NonMaskableInt","value":"Exception::NonMaskableInt","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Non maskable interrupt\n","sig":null,"attributes":[{"value":"/ Non maskable interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":51721,"byte_end":51747,"line_start":200,"line_end":200,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":433},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":51802,"byte_end":51811,"line_start":204,"line_end":204,"column_start":5,"column_end":14},"name":"HardFault","qualname":"::peripheral::scb::Exception::HardFault","value":"Exception::HardFault","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Hard fault interrupt\n","sig":null,"attributes":[{"value":"/ Hard fault interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":51773,"byte_end":51797,"line_start":203,"line_end":203,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":435},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52288,"byte_end":52294,"line_start":223,"line_end":223,"column_start":5,"column_end":11},"name":"SVCall","qualname":"::peripheral::scb::Exception::SVCall","value":"Exception::SVCall","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" SV call interrupt\n","sig":null,"attributes":[{"value":"/ SV call interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52262,"byte_end":52283,"line_start":222,"line_end":222,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":437},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52438,"byte_end":52444,"line_start":230,"line_end":230,"column_start":5,"column_end":11},"name":"PendSV","qualname":"::peripheral::scb::Exception::PendSV","value":"Exception::PendSV","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Pend SV interrupt\n","sig":null,"attributes":[{"value":"/ Pend SV interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52412,"byte_end":52433,"line_start":229,"line_end":229,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":439},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52481,"byte_end":52488,"line_start":233,"line_end":233,"column_start":5,"column_end":12},"name":"SysTick","qualname":"::peripheral::scb::Exception::SysTick","value":"Exception::SysTick","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" System Tick interrupt\n","sig":null,"attributes":[{"value":"/ System Tick interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52451,"byte_end":52476,"line_start":232,"line_end":232,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":430},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":51705,"byte_end":51714,"line_start":199,"line_end":199,"column_start":10,"column_end":19},"name":"Exception","qualname":"::peripheral::scb::Exception","value":"pub enum Exception {\n\n    /// Non maskable interrupt\n    NonMaskableInt,\n\n    /// Hard fault interrupt\n    HardFault,\n\n    /// SV call interrupt\n    SVCall,\n\n    /// Pend SV interrupt\n    PendSV,\n\n    /// System Tick interrupt\n    SysTick,\n}","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439}],"decl_id":null,"docs":" Processor core exceptions (internal interrupts)\n","sig":null,"attributes":[{"value":"/ Processor core exceptions (internal interrupts)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":51550,"byte_end":51601,"line_start":196,"line_end":196,"column_start":1,"column_end":52}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":51602,"byte_end":51650,"line_start":197,"line_end":197,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52665,"byte_end":52669,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"irqn","qualname":"<Exception>::irqn","value":"pub fn irqn(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Returns the IRQ number of this `Exception`","sig":null,"attributes":[{"value":"/ Returns the IRQ number of this `Exception`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52514,"byte_end":52560,"line_start":237,"line_end":237,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52565,"byte_end":52568,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The return value is always within the closed range `[-1, -14]`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52573,"byte_end":52639,"line_start":239,"line_end":239,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52644,"byte_end":52653,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":453},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53490,"byte_end":53500,"line_start":267,"line_end":267,"column_start":5,"column_end":15},"name":"ThreadMode","qualname":"::peripheral::scb::VectActive::ThreadMode","value":"VectActive::ThreadMode","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Thread mode\n","sig":null,"attributes":[{"value":"/ Thread mode","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53470,"byte_end":53485,"line_start":266,"line_end":266,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":455},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53562,"byte_end":53571,"line_start":270,"line_end":270,"column_start":5,"column_end":14},"name":"Exception","qualname":"::peripheral::scb::VectActive::Exception","value":"VectActive::Exception(Exception)","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Processor core exception (internal interrupts)\n","sig":null,"attributes":[{"value":"/ Processor core exception (internal interrupts)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53507,"byte_end":53557,"line_start":269,"line_end":269,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":458},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53645,"byte_end":53654,"line_start":273,"line_end":273,"column_start":5,"column_end":14},"name":"Interrupt","qualname":"::peripheral::scb::VectActive::Interrupt","value":"VectActive::Interrupt { irqn }","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Device specific exception (external interrupts)\n","sig":null,"attributes":[{"value":"/ Device specific exception (external interrupts)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53589,"byte_end":53640,"line_start":272,"line_end":272,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":452},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53453,"byte_end":53463,"line_start":265,"line_end":265,"column_start":10,"column_end":20},"name":"VectActive","qualname":"::peripheral::scb::VectActive","value":"pub enum VectActive {\n\n    /// Thread mode\n    ThreadMode,\n\n    /// Processor core exception (internal interrupts)\n    Exception(Exception),\n\n    /// Device specific exception (external interrupts)\n    Interrupt {\n        /// Interrupt number. This number is always within half open range `[0, 240)`\n        irqn: u8,\n    },\n}","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":458}],"decl_id":null,"docs":" Active exception number\n","sig":null,"attributes":[{"value":"/ Active exception number","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53322,"byte_end":53349,"line_start":262,"line_end":262,"column_start":1,"column_end":28}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53350,"byte_end":53398,"line_start":263,"line_end":263,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53858,"byte_end":53862,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"from","qualname":"<VectActive>::from","value":"pub fn from(u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `byte` into `VectActive`\n","sig":null,"attributes":[{"value":"/ Converts a `byte` into `VectActive`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53793,"byte_end":53832,"line_start":280,"line_end":280,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53837,"byte_end":53846,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":63847,"byte_end":63860,"line_start":606,"line_end":606,"column_start":12,"column_end":25},"name":"set_sleepdeep","qualname":"<SCB>::set_sleepdeep","value":"pub fn set_sleepdeep(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the SLEEPDEEP bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Set the SLEEPDEEP bit in the SCR register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":63776,"byte_end":63821,"line_start":604,"line_end":604,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":63826,"byte_end":63835,"line_start":605,"line_end":605,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64045,"byte_end":64060,"line_start":614,"line_end":614,"column_start":12,"column_end":27},"name":"clear_sleepdeep","qualname":"<SCB>::clear_sleepdeep","value":"pub fn clear_sleepdeep(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the SLEEPDEEP bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Clear the SLEEPDEEP bit in the SCR register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":63972,"byte_end":64019,"line_start":612,"line_end":612,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64024,"byte_end":64033,"line_start":613,"line_end":613,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64303,"byte_end":64318,"line_start":626,"line_end":626,"column_start":12,"column_end":27},"name":"set_sleeponexit","qualname":"<SCB>::set_sleeponexit","value":"pub fn set_sleeponexit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the SLEEPONEXIT bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Set the SLEEPONEXIT bit in the SCR register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64230,"byte_end":64277,"line_start":624,"line_end":624,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64282,"byte_end":64291,"line_start":625,"line_end":625,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64507,"byte_end":64524,"line_start":634,"line_end":634,"column_start":12,"column_end":29},"name":"clear_sleeponexit","qualname":"<SCB>::clear_sleeponexit","value":"pub fn clear_sleeponexit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the SLEEPONEXIT bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Clear the SLEEPONEXIT bit in the SCR register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64432,"byte_end":64481,"line_start":632,"line_end":632,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64486,"byte_end":64495,"line_start":633,"line_end":633,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64932,"byte_end":64944,"line_start":649,"line_end":649,"column_start":12,"column_end":24},"name":"system_reset","qualname":"<SCB>::system_reset","value":"pub fn system_reset(&mut Self) -> !","parent":null,"children":[],"decl_id":null,"docs":" Initiate a system reset request to reset the MCU\n","sig":null,"attributes":[{"value":"/ Initiate a system reset request to reset the MCU","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64788,"byte_end":64840,"line_start":646,"line_end":646,"column_start":5,"column_end":57}},{"value":"deprecated(since = \"0.6.1\", note = \"Use `SCB::sys_reset`\")","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64845,"byte_end":64906,"line_start":647,"line_end":647,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64911,"byte_end":64920,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":65538,"byte_end":65547,"line_start":669,"line_end":669,"column_start":12,"column_end":21},"name":"sys_reset","qualname":"<SCB>::sys_reset","value":"pub fn sys_reset() -> !","parent":null,"children":[],"decl_id":null,"docs":" Initiate a system reset request to reset the MCU\n","sig":null,"attributes":[{"value":"/ Initiate a system reset request to reset the MCU","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":65460,"byte_end":65512,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":65517,"byte_end":65526,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66352,"byte_end":66362,"line_start":697,"line_end":697,"column_start":12,"column_end":22},"name":"set_pendsv","qualname":"<SCB>::set_pendsv","value":"pub fn set_pendsv()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSVSET bit in the ICSR register which will pend the PendSV interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSVSET bit in the ICSR register which will pend the PendSV interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66243,"byte_end":66326,"line_start":695,"line_end":695,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66331,"byte_end":66340,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66580,"byte_end":66597,"line_start":705,"line_end":705,"column_start":12,"column_end":29},"name":"is_pendsv_pending","qualname":"<SCB>::is_pendsv_pending","value":"pub fn is_pendsv_pending() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if PENDSVSET bit in the ICSR register is set meaning PendSV interrupt is pending\n","sig":null,"attributes":[{"value":"/ Check if PENDSVSET bit in the ICSR register is set meaning PendSV interrupt is pending","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66464,"byte_end":66554,"line_start":703,"line_end":703,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66559,"byte_end":66568,"line_start":704,"line_end":704,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66826,"byte_end":66838,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"clear_pendsv","qualname":"<SCB>::clear_pendsv","value":"pub fn clear_pendsv()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSVCLR bit in the ICSR register which will clear a pending PendSV interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSVCLR bit in the ICSR register which will clear a pending PendSV interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66710,"byte_end":66800,"line_start":709,"line_end":709,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66805,"byte_end":66814,"line_start":710,"line_end":710,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67048,"byte_end":67058,"line_start":719,"line_end":719,"column_start":12,"column_end":22},"name":"set_pendst","qualname":"<SCB>::set_pendst","value":"pub fn set_pendst()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSTSET bit in the ICSR register which will pend a SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSTSET bit in the ICSR register which will pend a SysTick interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66940,"byte_end":67022,"line_start":717,"line_end":717,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67027,"byte_end":67036,"line_start":718,"line_end":718,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67277,"byte_end":67294,"line_start":727,"line_end":727,"column_start":12,"column_end":29},"name":"is_pendst_pending","qualname":"<SCB>::is_pendst_pending","value":"pub fn is_pendst_pending() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if PENDSTSET bit in the ICSR register is set meaning SysTick interrupt is pending\n","sig":null,"attributes":[{"value":"/ Check if PENDSTSET bit in the ICSR register is set meaning SysTick interrupt is pending","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67160,"byte_end":67251,"line_start":725,"line_end":725,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67256,"byte_end":67265,"line_start":726,"line_end":726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67524,"byte_end":67536,"line_start":733,"line_end":733,"column_start":12,"column_end":24},"name":"clear_pendst","qualname":"<SCB>::clear_pendst","value":"pub fn clear_pendst()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSTCLR bit in the ICSR register which will clear a pending SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSTCLR bit in the ICSR register which will clear a pending SysTick interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67407,"byte_end":67498,"line_start":731,"line_end":731,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67503,"byte_end":67512,"line_start":732,"line_end":732,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":473},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":68371,"byte_end":68377,"line_start":763,"line_end":763,"column_start":5,"column_end":11},"name":"SVCall","qualname":"::peripheral::scb::SystemHandler::SVCall","value":"SystemHandler::SVCall","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" SV call interrupt\n","sig":null,"attributes":[{"value":"/ SV call interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":68345,"byte_end":68366,"line_start":762,"line_end":762,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":475},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":68521,"byte_end":68527,"line_start":770,"line_end":770,"column_start":5,"column_end":11},"name":"PendSV","qualname":"::peripheral::scb::SystemHandler::PendSV","value":"SystemHandler::PendSV","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Pend SV interrupt\n","sig":null,"attributes":[{"value":"/ Pend SV interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":68495,"byte_end":68516,"line_start":769,"line_end":769,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":477},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":68564,"byte_end":68571,"line_start":773,"line_end":773,"column_start":5,"column_end":12},"name":"SysTick","qualname":"::peripheral::scb::SystemHandler::SysTick","value":"SystemHandler::SysTick","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" System Tick interrupt\n","sig":null,"attributes":[{"value":"/ System Tick interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":68534,"byte_end":68559,"line_start":772,"line_end":772,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":472},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67798,"byte_end":67811,"line_start":743,"line_end":743,"column_start":10,"column_end":23},"name":"SystemHandler","qualname":"::peripheral::scb::SystemHandler","value":"pub enum SystemHandler {\n\n    /// SV call interrupt\n    SVCall,\n\n    /// Pend SV interrupt\n    PendSV,\n\n    /// System Tick interrupt\n    SysTick,\n}","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477}],"decl_id":null,"docs":" System handlers, exceptions with configurable priority\n","sig":null,"attributes":[{"value":"/ System handlers, exceptions with configurable priority","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67636,"byte_end":67694,"line_start":740,"line_end":740,"column_start":1,"column_end":59}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":67695,"byte_end":67743,"line_start":741,"line_end":741,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":69474,"byte_end":69486,"line_start":802,"line_end":802,"column_start":12,"column_end":24},"name":"get_priority","qualname":"<SCB>::get_priority","value":"pub fn get_priority(SystemHandler) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the hardware priority of `system_handler`","sig":null,"attributes":[{"value":"/ Returns the hardware priority of `system_handler`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":69215,"byte_end":69268,"line_start":797,"line_end":797,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":69273,"byte_end":69276,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ *NOTE*: Hardware priority does not exactly match logical priority levels. See","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":69281,"byte_end":69362,"line_start":799,"line_end":799,"column_start":5,"column_end":86}},{"value":"/ [`NVIC.get_priority`](struct.NVIC.html#method.get_priority) for more details.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":69367,"byte_end":69448,"line_start":800,"line_end":800,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":69453,"byte_end":69462,"line_start":801,"line_end":801,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70720,"byte_end":70732,"line_start":833,"line_end":833,"column_start":19,"column_end":31},"name":"set_priority","qualname":"<SCB>::set_priority","value":"pub unsafe fn set_priority(&mut Self, SystemHandler, u8)","parent":null,"children":[],"decl_id":null,"docs":" Sets the hardware priority of `system_handler` to `prio`","sig":null,"attributes":[{"value":"/ Sets the hardware priority of `system_handler` to `prio`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70051,"byte_end":70111,"line_start":820,"line_end":820,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70116,"byte_end":70119,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ *NOTE*: Hardware priority does not exactly match logical priority levels. See","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70124,"byte_end":70205,"line_start":822,"line_end":822,"column_start":5,"column_end":86}},{"value":"/ [`NVIC.get_priority`](struct.NVIC.html#method.get_priority) for more details.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70210,"byte_end":70291,"line_start":823,"line_end":823,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70296,"byte_end":70299,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, updating a system handler priority requires a read-modify-write operation. On","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70304,"byte_end":70397,"line_start":825,"line_end":825,"column_start":5,"column_end":98}},{"value":"/ ARMv7-M, the operation is performed in a single, atomic write operation.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70402,"byte_end":70478,"line_start":826,"line_end":826,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70483,"byte_end":70486,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70491,"byte_end":70505,"line_start":828,"line_end":828,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70510,"byte_end":70513,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Changing priority levels can break priority-based critical sections (see","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70518,"byte_end":70594,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ [`register::basepri`](../register/basepri/index.html)) and compromise memory safety.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70599,"byte_end":70687,"line_start":831,"line_end":831,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":70692,"byte_end":70701,"line_start":832,"line_end":832,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":252},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"syst","qualname":"::peripheral::syst","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":490},{"krate":0,"index":504},{"krate":0,"index":503},{"krate":0,"index":501},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"decl_id":null,"docs":" SysTick: System Timer\n","sig":null,"attributes":[{"value":"! SysTick: System Timer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74108,"byte_end":74133,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":257},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74240,"byte_end":74253,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::syst::RegisterBlock","value":"RegisterBlock { csr, rvr, cvr, calib }","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74199,"byte_end":74217,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74218,"byte_end":74228,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":258},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74291,"byte_end":74294,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"name":"csr","qualname":"::peripheral::syst::RegisterBlock::csr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Control and Status\n","sig":null,"attributes":[{"value":"/ Control and Status","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74260,"byte_end":74282,"line_start":10,"line_end":10,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":259},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74334,"byte_end":74337,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"rvr","qualname":"::peripheral::syst::RegisterBlock::rvr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Reload Value\n","sig":null,"attributes":[{"value":"/ Reload Value","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74309,"byte_end":74325,"line_start":12,"line_end":12,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":260},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74378,"byte_end":74381,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"cvr","qualname":"::peripheral::syst::RegisterBlock::cvr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Current Value\n","sig":null,"attributes":[{"value":"/ Current Value","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74352,"byte_end":74369,"line_start":14,"line_end":14,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":261},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74426,"byte_end":74431,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"calib","qualname":"::peripheral::syst::RegisterBlock::calib","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Calibration Value\n","sig":null,"attributes":[{"value":"/ Calibration Value","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74396,"byte_end":74417,"line_start":16,"line_end":16,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":491},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74621,"byte_end":74625,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Core","qualname":"::peripheral::syst::SystClkSource::Core","value":"SystClkSource::Core","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Core-provided clock\n","sig":null,"attributes":[{"value":"/ Core-provided clock","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74593,"byte_end":74616,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":493},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74664,"byte_end":74672,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"External","qualname":"::peripheral::syst::SystClkSource::External","value":"SystClkSource::External","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" External reference clock\n","sig":null,"attributes":[{"value":"/ External reference clock","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74631,"byte_end":74659,"line_start":26,"line_end":26,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":490},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74573,"byte_end":74586,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"name":"SystClkSource","qualname":"::peripheral::syst::SystClkSource","value":"pub enum SystClkSource {\n\n    /// Core-provided clock\n    Core,\n\n    /// External reference clock\n    External,\n}","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":493}],"decl_id":null,"docs":" SysTick clock source\n","sig":null,"attributes":[{"value":"/ SysTick clock source","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74445,"byte_end":74469,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74470,"byte_end":74518,"line_start":21,"line_end":21,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75131,"byte_end":75144,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"clear_current","qualname":"<SYST>::clear_current","value":"pub fn clear_current(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears current value to 0","sig":null,"attributes":[{"value":"/ Clears current value to 0","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74973,"byte_end":75002,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75007,"byte_end":75010,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ After calling `clear_current()`, the next call to `has_wrapped()` will return `false`.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75015,"byte_end":75105,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75110,"byte_end":75119,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75252,"byte_end":75267,"line_start":51,"line_end":51,"column_start":12,"column_end":27},"name":"disable_counter","qualname":"<SYST>::disable_counter","value":"pub fn disable_counter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables counter\n","sig":null,"attributes":[{"value":"/ Disables counter","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75206,"byte_end":75226,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75231,"byte_end":75240,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75409,"byte_end":75426,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"disable_interrupt","qualname":"<SYST>::disable_interrupt","value":"pub fn disable_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Disables SysTick interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75353,"byte_end":75383,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75388,"byte_end":75397,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76001,"byte_end":76015,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"name":"enable_counter","qualname":"<SYST>::enable_counter","value":"pub fn enable_counter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables counter","sig":null,"attributes":[{"value":"/ Enables counter","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75513,"byte_end":75532,"line_start":61,"line_end":61,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75537,"byte_end":75540,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ *NOTE* The reference manual indicates that:","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75545,"byte_end":75592,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75597,"byte_end":75600,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ \"The SysTick counter reload and current value are undefined at reset, the correct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75605,"byte_end":75690,"line_start":65,"line_end":65,"column_start":5,"column_end":90}},{"value":"/ initialization sequence for the SysTick counter is:","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75695,"byte_end":75750,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75755,"byte_end":75758,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ - Program reload value","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75763,"byte_end":75789,"line_start":68,"line_end":68,"column_start":5,"column_end":31}},{"value":"/ - Clear current value","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75794,"byte_end":75819,"line_start":69,"line_end":69,"column_start":5,"column_end":30}},{"value":"/ - Program Control and Status register\"","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75824,"byte_end":75866,"line_start":70,"line_end":70,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75871,"byte_end":75874,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The sequence translates to `self.set_reload(x); self.clear_current(); self.enable_counter()`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75879,"byte_end":75975,"line_start":72,"line_end":72,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":75980,"byte_end":75989,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76155,"byte_end":76171,"line_start":80,"line_end":80,"column_start":12,"column_end":28},"name":"enable_interrupt","qualname":"<SYST>::enable_interrupt","value":"pub fn enable_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Enables SysTick interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76100,"byte_end":76129,"line_start":78,"line_end":78,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76134,"byte_end":76143,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76492,"byte_end":76508,"line_start":89,"line_end":89,"column_start":12,"column_end":28},"name":"get_clock_source","qualname":"<SYST>::get_clock_source","value":"pub fn get_clock_source(&mut Self) -> SystClkSource","parent":null,"children":[],"decl_id":null,"docs":" Gets clock source","sig":null,"attributes":[{"value":"/ Gets clock source","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76257,"byte_end":76278,"line_start":84,"line_end":84,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76283,"byte_end":76286,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76291,"byte_end":76387,"line_start":86,"line_end":86,"column_start":5,"column_end":101}},{"value":"/ bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76392,"byte_end":76466,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76471,"byte_end":76480,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76805,"byte_end":76816,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_current","qualname":"<SYST>::get_current","value":"pub fn get_current() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets current value\n","sig":null,"attributes":[{"value":"/ Gets current value","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76757,"byte_end":76779,"line_start":98,"line_end":98,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76784,"byte_end":76793,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76988,"byte_end":76998,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"get_reload","qualname":"<SYST>::get_reload","value":"pub fn get_reload() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets reload value\n","sig":null,"attributes":[{"value":"/ Gets reload value","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76941,"byte_end":76962,"line_start":105,"line_end":105,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":76967,"byte_end":76976,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77345,"byte_end":77363,"line_start":118,"line_end":118,"column_start":12,"column_end":30},"name":"get_ticks_per_10ms","qualname":"<SYST>::get_ticks_per_10ms","value":"pub fn get_ticks_per_10ms() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the reload value with which the counter would wrap once per 10\n ms","sig":null,"attributes":[{"value":"/ Returns the reload value with which the counter would wrap once per 10","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77123,"byte_end":77197,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ ms","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77202,"byte_end":77208,"line_start":113,"line_end":113,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77213,"byte_end":77216,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Returns `0` if the value is not known (e.g. because the clock can","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77221,"byte_end":77290,"line_start":115,"line_end":115,"column_start":5,"column_end":74}},{"value":"/ change dynamically).","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77295,"byte_end":77319,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77324,"byte_end":77333,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77590,"byte_end":77609,"line_start":125,"line_end":125,"column_start":12,"column_end":31},"name":"has_reference_clock","qualname":"<SYST>::has_reference_clock","value":"pub fn has_reference_clock() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if an external reference clock is available\n","sig":null,"attributes":[{"value":"/ Checks if an external reference clock is available","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77510,"byte_end":77564,"line_start":123,"line_end":123,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77569,"byte_end":77578,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77999,"byte_end":78010,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"has_wrapped","qualname":"<SYST>::has_wrapped","value":"pub fn has_wrapped(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the counter wrapped (underflowed) since the last check","sig":null,"attributes":[{"value":"/ Checks if the counter wrapped (underflowed) since the last check","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77761,"byte_end":77829,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77834,"byte_end":77837,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and will clear","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77842,"byte_end":77935,"line_start":132,"line_end":132,"column_start":5,"column_end":98}},{"value":"/ the bit of the read register.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77940,"byte_end":77973,"line_start":133,"line_end":133,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":77978,"byte_end":77987,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78339,"byte_end":78357,"line_start":144,"line_end":144,"column_start":12,"column_end":30},"name":"is_counter_enabled","qualname":"<SYST>::is_counter_enabled","value":"pub fn is_counter_enabled(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if counter is enabled","sig":null,"attributes":[{"value":"/ Checks if counter is enabled","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78093,"byte_end":78125,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78130,"byte_end":78133,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78138,"byte_end":78234,"line_start":141,"line_end":141,"column_start":5,"column_end":101}},{"value":"/ bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78239,"byte_end":78313,"line_start":142,"line_end":142,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78318,"byte_end":78327,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78693,"byte_end":78713,"line_start":153,"line_end":153,"column_start":12,"column_end":32},"name":"is_interrupt_enabled","qualname":"<SYST>::is_interrupt_enabled","value":"pub fn is_interrupt_enabled(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if SysTick interrupt is enabled","sig":null,"attributes":[{"value":"/ Checks if SysTick interrupt is enabled","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78437,"byte_end":78479,"line_start":148,"line_end":148,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78484,"byte_end":78487,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78492,"byte_end":78588,"line_start":150,"line_end":150,"column_start":5,"column_end":101}},{"value":"/ bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78593,"byte_end":78667,"line_start":151,"line_end":151,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78672,"byte_end":78681,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79034,"byte_end":79044,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"is_precise","qualname":"<SYST>::is_precise","value":"pub fn is_precise() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the calibration value is precise","sig":null,"attributes":[{"value":"/ Checks if the calibration value is precise","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78794,"byte_end":78840,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78845,"byte_end":78848,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if using the reload value returned by","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78853,"byte_end":78910,"line_start":159,"line_end":159,"column_start":5,"column_end":62}},{"value":"/ `get_ticks_per_10ms()` may result in a period significantly deviating","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78915,"byte_end":78988,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ from 10 ms.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":78993,"byte_end":79008,"line_start":161,"line_end":161,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79013,"byte_end":79022,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79242,"byte_end":79258,"line_start":170,"line_end":170,"column_start":12,"column_end":28},"name":"set_clock_source","qualname":"<SYST>::set_clock_source","value":"pub fn set_clock_source(&mut Self, SystClkSource)","parent":null,"children":[],"decl_id":null,"docs":" Sets clock source\n","sig":null,"attributes":[{"value":"/ Sets clock source","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79195,"byte_end":79216,"line_start":168,"line_end":168,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79221,"byte_end":79230,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79738,"byte_end":79748,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"set_reload","qualname":"<SYST>::set_reload","value":"pub fn set_reload(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets reload value","sig":null,"attributes":[{"value":"/ Sets reload value","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79534,"byte_end":79555,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79560,"byte_end":79563,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Valid values are between `1` and `0x00ffffff`.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79568,"byte_end":79618,"line_start":179,"line_end":179,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79623,"byte_end":79626,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ *NOTE* To make the timer wrap every `N` ticks set the reload value to `N - 1`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79631,"byte_end":79712,"line_start":181,"line_end":181,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":79717,"byte_end":79726,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":292},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20471,"byte_end":20482,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"Peripherals","qualname":"::peripheral::Peripherals","value":"Peripherals { CBP, CPUID, DCB, DWT, FPB, FPU, ITM, MPU, NVIC, SCB, SYST, TPIU }","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" Core peripherals\n","sig":null,"attributes":[{"value":"/ Core peripherals","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20414,"byte_end":20434,"line_start":103,"line_end":103,"column_start":1,"column_end":21}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20435,"byte_end":20459,"line_start":104,"line_end":104,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20587,"byte_end":20590,"line_start":107,"line_end":107,"column_start":9,"column_end":12},"name":"CBP","qualname":"::peripheral::Peripherals::CBP","value":"peripheral::CBP","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Cache and branch predictor maintenance operations (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Cache and branch predictor maintenance operations (not present on Cortex-M0 variants)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20489,"byte_end":20578,"line_start":106,"line_end":106,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":294},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20620,"byte_end":20625,"line_start":110,"line_end":110,"column_start":9,"column_end":14},"name":"CPUID","qualname":"::peripheral::Peripherals::CPUID","value":"peripheral::CPUID","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" CPUID\n","sig":null,"attributes":[{"value":"/ CPUID","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20602,"byte_end":20611,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":295},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20671,"byte_end":20674,"line_start":113,"line_end":113,"column_start":9,"column_end":12},"name":"DCB","qualname":"::peripheral::Peripherals::DCB","value":"peripheral::DCB","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Debug Control Block\n","sig":null,"attributes":[{"value":"/ Debug Control Block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20639,"byte_end":20662,"line_start":112,"line_end":112,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":296},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20729,"byte_end":20732,"line_start":116,"line_end":116,"column_start":9,"column_end":12},"name":"DWT","qualname":"::peripheral::Peripherals::DWT","value":"peripheral::DWT","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Data Watchpoint and Trace unit\n","sig":null,"attributes":[{"value":"/ Data Watchpoint and Trace unit","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20686,"byte_end":20720,"line_start":115,"line_end":115,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":297},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20824,"byte_end":20827,"line_start":119,"line_end":119,"column_start":9,"column_end":12},"name":"FPB","qualname":"::peripheral::Peripherals::FPB","value":"peripheral::FPB","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Flash Patch and Breakpoint unit (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Flash Patch and Breakpoint unit (not present on Cortex-M0 variants)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20744,"byte_end":20815,"line_start":118,"line_end":118,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":298},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20913,"byte_end":20916,"line_start":122,"line_end":122,"column_start":9,"column_end":12},"name":"FPU","qualname":"::peripheral::Peripherals::FPU","value":"peripheral::FPU","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Floating Point Unit (only present on `thumbv7em-none-eabihf`)\n","sig":null,"attributes":[{"value":"/ Floating Point Unit (only present on `thumbv7em-none-eabihf`)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20839,"byte_end":20904,"line_start":121,"line_end":121,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":299},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21008,"byte_end":21011,"line_start":125,"line_end":125,"column_start":9,"column_end":12},"name":"ITM","qualname":"::peripheral::Peripherals::ITM","value":"peripheral::ITM","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Instrumentation Trace Macrocell (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Instrumentation Trace Macrocell (not present on Cortex-M0 variants)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20928,"byte_end":20999,"line_start":124,"line_end":124,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":300},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21058,"byte_end":21061,"line_start":128,"line_end":128,"column_start":9,"column_end":12},"name":"MPU","qualname":"::peripheral::Peripherals::MPU","value":"peripheral::MPU","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21023,"byte_end":21049,"line_start":127,"line_end":127,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":301},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21120,"byte_end":21124,"line_start":131,"line_end":131,"column_start":9,"column_end":13},"name":"NVIC","qualname":"::peripheral::Peripherals::NVIC","value":"peripheral::NVIC","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21073,"byte_end":21111,"line_start":130,"line_end":130,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":302},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21170,"byte_end":21173,"line_start":134,"line_end":134,"column_start":9,"column_end":12},"name":"SCB","qualname":"::peripheral::Peripherals::SCB","value":"peripheral::SCB","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21137,"byte_end":21161,"line_start":133,"line_end":133,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":303},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21219,"byte_end":21223,"line_start":137,"line_end":137,"column_start":9,"column_end":13},"name":"SYST","qualname":"::peripheral::Peripherals::SYST","value":"peripheral::SYST","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" SysTick: System Timer\n","sig":null,"attributes":[{"value":"/ SysTick: System Timer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21185,"byte_end":21210,"line_start":136,"line_end":136,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":304},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21310,"byte_end":21314,"line_start":140,"line_end":140,"column_start":9,"column_end":13},"name":"TPIU","qualname":"::peripheral::Peripherals::TPIU","value":"peripheral::TPIU","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Trace Port Interface Unit (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Trace Port Interface Unit (not present on Cortex-M0 variants)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21236,"byte_end":21301,"line_start":139,"line_end":139,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21768,"byte_end":21772,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"take","qualname":"<Peripherals>::take","value":"pub fn take() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the core peripherals *once*\n","sig":null,"attributes":[{"value":"/ Returns all the core peripherals *once*","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21699,"byte_end":21742,"line_start":152,"line_end":152,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21747,"byte_end":21756,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":22066,"byte_end":22071,"line_start":166,"line_end":166,"column_start":19,"column_end":24},"name":"steal","qualname":"<Peripherals>::steal","value":"pub unsafe fn steal() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unchecked version of `Peripherals::take`\n","sig":null,"attributes":[{"value":"/ Unchecked version of `Peripherals::take`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21989,"byte_end":22033,"line_start":164,"line_end":164,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":22038,"byte_end":22047,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23135,"byte_end":23138,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"CBP","qualname":"::peripheral::CBP","value":"CBP {  }","parent":null,"children":[{"krate":0,"index":312}],"decl_id":null,"docs":" Cache and branch predictor maintenance operations\n","sig":null,"attributes":[{"value":"/ Cache and branch predictor maintenance operations","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23070,"byte_end":23123,"line_start":210,"line_end":210,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":314},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23749,"byte_end":23754,"line_start":244,"line_end":244,"column_start":12,"column_end":17},"name":"CPUID","qualname":"::peripheral::CPUID","value":"CPUID {  }","parent":null,"children":[{"krate":0,"index":315}],"decl_id":null,"docs":" CPUID\n","sig":null,"attributes":[{"value":"/ CPUID","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23728,"byte_end":23737,"line_start":243,"line_end":243,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23922,"byte_end":23925,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"ptr","qualname":"<CPUID>::ptr","value":"pub fn ptr() -> *const self::cpuid::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23845,"byte_end":23888,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23893,"byte_end":23910,"line_start":252,"line_end":252,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":322},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24221,"byte_end":24224,"line_start":268,"line_end":268,"column_start":12,"column_end":15},"name":"DCB","qualname":"::peripheral::DCB","value":"DCB {  }","parent":null,"children":[{"krate":0,"index":323}],"decl_id":null,"docs":" Debug Control Block\n","sig":null,"attributes":[{"value":"/ Debug Control Block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24186,"byte_end":24209,"line_start":267,"line_end":267,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24388,"byte_end":24391,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"ptr","qualname":"<DCB>::ptr","value":"pub fn ptr() -> *const dcb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24311,"byte_end":24354,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24359,"byte_end":24376,"line_start":276,"line_end":276,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24685,"byte_end":24688,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"DWT","qualname":"::peripheral::DWT","value":"DWT {  }","parent":null,"children":[{"krate":0,"index":331}],"decl_id":null,"docs":" Data Watchpoint and Trace unit\n","sig":null,"attributes":[{"value":"/ Data Watchpoint and Trace unit","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24639,"byte_end":24673,"line_start":291,"line_end":291,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24852,"byte_end":24855,"line_start":301,"line_end":301,"column_start":12,"column_end":15},"name":"ptr","qualname":"<DWT>::ptr","value":"pub fn ptr() -> *const dwt::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24775,"byte_end":24818,"line_start":299,"line_end":299,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24823,"byte_end":24840,"line_start":300,"line_end":300,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":25151,"byte_end":25154,"line_start":316,"line_end":316,"column_start":12,"column_end":15},"name":"FPB","qualname":"::peripheral::FPB","value":"FPB {  }","parent":null,"children":[{"krate":0,"index":339}],"decl_id":null,"docs":" Flash Patch and Breakpoint unit\n","sig":null,"attributes":[{"value":"/ Flash Patch and Breakpoint unit","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":25104,"byte_end":25139,"line_start":315,"line_end":315,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":25645,"byte_end":25648,"line_start":342,"line_end":342,"column_start":12,"column_end":15},"name":"FPU","qualname":"::peripheral::FPU","value":"FPU {  }","parent":null,"children":[{"krate":0,"index":342}],"decl_id":null,"docs":" Floating Point Unit\n","sig":null,"attributes":[{"value":"/ Floating Point Unit","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":25610,"byte_end":25633,"line_start":341,"line_end":341,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26201,"byte_end":26204,"line_start":368,"line_end":368,"column_start":12,"column_end":15},"name":"ITM","qualname":"::peripheral::ITM","value":"ITM {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" Instrumentation Trace Macrocell\n","sig":null,"attributes":[{"value":"/ Instrumentation Trace Macrocell","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26154,"byte_end":26189,"line_start":367,"line_end":367,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26862,"byte_end":26865,"line_start":402,"line_end":402,"column_start":12,"column_end":15},"name":"MPU","qualname":"::peripheral::MPU","value":"MPU {  }","parent":null,"children":[{"krate":0,"index":348}],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26824,"byte_end":26850,"line_start":401,"line_end":401,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27029,"byte_end":27032,"line_start":411,"line_end":411,"column_start":12,"column_end":15},"name":"ptr","qualname":"<MPU>::ptr","value":"pub fn ptr() -> *const mpu::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26952,"byte_end":26995,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27000,"byte_end":27017,"line_start":410,"line_end":410,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27331,"byte_end":27335,"line_start":426,"line_end":426,"column_start":12,"column_end":16},"name":"NVIC","qualname":"::peripheral::NVIC","value":"NVIC {  }","parent":null,"children":[{"krate":0,"index":356}],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27281,"byte_end":27319,"line_start":425,"line_end":425,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27501,"byte_end":27504,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"ptr","qualname":"<NVIC>::ptr","value":"pub fn ptr() -> *const nvic::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27424,"byte_end":27467,"line_start":433,"line_end":433,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27472,"byte_end":27489,"line_start":434,"line_end":434,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":363},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27792,"byte_end":27795,"line_start":450,"line_end":450,"column_start":12,"column_end":15},"name":"SCB","qualname":"::peripheral::SCB","value":"SCB {  }","parent":null,"children":[{"krate":0,"index":364}],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27756,"byte_end":27780,"line_start":449,"line_end":449,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27959,"byte_end":27962,"line_start":459,"line_end":459,"column_start":12,"column_end":15},"name":"ptr","qualname":"<SCB>::ptr","value":"pub fn ptr() -> *const scb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27882,"byte_end":27925,"line_start":457,"line_end":457,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27930,"byte_end":27947,"line_start":458,"line_end":458,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28248,"byte_end":28252,"line_start":474,"line_end":474,"column_start":12,"column_end":16},"name":"SYST","qualname":"::peripheral::SYST","value":"SYST {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" SysTick: System Timer\n","sig":null,"attributes":[{"value":"/ SysTick: System Timer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28211,"byte_end":28236,"line_start":473,"line_end":473,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28418,"byte_end":28421,"line_start":483,"line_end":483,"column_start":12,"column_end":15},"name":"ptr","qualname":"<SYST>::ptr","value":"pub fn ptr() -> *const syst::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28341,"byte_end":28384,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28389,"byte_end":28406,"line_start":482,"line_end":482,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28714,"byte_end":28718,"line_start":498,"line_end":498,"column_start":12,"column_end":16},"name":"TPIU","qualname":"::peripheral::TPIU","value":"TPIU {  }","parent":null,"children":[{"krate":0,"index":380}],"decl_id":null,"docs":" Trace Port Interface Unit\n","sig":null,"attributes":[{"value":"/ Trace Port Interface Unit","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28673,"byte_end":28702,"line_start":497,"line_end":497,"column_start":1,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":382},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"register","qualname":"::register","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":408},{"krate":0,"index":415},{"krate":0,"index":422}],"decl_id":null,"docs":" Processor core registers","sig":null,"attributes":[{"value":"! Processor core registers","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":79824,"byte_end":79852,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":79853,"byte_end":79856,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The following registers can only be accessed in PRIVILEGED mode:","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":79857,"byte_end":79925,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":79926,"byte_end":79929,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! - BASEPRI","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":79930,"byte_end":79943,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"! - CONTROL","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":79944,"byte_end":79957,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"! - FAULTMASK","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":79958,"byte_end":79973,"line_start":7,"line_end":7,"column_start":1,"column_end":16}},{"value":"! - MSP","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":79974,"byte_end":79983,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"! - PRIMASK","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":79984,"byte_end":79997,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":79998,"byte_end":80001,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! The rest of registers (see list below) can be accessed in either, PRIVILEGED","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80002,"byte_end":80082,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! or UNPRIVILEGED, mode.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80083,"byte_end":80109,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80110,"byte_end":80113,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! - APSR","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80114,"byte_end":80124,"line_start":14,"line_end":14,"column_start":1,"column_end":11}},{"value":"! - LR","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80125,"byte_end":80133,"line_start":15,"line_end":15,"column_start":1,"column_end":9}},{"value":"! - PC","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80134,"byte_end":80142,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"! - PSP","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80143,"byte_end":80152,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80153,"byte_end":80156,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! The following registers are NOT available on ARMv6-M devices","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80157,"byte_end":80221,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"! (`thumbv6m-none-eabi`):","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80222,"byte_end":80249,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80250,"byte_end":80253,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! - BASEPRI","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80254,"byte_end":80267,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"! - FAULTMASK","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80268,"byte_end":80283,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80284,"byte_end":80287,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # References","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80288,"byte_end":80304,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80305,"byte_end":80308,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! - Cortex-M* Devices Generic User Guide - Section 2.1.3 Core registers","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80309,"byte_end":80382,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":383},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"control","qualname":"::register::control","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":511},{"krate":0,"index":510},{"krate":0,"index":508},{"krate":0,"index":384},{"krate":0,"index":513},{"krate":0,"index":527},{"krate":0,"index":526},{"krate":0,"index":524},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":393},{"krate":0,"index":529},{"krate":0,"index":543},{"krate":0,"index":542},{"krate":0,"index":540},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":396},{"krate":0,"index":545},{"krate":0,"index":559},{"krate":0,"index":558},{"krate":0,"index":556},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405}],"decl_id":null,"docs":" Control register\n","sig":null,"attributes":[{"value":"! Control register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81565,"byte_end":81585,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81698,"byte_end":81705,"line_start":6,"line_end":6,"column_start":12,"column_end":19},"name":"Control","qualname":"::register::control::Control","value":"Control {  }","parent":null,"children":[{"krate":0,"index":507}],"decl_id":null,"docs":" Control register\n","sig":null,"attributes":[{"value":"/ Control register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81587,"byte_end":81607,"line_start":3,"line_end":3,"column_start":1,"column_end":21}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81608,"byte_end":81656,"line_start":4,"line_end":4,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81815,"byte_end":81824,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"from_bits","qualname":"<Control>::from_bits","value":"pub fn from_bits(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Control` value from raw bits.\n","sig":null,"attributes":[{"value":"/ Creates a `Control` value from raw bits.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81745,"byte_end":81789,"line_start":11,"line_end":11,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81794,"byte_end":81803,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81957,"byte_end":81961,"line_start":19,"line_end":19,"column_start":12,"column_end":16},"name":"bits","qualname":"<Control>::bits","value":"pub fn bits(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of the register as raw bits\n","sig":null,"attributes":[{"value":"/ Returns the contents of the register as raw bits","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81879,"byte_end":81931,"line_start":17,"line_end":17,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81936,"byte_end":81945,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82063,"byte_end":82068,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"npriv","qualname":"<Control>::npriv","value":"pub fn npriv(Self) -> Npriv","parent":null,"children":[],"decl_id":null,"docs":" Thread mode privilege level\n","sig":null,"attributes":[{"value":"/ Thread mode privilege level","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82006,"byte_end":82037,"line_start":23,"line_end":23,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82042,"byte_end":82051,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82313,"byte_end":82322,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"set_npriv","qualname":"<Control>::set_npriv","value":"pub fn set_npriv(&mut Self, Npriv)","parent":null,"children":[],"decl_id":null,"docs":" Sets the thread mode privilege level value (nPRIV).\n","sig":null,"attributes":[{"value":"/ Sets the thread mode privilege level value (nPRIV).","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82232,"byte_end":82287,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82292,"byte_end":82301,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82587,"byte_end":82592,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"spsel","qualname":"<Control>::spsel","value":"pub fn spsel(Self) -> Spsel","parent":null,"children":[],"decl_id":null,"docs":" Currently active stack pointer\n","sig":null,"attributes":[{"value":"/ Currently active stack pointer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82527,"byte_end":82561,"line_start":43,"line_end":43,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82566,"byte_end":82575,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82791,"byte_end":82800,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"set_spsel","qualname":"<Control>::set_spsel","value":"pub fn set_spsel(&mut Self, Spsel)","parent":null,"children":[],"decl_id":null,"docs":" Sets the SPSEL value.\n","sig":null,"attributes":[{"value":"/ Sets the SPSEL value.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82740,"byte_end":82765,"line_start":53,"line_end":53,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82770,"byte_end":82779,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83069,"byte_end":83073,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"fpca","qualname":"<Control>::fpca","value":"pub fn fpca(Self) -> Fpca","parent":null,"children":[],"decl_id":null,"docs":" Whether context floating-point is currently active\n","sig":null,"attributes":[{"value":"/ Whether context floating-point is currently active","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":82989,"byte_end":83043,"line_start":63,"line_end":63,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83048,"byte_end":83057,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83277,"byte_end":83285,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"set_fpca","qualname":"<Control>::set_fpca","value":"pub fn set_fpca(&mut Self, Fpca)","parent":null,"children":[],"decl_id":null,"docs":" Sets the FPCA value.\n","sig":null,"attributes":[{"value":"/ Sets the FPCA value.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83227,"byte_end":83251,"line_start":73,"line_end":73,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83256,"byte_end":83265,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":514},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83642,"byte_end":83652,"line_start":89,"line_end":89,"column_start":5,"column_end":15},"name":"Privileged","qualname":"::register::control::Npriv::Privileged","value":"Npriv::Privileged","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Privileged\n","sig":null,"attributes":[{"value":"/ Privileged","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83623,"byte_end":83637,"line_start":88,"line_end":88,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":516},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83679,"byte_end":83691,"line_start":91,"line_end":91,"column_start":5,"column_end":17},"name":"Unprivileged","qualname":"::register::control::Npriv::Unprivileged","value":"Npriv::Unprivileged","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Unprivileged\n","sig":null,"attributes":[{"value":"/ Unprivileged","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83658,"byte_end":83674,"line_start":90,"line_end":90,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":513},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83611,"byte_end":83616,"line_start":87,"line_end":87,"column_start":10,"column_end":15},"name":"Npriv","qualname":"::register::control::Npriv","value":"pub enum Npriv {\n\n    /// Privileged\n    Privileged,\n\n    /// Unprivileged\n    Unprivileged,\n}","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":516}],"decl_id":null,"docs":" Thread mode privilege level\n","sig":null,"attributes":[{"value":"/ Thread mode privilege level","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83476,"byte_end":83507,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83508,"byte_end":83556,"line_start":85,"line_end":85,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83772,"byte_end":83785,"line_start":97,"line_end":97,"column_start":12,"column_end":25},"name":"is_privileged","qualname":"<Npriv>::is_privileged","value":"pub fn is_privileged(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is in privileged thread mode?\n","sig":null,"attributes":[{"value":"/ Is in privileged thread mode?","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83713,"byte_end":83746,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83751,"byte_end":83760,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83908,"byte_end":83923,"line_start":103,"line_end":103,"column_start":12,"column_end":27},"name":"is_unprivileged","qualname":"<Npriv>::is_unprivileged","value":"pub fn is_unprivileged(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is in unprivileged thread mode?\n","sig":null,"attributes":[{"value":"/ Is in unprivileged thread mode?","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83847,"byte_end":83882,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83887,"byte_end":83896,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":530},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84176,"byte_end":84179,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"Msp","qualname":"::register::control::Spsel::Msp","value":"Spsel::Msp","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" MSP is the current stack pointer\n","sig":null,"attributes":[{"value":"/ MSP is the current stack pointer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84135,"byte_end":84171,"line_start":112,"line_end":112,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":532},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84226,"byte_end":84229,"line_start":115,"line_end":115,"column_start":5,"column_end":8},"name":"Psp","qualname":"::register::control::Spsel::Psp","value":"Spsel::Psp","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" PSP is the current stack pointer\n","sig":null,"attributes":[{"value":"/ PSP is the current stack pointer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84185,"byte_end":84221,"line_start":114,"line_end":114,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":529},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84123,"byte_end":84128,"line_start":111,"line_end":111,"column_start":10,"column_end":15},"name":"Spsel","qualname":"::register::control::Spsel","value":"pub enum Spsel {\n\n    /// MSP is the current stack pointer\n    Msp,\n\n    /// PSP is the current stack pointer\n    Psp,\n}","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":532}],"decl_id":null,"docs":" Currently active stack pointer\n","sig":null,"attributes":[{"value":"/ Currently active stack pointer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83985,"byte_end":84019,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84020,"byte_end":84068,"line_start":109,"line_end":109,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84314,"byte_end":84320,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"is_msp","qualname":"<Spsel>::is_msp","value":"pub fn is_msp(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is MSP the current stack pointer?\n","sig":null,"attributes":[{"value":"/ Is MSP the current stack pointer?","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84251,"byte_end":84288,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84293,"byte_end":84302,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84438,"byte_end":84444,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"is_psp","qualname":"<Spsel>::is_psp","value":"pub fn is_psp(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is PSP the current stack pointer?\n","sig":null,"attributes":[{"value":"/ Is PSP the current stack pointer?","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84375,"byte_end":84412,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84417,"byte_end":84426,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":546},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84705,"byte_end":84711,"line_start":137,"line_end":137,"column_start":5,"column_end":11},"name":"Active","qualname":"::register::control::Fpca::Active","value":"Fpca::Active","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Floating-point context active.\n","sig":null,"attributes":[{"value":"/ Floating-point context active.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84666,"byte_end":84700,"line_start":136,"line_end":136,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":548},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84758,"byte_end":84767,"line_start":139,"line_end":139,"column_start":5,"column_end":14},"name":"NotActive","qualname":"::register::control::Fpca::NotActive","value":"Fpca::NotActive","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" No floating-point context active\n","sig":null,"attributes":[{"value":"/ No floating-point context active","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84717,"byte_end":84753,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":545},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84655,"byte_end":84659,"line_start":135,"line_end":135,"column_start":10,"column_end":14},"name":"Fpca","qualname":"::register::control::Fpca","value":"pub enum Fpca {\n\n    /// Floating-point context active.\n    Active,\n\n    /// No floating-point context active\n    NotActive,\n}","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":548}],"decl_id":null,"docs":" Whether context floating-point is currently active\n","sig":null,"attributes":[{"value":"/ Whether context floating-point is currently active","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84497,"byte_end":84551,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84552,"byte_end":84600,"line_start":133,"line_end":133,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84853,"byte_end":84862,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"is_active","qualname":"<Fpca>::is_active","value":"pub fn is_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is a floating-point context active?\n","sig":null,"attributes":[{"value":"/ Is a floating-point context active?","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84788,"byte_end":84827,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84832,"byte_end":84841,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84988,"byte_end":85001,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"is_not_active","qualname":"<Fpca>::is_not_active","value":"pub fn is_not_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is a floating-point context not active?\n","sig":null,"attributes":[{"value":"/ Is a floating-point context not active?","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84919,"byte_end":84962,"line_start":149,"line_end":149,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84967,"byte_end":84976,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":402},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":85103,"byte_end":85107,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"read","qualname":"::register::control::read","value":"pub fn read() -> Control","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":85059,"byte_end":85085,"line_start":156,"line_end":156,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":85086,"byte_end":85095,"line_start":157,"line_end":157,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":405},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":85866,"byte_end":85871,"line_start":190,"line_end":190,"column_start":15,"column_end":20},"name":"write","qualname":"::register::control::write","value":"pub unsafe fn write(Control)","parent":null,"children":[],"decl_id":null,"docs":" Writes to the CPU register.\n","sig":null,"attributes":[{"value":"/ Writes to the CPU register.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":85810,"byte_end":85841,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":85842,"byte_end":85851,"line_start":189,"line_end":189,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":408},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/msp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"msp","qualname":"::register::msp","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/msp.rs","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":412}],"decl_id":null,"docs":" Main Stack Pointer\n","sig":null,"attributes":[{"value":"! Main Stack Pointer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/msp.rs","byte_start":86475,"byte_end":86497,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":409},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/msp.rs","byte_start":86543,"byte_end":86547,"line_start":5,"line_end":5,"column_start":8,"column_end":12},"name":"read","qualname":"::register::msp::read","value":"pub fn read() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/msp.rs","byte_start":86499,"byte_end":86525,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/msp.rs","byte_start":86526,"byte_end":86535,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":412},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/msp.rs","byte_start":87086,"byte_end":87091,"line_start":30,"line_end":30,"column_start":15,"column_end":20},"name":"write","qualname":"::register::msp::write","value":"pub unsafe fn write(u32)","parent":null,"children":[],"decl_id":null,"docs":" Writes `bits` to the CPU register\n","sig":null,"attributes":[{"value":"/ Writes `bits` to the CPU register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/msp.rs","byte_start":87024,"byte_end":87061,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/msp.rs","byte_start":87062,"byte_end":87071,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":415},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"primask","qualname":"::register::primask","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":575},{"krate":0,"index":574},{"krate":0,"index":572},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":416},{"krate":0,"index":419}],"decl_id":null,"docs":" Priority mask register\n","sig":null,"attributes":[{"value":"! Priority mask register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87504,"byte_end":87530,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":562},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87718,"byte_end":87724,"line_start":8,"line_end":8,"column_start":5,"column_end":11},"name":"Active","qualname":"::register::primask::Primask::Active","value":"Primask::Active","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Active\n","sig":null,"attributes":[{"value":"/ Active","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87703,"byte_end":87713,"line_start":7,"line_end":7,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":564},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87747,"byte_end":87755,"line_start":10,"line_end":10,"column_start":5,"column_end":13},"name":"Inactive","qualname":"::register::primask::Primask::Inactive","value":"Primask::Inactive","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Inactive\n","sig":null,"attributes":[{"value":"/ Inactive","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87730,"byte_end":87742,"line_start":9,"line_end":9,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":561},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87689,"byte_end":87696,"line_start":6,"line_end":6,"column_start":10,"column_end":17},"name":"Primask","qualname":"::register::primask::Primask","value":"pub enum Primask {\n\n    /// Active\n    Active,\n\n    /// Inactive\n    Inactive,\n}","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":564}],"decl_id":null,"docs":" All exceptions with configurable priority are ...\n","sig":null,"attributes":[{"value":"/ All exceptions with configurable priority are ...","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87532,"byte_end":87585,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87586,"byte_end":87634,"line_start":4,"line_end":4,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87861,"byte_end":87870,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"is_active","qualname":"<Primask>::is_active","value":"pub fn is_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" All exceptions with configurable priority are active\n","sig":null,"attributes":[{"value":"/ All exceptions with configurable priority are active","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87779,"byte_end":87835,"line_start":14,"line_end":14,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87840,"byte_end":87849,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":88014,"byte_end":88025,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"is_inactive","qualname":"<Primask>::is_inactive","value":"pub fn is_inactive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" All exceptions with configurable priority are inactive\n","sig":null,"attributes":[{"value":"/ All exceptions with configurable priority are inactive","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87930,"byte_end":87988,"line_start":20,"line_end":20,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87993,"byte_end":88002,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":88129,"byte_end":88133,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"read","qualname":"::register::primask::read","value":"pub fn read() -> Primask","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":88085,"byte_end":88111,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":88112,"byte_end":88121,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":422},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/psp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"psp","qualname":"::register::psp","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/psp.rs","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":426}],"decl_id":null,"docs":" Process Stack Pointer\n","sig":null,"attributes":[{"value":"! Process Stack Pointer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/psp.rs","byte_start":88946,"byte_end":88971,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":423},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/psp.rs","byte_start":89017,"byte_end":89021,"line_start":5,"line_end":5,"column_start":8,"column_end":12},"name":"read","qualname":"::register::psp::read","value":"pub fn read() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/psp.rs","byte_start":88973,"byte_end":88999,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/psp.rs","byte_start":89000,"byte_end":89009,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":426},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/psp.rs","byte_start":89560,"byte_end":89565,"line_start":30,"line_end":30,"column_start":15,"column_end":20},"name":"write","qualname":"::register::psp::write","value":"pub unsafe fn write(u32)","parent":null,"children":[],"decl_id":null,"docs":" Writes `bits` to the CPU register\n","sig":null,"attributes":[{"value":"/ Writes `bits` to the CPU register","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/psp.rs","byte_start":89498,"byte_end":89535,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/psp.rs","byte_start":89536,"byte_end":89545,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32928,"byte_end":32931,"line_start":23,"line_end":23,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35808,"byte_end":35811,"line_start":65,"line_end":65,"column_start":6,"column_end":9},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":39336,"byte_end":39340,"line_start":77,"line_end":77,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":50389,"byte_end":50392,"line_start":168,"line_end":168,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52498,"byte_end":52507,"line_start":236,"line_end":236,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53776,"byte_end":53786,"line_start":279,"line_end":279,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":63766,"byte_end":63769,"line_start":603,"line_end":603,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64220,"byte_end":64223,"line_start":623,"line_end":623,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64778,"byte_end":64781,"line_start":645,"line_end":645,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66233,"byte_end":66236,"line_start":694,"line_end":694,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":68581,"byte_end":68594,"line_start":776,"line_end":776,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":69205,"byte_end":69208,"line_start":796,"line_end":796,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74962,"byte_end":74966,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21681,"byte_end":21692,"line_start":151,"line_end":151,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23202,"byte_end":23205,"line_start":215,"line_end":215,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23818,"byte_end":23823,"line_start":248,"line_end":248,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23833,"byte_end":23838,"line_start":250,"line_end":250,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24028,"byte_end":24033,"line_start":258,"line_end":258,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24288,"byte_end":24291,"line_start":272,"line_end":272,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24301,"byte_end":24304,"line_start":274,"line_end":274,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24486,"byte_end":24489,"line_start":282,"line_end":282,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24752,"byte_end":24755,"line_start":296,"line_end":296,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24765,"byte_end":24768,"line_start":298,"line_end":298,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24950,"byte_end":24953,"line_start":306,"line_end":306,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":25218,"byte_end":25221,"line_start":320,"line_end":320,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":25712,"byte_end":25715,"line_start":346,"line_end":346,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26268,"byte_end":26271,"line_start":372,"line_end":372,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26929,"byte_end":26932,"line_start":406,"line_end":406,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26942,"byte_end":26945,"line_start":408,"line_end":408,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27127,"byte_end":27130,"line_start":416,"line_end":416,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27399,"byte_end":27403,"line_start":430,"line_end":430,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27413,"byte_end":27417,"line_start":432,"line_end":432,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27600,"byte_end":27604,"line_start":440,"line_end":440,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27859,"byte_end":27862,"line_start":454,"line_end":454,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27872,"byte_end":27875,"line_start":456,"line_end":456,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28057,"byte_end":28060,"line_start":464,"line_end":464,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28316,"byte_end":28320,"line_start":478,"line_end":478,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28330,"byte_end":28334,"line_start":480,"line_end":480,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28517,"byte_end":28521,"line_start":488,"line_end":488,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28782,"byte_end":28786,"line_start":502,"line_end":502,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81731,"byte_end":81738,"line_start":10,"line_end":10,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83701,"byte_end":83706,"line_start":94,"line_end":94,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84239,"byte_end":84244,"line_start":118,"line_end":118,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84777,"byte_end":84781,"line_start":142,"line_end":142,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87765,"byte_end":87772,"line_start":13,"line_end":13,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":2182,"byte_end":2185,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":2224,"byte_end":2233,"line_start":63,"line_end":63,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":2276,"byte_end":2286,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":58}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":19996,"byte_end":20001,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":62}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20011,"byte_end":20014,"line_start":82,"line_end":82,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":77}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20024,"byte_end":20027,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20212,"byte_end":20215,"line_start":91,"line_end":91,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":113}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20225,"byte_end":20229,"line_start":92,"line_end":92,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":129}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20239,"byte_end":20242,"line_start":93,"line_end":93,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":186}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":20252,"byte_end":20256,"line_start":94,"line_end":94,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":252}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/lib.rs","byte_start":2296,"byte_end":2304,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":382}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":80861,"byte_end":80868,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":383}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":81116,"byte_end":81119,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":408}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":81130,"byte_end":81137,"line_start":63,"line_end":63,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":415}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/mod.rs","byte_start":81148,"byte_end":81151,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":422}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dcb.rs","byte_start":32928,"byte_end":32931,"line_start":23,"line_end":23,"column_start":6,"column_end":9},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/dwt.rs","byte_start":35808,"byte_end":35811,"line_start":65,"line_end":65,"column_start":6,"column_end":9},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/nvic.rs","byte_start":39336,"byte_end":39340,"line_start":77,"line_end":77,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":50389,"byte_end":50392,"line_start":168,"line_end":168,"column_start":6,"column_end":9},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":52498,"byte_end":52507,"line_start":236,"line_end":236,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":53776,"byte_end":53786,"line_start":279,"line_end":279,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":63766,"byte_end":63769,"line_start":603,"line_end":603,"column_start":6,"column_end":9},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64220,"byte_end":64223,"line_start":623,"line_end":623,"column_start":6,"column_end":9},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":64778,"byte_end":64781,"line_start":645,"line_end":645,"column_start":6,"column_end":9},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":66233,"byte_end":66236,"line_start":694,"line_end":694,"column_start":6,"column_end":9},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":68581,"byte_end":68594,"line_start":776,"line_end":776,"column_start":6,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/scb.rs","byte_start":69205,"byte_end":69208,"line_start":796,"line_end":796,"column_start":6,"column_end":9},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/syst.rs","byte_start":74962,"byte_end":74966,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":21681,"byte_end":21692,"line_start":151,"line_end":151,"column_start":6,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23202,"byte_end":23205,"line_start":215,"line_end":215,"column_start":22,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":311},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23818,"byte_end":23823,"line_start":248,"line_end":248,"column_start":22,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":314},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":23833,"byte_end":23838,"line_start":250,"line_end":250,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24028,"byte_end":24033,"line_start":258,"line_end":258,"column_start":21,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":314},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24288,"byte_end":24291,"line_start":272,"line_end":272,"column_start":22,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":322},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24301,"byte_end":24304,"line_start":274,"line_end":274,"column_start":6,"column_end":9},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24486,"byte_end":24489,"line_start":282,"line_end":282,"column_start":21,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":322},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24752,"byte_end":24755,"line_start":296,"line_end":296,"column_start":22,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24765,"byte_end":24768,"line_start":298,"line_end":298,"column_start":6,"column_end":9},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":24950,"byte_end":24953,"line_start":306,"line_end":306,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":25218,"byte_end":25221,"line_start":320,"line_end":320,"column_start":22,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":338},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":25712,"byte_end":25715,"line_start":346,"line_end":346,"column_start":22,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":341},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26268,"byte_end":26271,"line_start":372,"line_end":372,"column_start":22,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":344},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26929,"byte_end":26932,"line_start":406,"line_end":406,"column_start":22,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":347},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":26942,"byte_end":26945,"line_start":408,"line_end":408,"column_start":6,"column_end":9},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27127,"byte_end":27130,"line_start":416,"line_end":416,"column_start":21,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":347},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27399,"byte_end":27403,"line_start":430,"line_end":430,"column_start":22,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":355},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27413,"byte_end":27417,"line_start":432,"line_end":432,"column_start":6,"column_end":10},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27600,"byte_end":27604,"line_start":440,"line_end":440,"column_start":21,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":355},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27859,"byte_end":27862,"line_start":454,"line_end":454,"column_start":22,"column_end":25},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":363},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":27872,"byte_end":27875,"line_start":456,"line_end":456,"column_start":6,"column_end":9},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28057,"byte_end":28060,"line_start":464,"line_end":464,"column_start":21,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":363},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28316,"byte_end":28320,"line_start":478,"line_end":478,"column_start":22,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":371},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28330,"byte_end":28334,"line_start":480,"line_end":480,"column_start":6,"column_end":10},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28517,"byte_end":28521,"line_start":488,"line_end":488,"column_start":21,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":371},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/peripheral/mod.rs","byte_start":28782,"byte_end":28786,"line_start":502,"line_end":502,"column_start":22,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":379},"to":{"krate":1,"index":1926}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":81731,"byte_end":81738,"line_start":10,"line_end":10,"column_start":6,"column_end":13},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":83701,"byte_end":83706,"line_start":94,"line_end":94,"column_start":6,"column_end":11},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84239,"byte_end":84244,"line_start":118,"line_end":118,"column_start":6,"column_end":11},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/control.rs","byte_start":84777,"byte_end":84781,"line_start":142,"line_end":142,"column_start":6,"column_end":10},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.3/src/register/primask.rs","byte_start":87765,"byte_end":87772,"line_start":13,"line_end":13,"column_start":6,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}}]}