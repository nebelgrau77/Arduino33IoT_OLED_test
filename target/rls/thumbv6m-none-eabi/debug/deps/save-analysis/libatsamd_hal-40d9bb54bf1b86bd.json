{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0","program":"/home/nebelgrau/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","atsamd_hal","--edition=2018","/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"atsamd21g18a\"","--cfg","feature=\"samd21\"","--cfg","feature=\"samd21g18a\"","--cfg","feature=\"samd21g18a-rt\"","-C","metadata=40d9bb54bf1b86bd","-C","extra-filename=-40d9bb54bf1b86bd","--out-dir","/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps","--target","thumbv6m-none-eabi","-L","dependency=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps","-L","dependency=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/debug/deps","--extern","atsamd21g18a=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libatsamd21g18a-0916f3a2440b35b9.rmeta","--extern","bitfield=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libbitfield-18e000ef2447381f.rmeta","--extern","cortex_m=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libcortex_m-1fc3e49452f11e8f.rmeta","--extern","embedded_hal=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libembedded_hal-5d9c5ef89b749583.rmeta","--extern","nb=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libnb-aafa15bc710f92a4.rmeta","--extern","paste=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libpaste-eb42ff77ec1e7921.rmeta","--extern","rand_core=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/librand_core-8bdc486987cf6589.rmeta","--extern","vcell=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libvcell-19315e6e1a8313b8.rmeta","--extern","void=/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libvoid-8be3f7ced06a87f4.rmeta","--cap-lints","allow","-L","/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/build/atsamd21g18a-a3742dba0bf32ad2/out","-L","/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/build/cortex-m-6765468e744d2d5b/out","-L","/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/build/cortex-m-rt-01e16f9945e9147b/out","--error-format=json","--sysroot","/home/nebelgrau/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/media/nebelgrau/flexdrive/dtscnc/rust/SAMD21/nano33iot_oledtest/target/rls/thumbv6m-none-eabi/debug/deps/libatsamd_hal-40d9bb54bf1b86bd.rmeta"},"prelude":{"crate_id":{"name":"atsamd_hal","disambiguator":[12632789219103034770,71601028182328796]},"crate_root":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src","external_crates":[{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16446848000528418901,13531319396254931020]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8381671975949658107,11909934328590408277]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[9931451773773014550,14248369741941424395]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":4,"id":{"name":"embedded_hal","disambiguator":[8029605896679531070,12764473535457126117]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","num":5,"id":{"name":"nb","disambiguator":[1952810776336202544,466289828871378349]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":6,"id":{"name":"nb","disambiguator":[10789394114535591988,12535822493277645094]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","num":7,"id":{"name":"void","disambiguator":[4078352169350565707,1066707245381296170]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":8,"id":{"name":"paste","disambiguator":[7844320498116926884,17799869065033766818]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":9,"id":{"name":"proc_macro_hack","disambiguator":[6343754747013442780,13037500355055578767]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":10,"id":{"name":"paste_impl","disambiguator":[3714479412508731486,12384727533856750952]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":11,"id":{"name":"atsamd21g18a","disambiguator":[16169391547422063621,11082383174491429368]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","num":12,"id":{"name":"bare_metal","disambiguator":[7687816475388660200,8214433962265001]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","num":13,"id":{"name":"cortex_m","disambiguator":[12289535216290961465,5796611925549609499]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","num":14,"id":{"name":"aligned","disambiguator":[10715104351088817953,8985885963772221514]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","num":15,"id":{"name":"as_slice","disambiguator":[2382817032773192487,11662016923047239367]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","num":16,"id":{"name":"generic_array","disambiguator":[1955381876053627478,10519268987105312988]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","num":17,"id":{"name":"typenum","disambiguator":[14075267191247045430,4337194191479019516]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","num":18,"id":{"name":"generic_array","disambiguator":[12512764234067537703,10503462924777692632]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","num":19,"id":{"name":"stable_deref_trait","disambiguator":[18335430308644270238,13988826176776470062]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","num":20,"id":{"name":"volatile_register","disambiguator":[9145258012750199555,9820125862514599790]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","num":21,"id":{"name":"vcell","disambiguator":[936490541271218492,2458580528827657919]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":22,"id":{"name":"cortex_m_rt","disambiguator":[17038822328892641839,11055656334281035868]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":23,"id":{"name":"cortex_m_rt_macros","disambiguator":[10433794086461888949,9845982041553418669]}},{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","num":24,"id":{"name":"r0","disambiguator":[10625380720946341924,2191562438710707277]}}],"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":0,"byte_end":1529,"line_start":1,"line_end":74,"column_start":1,"column_end":25}},"imports":[{"kind":"Use","ref_id":{"krate":8,"index":0},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":59,"byte_end":64,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"alias_span":null,"name":"paste","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":0},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":248,"byte_end":260,"line_start":14,"line_end":14,"column_start":9,"column_end":21},"alias_span":null,"name":"target_device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/prelude.rs","byte_start":7477,"byte_end":7484,"line_start":2,"line_end":2,"column_start":22,"column_end":29},"alias_span":null,"name":"_atsamd21_hal_gpio_GpioExt","value":"","parent":{"krate":0,"index":67}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/prelude.rs","byte_start":7537,"byte_end":7543,"line_start":3,"line_end":3,"column_start":22,"column_end":28},"alias_span":null,"name":"_atsamd21_hal_time_U32Ext","value":"","parent":{"krate":0,"index":67}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/prelude.rs","byte_start":7603,"byte_end":7623,"line_start":4,"line_end":4,"column_start":30,"column_end":50},"alias_span":null,"name":"_atsamd_hal_timer_traits_InterruptDrivenTimer","value":"","parent":{"krate":0,"index":67}},{"kind":"Use","ref_id":{"krate":4,"index":74},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/prelude.rs","byte_start":7905,"byte_end":7914,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"_atsamd_hal_embedded_hal_digital_v2_OutputPin","value":"","parent":{"krate":0,"index":67}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/prelude.rs","byte_start":8123,"byte_end":8124,"line_start":14,"line_end":14,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":67}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/mod.rs","byte_start":1786,"byte_end":1787,"line_start":12,"line_end":12,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"gpio","parent":{"krate":0,"index":8}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":766,"byte_end":767,"line_start":37,"line_end":37,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"time, pad, timer_traits, gpio","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49998,"byte_end":49999,"line_start":16,"line_end":16,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":300}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49998,"byte_end":49999,"line_start":16,"line_end":16,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":300}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49998,"byte_end":49999,"line_start":16,"line_end":16,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":300}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49998,"byte_end":49999,"line_start":16,"line_end":16,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":300}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":766,"byte_end":767,"line_start":37,"line_end":37,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"sercom, clock","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":0,"byte_end":1529,"line_start":1,"line_end":74,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":428}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"common","qualname":"::common","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/mod.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":36},{"krate":0,"index":61},{"krate":0,"index":67},{"krate":0,"index":73},{"krate":0,"index":118},{"krate":0,"index":126},{"krate":0,"index":217}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":1092,"byte_end":1104,"line_start":52,"line_end":52,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay","qualname":"::common::delay","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":9916},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":34}],"decl_id":null,"docs":" Delays\n","sig":null,"attributes":[{"value":"! Delays","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":1932,"byte_end":1942,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":17},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2195,"byte_end":2200,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Delay","qualname":"::common::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":" System timer (SysTick) as a delay provider\n","sig":null,"attributes":[{"value":"/ System timer (SysTick) as a delay provider","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2137,"byte_end":2183,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2333,"byte_end":2336,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<Delay>::new","value":"pub fn new(SYST, &mut GenericClockController) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the system timer (SysTick) as a delay provider\n","sig":null,"attributes":[{"value":"/ Configures the system timer (SysTick) as a delay provider","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2260,"byte_end":2321,"line_start":17,"line_end":17,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2613,"byte_end":2617,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"free","qualname":"<Delay>::free","value":"pub fn free(Self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":" Releases the system timer (SysTick) resource\n","sig":null,"attributes":[{"value":"/ Releases the system timer (SysTick) resource","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2553,"byte_end":2601,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sleeping_delay","qualname":"::common::sleeping_delay","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":57}],"decl_id":null,"docs":" Delays with WFI sleep while we wait using a timer\n","sig":null,"attributes":[{"value":"! Delays with WFI sleep while we wait using a timer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":3989,"byte_end":4042,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":4306,"byte_end":4319,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"SleepingDelay","qualname":"::common::sleeping_delay::SleepingDelay","value":"SleepingDelay {  }","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Delay and sleep while we do (WFI) using a timer\n","sig":null,"attributes":[{"value":"/ Delay and sleep while we do (WFI) using a timer","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":4243,"byte_end":4294,"line_start":11,"line_end":11,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":4522,"byte_end":4525,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<SleepingDelay<TIM>>::new","value":"pub fn new(TIM, &'static atomic::AtomicBool) -> SleepingDelay<TIM> where\nTIM: InterruptDrivenTimer","parent":null,"children":[],"decl_id":null,"docs":" Initializes a new SleepingDelay struct\n","sig":null,"attributes":[{"value":"/ Initializes a new SleepingDelay struct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":4468,"byte_end":4510,"line_start":21,"line_end":21,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":4793,"byte_end":4797,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"free","qualname":"<SleepingDelay<TIM>>::free","value":"pub fn free(Self) -> TIM","parent":null,"children":[],"decl_id":null,"docs":" Releases the timer resource\n","sig":null,"attributes":[{"value":"/ Releases the timer resource","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":4750,"byte_end":4781,"line_start":32,"line_end":32,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":61},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pad","qualname":"::common::pad","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/mod.rs","byte_start":1570,"byte_end":1582,"line_start":3,"line_end":3,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":63},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6285,"byte_end":6291,"line_start":6,"line_end":6,"column_start":11,"column_end":17},"name":"PadPin","qualname":"::common::pad::PadPin","value":"PadPin<T>","parent":null,"children":[{"krate":0,"index":65}],"decl_id":null,"docs":" The PadPin trait makes it more ergonomic to convert a pin into a Sercom pad.\n You should not implement this trait for yourself; only the implementations\n in the sercom module make sense.\n","sig":null,"attributes":[{"value":"/ The PadPin trait makes it more ergonomic to convert a pin into a Sercom pad.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6078,"byte_end":6158,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ You should not implement this trait for yourself; only the implementations","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6159,"byte_end":6237,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ in the sercom module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6238,"byte_end":6274,"line_start":5,"line_end":5,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6304,"byte_end":6312,"line_start":7,"line_end":7,"column_start":8,"column_end":16},"name":"into_pad","qualname":"::common::pad::PadPin::into_pad","value":"pub fn into_pad(Self, &mut Port) -> T","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::common::prelude","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/prelude.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" Import the prelude to gain convenient access to helper traits\n","sig":null,"attributes":[{"value":"! Import the prelude to gain convenient access to helper traits","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/prelude.rs","byte_start":7390,"byte_end":7455,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":73},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::common::time","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":442},{"krate":0,"index":441},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":432},{"krate":0,"index":444},{"krate":0,"index":457},{"krate":0,"index":456},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":447},{"krate":0,"index":459},{"krate":0,"index":472},{"krate":0,"index":471},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":462},{"krate":0,"index":474},{"krate":0,"index":487},{"krate":0,"index":486},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":477},{"krate":0,"index":489},{"krate":0,"index":502},{"krate":0,"index":501},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":492},{"krate":0,"index":504},{"krate":0,"index":517},{"krate":0,"index":516},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":507},{"krate":0,"index":519},{"krate":0,"index":532},{"krate":0,"index":531},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":522},{"krate":0,"index":74},{"krate":0,"index":82},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116}],"decl_id":null,"docs":" Time units\n","sig":null,"attributes":[{"value":"! Time units","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8127,"byte_end":8141,"line_start":1,"line_end":1,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":429},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8239,"byte_end":8242,"line_start":7,"line_end":7,"column_start":12,"column_end":15},"name":"Bps","qualname":"::common::time::Bps","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bits per second\n","sig":null,"attributes":[{"value":"/ Bits per second","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8163,"byte_end":8182,"line_start":5,"line_end":5,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":431},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8243,"byte_end":8250,"line_start":7,"line_end":7,"column_start":16,"column_end":23},"name":"0","qualname":"::common::time::Bps::0","value":"u32","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8320,"byte_end":8325,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Hertz","qualname":"::common::time::Hertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hertz\n","sig":null,"attributes":[{"value":"/ Hertz","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8254,"byte_end":8263,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Field","id":{"krate":0,"index":446},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8326,"byte_end":8333,"line_start":11,"line_end":11,"column_start":18,"column_end":25},"name":"0","qualname":"::common::time::Hertz::0","value":"u32","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":459},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8407,"byte_end":8416,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"KiloHertz","qualname":"::common::time::KiloHertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" KiloHertz\n","sig":null,"attributes":[{"value":"/ KiloHertz","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8337,"byte_end":8350,"line_start":13,"line_end":13,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":461},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8417,"byte_end":8424,"line_start":15,"line_end":15,"column_start":22,"column_end":29},"name":"0","qualname":"::common::time::KiloHertz::0","value":"u32","parent":{"krate":0,"index":459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8498,"byte_end":8507,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"MegaHertz","qualname":"::common::time::MegaHertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" MegaHertz\n","sig":null,"attributes":[{"value":"/ MegaHertz","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8428,"byte_end":8441,"line_start":17,"line_end":17,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":476},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8508,"byte_end":8515,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"name":"0","qualname":"::common::time::MegaHertz::0","value":"u32","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8604,"byte_end":8611,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"Seconds","qualname":"::common::time::Seconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Seconds\n","sig":null,"attributes":[{"value":"/ Seconds","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8536,"byte_end":8547,"line_start":23,"line_end":23,"column_start":1,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8612,"byte_end":8619,"line_start":25,"line_end":25,"column_start":20,"column_end":27},"name":"0","qualname":"::common::time::Seconds::0","value":"u32","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":504},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8695,"byte_end":8706,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"Miliseconds","qualname":"::common::time::Miliseconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Miliseconds\n","sig":null,"attributes":[{"value":"/ Miliseconds","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8623,"byte_end":8638,"line_start":27,"line_end":27,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":506},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8707,"byte_end":8714,"line_start":29,"line_end":29,"column_start":24,"column_end":31},"name":"0","qualname":"::common::time::Miliseconds::0","value":"u32","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":519},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8791,"byte_end":8803,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"Microseconds","qualname":"::common::time::Microseconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Microseconds\n","sig":null,"attributes":[{"value":"/ Microseconds","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8718,"byte_end":8734,"line_start":31,"line_end":31,"column_start":1,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":521},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8804,"byte_end":8811,"line_start":33,"line_end":33,"column_start":25,"column_end":32},"name":"0","qualname":"::common::time::Microseconds::0","value":"u32","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8893,"byte_end":8899,"line_start":36,"line_end":36,"column_start":11,"column_end":17},"name":"U32Ext","qualname":"::common::time::U32Ext","value":"U32Ext","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"decl_id":null,"docs":" Extension trait that adds convenience methods to the `u32` type\n","sig":null,"attributes":[{"value":"/ Extension trait that adds convenience methods to the `u32` type","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8815,"byte_end":8882,"line_start":35,"line_end":35,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8931,"byte_end":8934,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"bps","qualname":"::common::time::U32Ext::bps","value":"pub fn bps(Self) -> Bps","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Wrap in `Bps`\n","sig":null,"attributes":[{"value":"/ Wrap in `Bps`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8906,"byte_end":8923,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8981,"byte_end":8983,"line_start":41,"line_end":41,"column_start":8,"column_end":10},"name":"hz","qualname":"::common::time::U32Ext::hz","value":"pub fn hz(Self) -> Hertz","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Wrap in `Hertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `Hertz`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":8954,"byte_end":8973,"line_start":40,"line_end":40,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9036,"byte_end":9039,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"khz","qualname":"::common::time::U32Ext::khz","value":"pub fn khz(Self) -> KiloHertz","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Wrap in `KiloHertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `KiloHertz`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9005,"byte_end":9028,"line_start":43,"line_end":43,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9096,"byte_end":9099,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"mhz","qualname":"::common::time::U32Ext::mhz","value":"pub fn mhz(Self) -> MegaHertz","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Wrap in `MegaHertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `MegaHertz`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9065,"byte_end":9088,"line_start":46,"line_end":46,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9154,"byte_end":9155,"line_start":50,"line_end":50,"column_start":8,"column_end":9},"name":"s","qualname":"::common::time::U32Ext::s","value":"pub fn s(Self) -> Seconds","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Wrap in `Seconds`\n","sig":null,"attributes":[{"value":"/ Wrap in `Seconds`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9125,"byte_end":9146,"line_start":49,"line_end":49,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9212,"byte_end":9214,"line_start":53,"line_end":53,"column_start":8,"column_end":10},"name":"ms","qualname":"::common::time::U32Ext::ms","value":"pub fn ms(Self) -> Miliseconds","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Wrap in `Miliseconds`\n","sig":null,"attributes":[{"value":"/ Wrap in `Miliseconds`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9179,"byte_end":9204,"line_start":52,"line_end":52,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9276,"byte_end":9278,"line_start":56,"line_end":56,"column_start":8,"column_end":10},"name":"us","qualname":"::common::time::U32Ext::us","value":"pub fn us(Self) -> Microseconds","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Wrap in `Microseconds`\n","sig":null,"attributes":[{"value":"/ Wrap in `Microseconds`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9242,"byte_end":9268,"line_start":55,"line_end":55,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":118},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer_traits","qualname":"::common::timer_traits","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","byte_start":12095,"byte_end":12115,"line_start":6,"line_end":6,"column_start":11,"column_end":31},"name":"InterruptDrivenTimer","qualname":"::common::timer_traits::InterruptDrivenTimer","value":"InterruptDrivenTimer: CountDown<Time = time::Microseconds> + Periodic","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" Trait for timers that can enable & disable an interrupt that fires\n when the timer expires\n","sig":null,"attributes":[{"value":"/ Trait for timers that can enable & disable an interrupt that fires","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","byte_start":11987,"byte_end":12057,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ when the timer expires","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","byte_start":12058,"byte_end":12084,"line_start":5,"line_end":5,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","byte_start":12209,"byte_end":12225,"line_start":8,"line_end":8,"column_start":8,"column_end":24},"name":"enable_interrupt","qualname":"::common::timer_traits::InterruptDrivenTimer::enable_interrupt","value":"pub fn enable_interrupt(&mut Self)","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Enable the timer interrupt\n","sig":null,"attributes":[{"value":"/ Enable the timer interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","byte_start":12171,"byte_end":12201,"line_start":7,"line_end":7,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","byte_start":12282,"byte_end":12299,"line_start":11,"line_end":11,"column_start":8,"column_end":25},"name":"disable_interrupt","qualname":"::common::timer_traits::InterruptDrivenTimer::disable_interrupt","value":"pub fn disable_interrupt(&mut Self)","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Disable the timer interrupt\n","sig":null,"attributes":[{"value":"/ Disable the timer interrupt","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","byte_start":12243,"byte_end":12274,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpio","qualname":"::common::thumbv6m::gpio","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":9968},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":535},{"krate":0,"index":601},{"krate":0,"index":605},{"krate":0,"index":645},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":706},{"krate":0,"index":608},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":638},{"krate":0,"index":710},{"krate":0,"index":750},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":811},{"krate":0,"index":713},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":743},{"krate":0,"index":815},{"krate":0,"index":855},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":916},{"krate":0,"index":818},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":848},{"krate":0,"index":920},{"krate":0,"index":960},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1021},{"krate":0,"index":923},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":953},{"krate":0,"index":1025},{"krate":0,"index":1065},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1126},{"krate":0,"index":1028},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1058},{"krate":0,"index":1130},{"krate":0,"index":1170},{"krate":0,"index":1175},{"krate":0,"index":1178},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1231},{"krate":0,"index":1133},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1163},{"krate":0,"index":1235},{"krate":0,"index":1275},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1336},{"krate":0,"index":1238},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1268},{"krate":0,"index":1340},{"krate":0,"index":1380},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1441},{"krate":0,"index":1343},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1373},{"krate":0,"index":1445},{"krate":0,"index":1485},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1514},{"krate":0,"index":1517},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1530},{"krate":0,"index":1533},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1546},{"krate":0,"index":1448},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1478},{"krate":0,"index":1550},{"krate":0,"index":1590},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":1635},{"krate":0,"index":1638},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1651},{"krate":0,"index":1553},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1583},{"krate":0,"index":1655},{"krate":0,"index":1695},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":1732},{"krate":0,"index":1735},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1748},{"krate":0,"index":1751},{"krate":0,"index":1756},{"krate":0,"index":1658},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1688},{"krate":0,"index":1760},{"krate":0,"index":1800},{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1821},{"krate":0,"index":1824},{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1861},{"krate":0,"index":1763},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1793},{"krate":0,"index":1865},{"krate":0,"index":1905},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1926},{"krate":0,"index":1929},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":1950},{"krate":0,"index":1953},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1966},{"krate":0,"index":1868},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1898},{"krate":0,"index":1970},{"krate":0,"index":2010},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2023},{"krate":0,"index":2026},{"krate":0,"index":2031},{"krate":0,"index":2034},{"krate":0,"index":2039},{"krate":0,"index":2042},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2055},{"krate":0,"index":2058},{"krate":0,"index":2063},{"krate":0,"index":2066},{"krate":0,"index":2071},{"krate":0,"index":1973},{"krate":0,"index":1995},{"krate":0,"index":1998},{"krate":0,"index":2003},{"krate":0,"index":2075},{"krate":0,"index":2115},{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2136},{"krate":0,"index":2139},{"krate":0,"index":2144},{"krate":0,"index":2147},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":2176},{"krate":0,"index":2078},{"krate":0,"index":2100},{"krate":0,"index":2103},{"krate":0,"index":2108},{"krate":0,"index":2180},{"krate":0,"index":2220},{"krate":0,"index":2225},{"krate":0,"index":2228},{"krate":0,"index":2233},{"krate":0,"index":2236},{"krate":0,"index":2241},{"krate":0,"index":2244},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2273},{"krate":0,"index":2276},{"krate":0,"index":2281},{"krate":0,"index":2183},{"krate":0,"index":2205},{"krate":0,"index":2208},{"krate":0,"index":2213},{"krate":0,"index":2285},{"krate":0,"index":2325},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2338},{"krate":0,"index":2341},{"krate":0,"index":2346},{"krate":0,"index":2349},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2362},{"krate":0,"index":2365},{"krate":0,"index":2370},{"krate":0,"index":2373},{"krate":0,"index":2378},{"krate":0,"index":2381},{"krate":0,"index":2386},{"krate":0,"index":2288},{"krate":0,"index":2310},{"krate":0,"index":2313},{"krate":0,"index":2318},{"krate":0,"index":2390},{"krate":0,"index":2430},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2443},{"krate":0,"index":2446},{"krate":0,"index":2451},{"krate":0,"index":2454},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2467},{"krate":0,"index":2470},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2491},{"krate":0,"index":2393},{"krate":0,"index":2415},{"krate":0,"index":2418},{"krate":0,"index":2423},{"krate":0,"index":2495},{"krate":0,"index":2535},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2548},{"krate":0,"index":2551},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2564},{"krate":0,"index":2567},{"krate":0,"index":2572},{"krate":0,"index":2575},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2596},{"krate":0,"index":2498},{"krate":0,"index":2520},{"krate":0,"index":2523},{"krate":0,"index":2528},{"krate":0,"index":2600},{"krate":0,"index":2640},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2653},{"krate":0,"index":2656},{"krate":0,"index":2661},{"krate":0,"index":2664},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2693},{"krate":0,"index":2696},{"krate":0,"index":2701},{"krate":0,"index":2603},{"krate":0,"index":2625},{"krate":0,"index":2628},{"krate":0,"index":2633},{"krate":0,"index":2705},{"krate":0,"index":2745},{"krate":0,"index":2750},{"krate":0,"index":2753},{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2766},{"krate":0,"index":2769},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2790},{"krate":0,"index":2793},{"krate":0,"index":2798},{"krate":0,"index":2801},{"krate":0,"index":2806},{"krate":0,"index":2708},{"krate":0,"index":2730},{"krate":0,"index":2733},{"krate":0,"index":2738},{"krate":0,"index":2810},{"krate":0,"index":2850},{"krate":0,"index":2855},{"krate":0,"index":2858},{"krate":0,"index":2863},{"krate":0,"index":2866},{"krate":0,"index":2871},{"krate":0,"index":2874},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2887},{"krate":0,"index":2890},{"krate":0,"index":2895},{"krate":0,"index":2898},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":2911},{"krate":0,"index":2813},{"krate":0,"index":2835},{"krate":0,"index":2838},{"krate":0,"index":2843},{"krate":0,"index":2915},{"krate":0,"index":2955},{"krate":0,"index":2960},{"krate":0,"index":2963},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2976},{"krate":0,"index":2979},{"krate":0,"index":2984},{"krate":0,"index":2987},{"krate":0,"index":2992},{"krate":0,"index":2995},{"krate":0,"index":3000},{"krate":0,"index":3003},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3016},{"krate":0,"index":2918},{"krate":0,"index":2940},{"krate":0,"index":2943},{"krate":0,"index":2948},{"krate":0,"index":3020},{"krate":0,"index":3060},{"krate":0,"index":3065},{"krate":0,"index":3068},{"krate":0,"index":3073},{"krate":0,"index":3076},{"krate":0,"index":3081},{"krate":0,"index":3084},{"krate":0,"index":3089},{"krate":0,"index":3092},{"krate":0,"index":3097},{"krate":0,"index":3100},{"krate":0,"index":3105},{"krate":0,"index":3108},{"krate":0,"index":3113},{"krate":0,"index":3116},{"krate":0,"index":3121},{"krate":0,"index":3023},{"krate":0,"index":3045},{"krate":0,"index":3048},{"krate":0,"index":3053},{"krate":0,"index":3125},{"krate":0,"index":3165},{"krate":0,"index":3170},{"krate":0,"index":3173},{"krate":0,"index":3178},{"krate":0,"index":3181},{"krate":0,"index":3186},{"krate":0,"index":3189},{"krate":0,"index":3194},{"krate":0,"index":3197},{"krate":0,"index":3202},{"krate":0,"index":3205},{"krate":0,"index":3210},{"krate":0,"index":3213},{"krate":0,"index":3218},{"krate":0,"index":3221},{"krate":0,"index":3226},{"krate":0,"index":3128},{"krate":0,"index":3150},{"krate":0,"index":3153},{"krate":0,"index":3158},{"krate":0,"index":3230},{"krate":0,"index":3270},{"krate":0,"index":3275},{"krate":0,"index":3278},{"krate":0,"index":3283},{"krate":0,"index":3286},{"krate":0,"index":3291},{"krate":0,"index":3294},{"krate":0,"index":3299},{"krate":0,"index":3302},{"krate":0,"index":3307},{"krate":0,"index":3310},{"krate":0,"index":3315},{"krate":0,"index":3318},{"krate":0,"index":3323},{"krate":0,"index":3326},{"krate":0,"index":3331},{"krate":0,"index":3233},{"krate":0,"index":3255},{"krate":0,"index":3258},{"krate":0,"index":3263},{"krate":0,"index":3335},{"krate":0,"index":3375},{"krate":0,"index":3380},{"krate":0,"index":3383},{"krate":0,"index":3388},{"krate":0,"index":3391},{"krate":0,"index":3396},{"krate":0,"index":3399},{"krate":0,"index":3404},{"krate":0,"index":3407},{"krate":0,"index":3412},{"krate":0,"index":3415},{"krate":0,"index":3420},{"krate":0,"index":3423},{"krate":0,"index":3428},{"krate":0,"index":3431},{"krate":0,"index":3436},{"krate":0,"index":3338},{"krate":0,"index":3360},{"krate":0,"index":3363},{"krate":0,"index":3368},{"krate":0,"index":3440},{"krate":0,"index":3480},{"krate":0,"index":3485},{"krate":0,"index":3488},{"krate":0,"index":3493},{"krate":0,"index":3496},{"krate":0,"index":3501},{"krate":0,"index":3504},{"krate":0,"index":3509},{"krate":0,"index":3512},{"krate":0,"index":3517},{"krate":0,"index":3520},{"krate":0,"index":3525},{"krate":0,"index":3528},{"krate":0,"index":3533},{"krate":0,"index":3536},{"krate":0,"index":3541},{"krate":0,"index":3443},{"krate":0,"index":3465},{"krate":0,"index":3468},{"krate":0,"index":3473},{"krate":0,"index":3545},{"krate":0,"index":3585},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":3598},{"krate":0,"index":3601},{"krate":0,"index":3606},{"krate":0,"index":3609},{"krate":0,"index":3614},{"krate":0,"index":3617},{"krate":0,"index":3622},{"krate":0,"index":3625},{"krate":0,"index":3630},{"krate":0,"index":3633},{"krate":0,"index":3638},{"krate":0,"index":3641},{"krate":0,"index":3646},{"krate":0,"index":3548},{"krate":0,"index":3570},{"krate":0,"index":3573},{"krate":0,"index":3578},{"krate":0,"index":3650},{"krate":0,"index":3690},{"krate":0,"index":3695},{"krate":0,"index":3698},{"krate":0,"index":3703},{"krate":0,"index":3706},{"krate":0,"index":3711},{"krate":0,"index":3714},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3727},{"krate":0,"index":3730},{"krate":0,"index":3735},{"krate":0,"index":3738},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3751},{"krate":0,"index":3653},{"krate":0,"index":3675},{"krate":0,"index":3678},{"krate":0,"index":3683},{"krate":0,"index":3755},{"krate":0,"index":3795},{"krate":0,"index":3800},{"krate":0,"index":3803},{"krate":0,"index":3808},{"krate":0,"index":3811},{"krate":0,"index":3816},{"krate":0,"index":3819},{"krate":0,"index":3824},{"krate":0,"index":3827},{"krate":0,"index":3832},{"krate":0,"index":3835},{"krate":0,"index":3840},{"krate":0,"index":3843},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":3856},{"krate":0,"index":3758},{"krate":0,"index":3780},{"krate":0,"index":3783},{"krate":0,"index":3788},{"krate":0,"index":3860},{"krate":0,"index":3900},{"krate":0,"index":3905},{"krate":0,"index":3908},{"krate":0,"index":3913},{"krate":0,"index":3916},{"krate":0,"index":3921},{"krate":0,"index":3924},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3937},{"krate":0,"index":3940},{"krate":0,"index":3945},{"krate":0,"index":3948},{"krate":0,"index":3953},{"krate":0,"index":3956},{"krate":0,"index":3961},{"krate":0,"index":3863},{"krate":0,"index":3885},{"krate":0,"index":3888},{"krate":0,"index":3893},{"krate":0,"index":3965},{"krate":0,"index":4005},{"krate":0,"index":4010},{"krate":0,"index":4013},{"krate":0,"index":4018},{"krate":0,"index":4021},{"krate":0,"index":4026},{"krate":0,"index":4029},{"krate":0,"index":4034},{"krate":0,"index":4037},{"krate":0,"index":4042},{"krate":0,"index":4045},{"krate":0,"index":4050},{"krate":0,"index":4053},{"krate":0,"index":4058},{"krate":0,"index":4061},{"krate":0,"index":4066},{"krate":0,"index":3968},{"krate":0,"index":3990},{"krate":0,"index":3993},{"krate":0,"index":3998},{"krate":0,"index":4070},{"krate":0,"index":4110},{"krate":0,"index":4115},{"krate":0,"index":4118},{"krate":0,"index":4123},{"krate":0,"index":4126},{"krate":0,"index":4131},{"krate":0,"index":4134},{"krate":0,"index":4139},{"krate":0,"index":4142},{"krate":0,"index":4147},{"krate":0,"index":4150},{"krate":0,"index":4155},{"krate":0,"index":4158},{"krate":0,"index":4163},{"krate":0,"index":4166},{"krate":0,"index":4171},{"krate":0,"index":4073},{"krate":0,"index":4095},{"krate":0,"index":4098},{"krate":0,"index":4103},{"krate":0,"index":4175},{"krate":0,"index":4215},{"krate":0,"index":4220},{"krate":0,"index":4223},{"krate":0,"index":4228},{"krate":0,"index":4231},{"krate":0,"index":4236},{"krate":0,"index":4239},{"krate":0,"index":4244},{"krate":0,"index":4247},{"krate":0,"index":4252},{"krate":0,"index":4255},{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4268},{"krate":0,"index":4271},{"krate":0,"index":4276},{"krate":0,"index":4178},{"krate":0,"index":4200},{"krate":0,"index":4203},{"krate":0,"index":4208},{"krate":0,"index":4280},{"krate":0,"index":4320},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4333},{"krate":0,"index":4336},{"krate":0,"index":4341},{"krate":0,"index":4344},{"krate":0,"index":4349},{"krate":0,"index":4352},{"krate":0,"index":4357},{"krate":0,"index":4360},{"krate":0,"index":4365},{"krate":0,"index":4368},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4381},{"krate":0,"index":4283},{"krate":0,"index":4305},{"krate":0,"index":4308},{"krate":0,"index":4313},{"krate":0,"index":4385},{"krate":0,"index":4425},{"krate":0,"index":4430},{"krate":0,"index":4433},{"krate":0,"index":4438},{"krate":0,"index":4441},{"krate":0,"index":4446},{"krate":0,"index":4449},{"krate":0,"index":4454},{"krate":0,"index":4457},{"krate":0,"index":4462},{"krate":0,"index":4465},{"krate":0,"index":4470},{"krate":0,"index":4473},{"krate":0,"index":4478},{"krate":0,"index":4481},{"krate":0,"index":4486},{"krate":0,"index":4388},{"krate":0,"index":4410},{"krate":0,"index":4413},{"krate":0,"index":4418},{"krate":0,"index":4490},{"krate":0,"index":4530},{"krate":0,"index":4535},{"krate":0,"index":4538},{"krate":0,"index":4543},{"krate":0,"index":4546},{"krate":0,"index":4551},{"krate":0,"index":4554},{"krate":0,"index":4559},{"krate":0,"index":4562},{"krate":0,"index":4567},{"krate":0,"index":4570},{"krate":0,"index":4575},{"krate":0,"index":4578},{"krate":0,"index":4583},{"krate":0,"index":4586},{"krate":0,"index":4591},{"krate":0,"index":4493},{"krate":0,"index":4515},{"krate":0,"index":4518},{"krate":0,"index":4523},{"krate":0,"index":4595},{"krate":0,"index":4635},{"krate":0,"index":4640},{"krate":0,"index":4643},{"krate":0,"index":4648},{"krate":0,"index":4651},{"krate":0,"index":4656},{"krate":0,"index":4659},{"krate":0,"index":4664},{"krate":0,"index":4667},{"krate":0,"index":4672},{"krate":0,"index":4675},{"krate":0,"index":4680},{"krate":0,"index":4683},{"krate":0,"index":4688},{"krate":0,"index":4691},{"krate":0,"index":4696},{"krate":0,"index":4598},{"krate":0,"index":4620},{"krate":0,"index":4623},{"krate":0,"index":4628},{"krate":0,"index":4700},{"krate":0,"index":4740},{"krate":0,"index":4745},{"krate":0,"index":4748},{"krate":0,"index":4753},{"krate":0,"index":4756},{"krate":0,"index":4761},{"krate":0,"index":4764},{"krate":0,"index":4769},{"krate":0,"index":4772},{"krate":0,"index":4777},{"krate":0,"index":4780},{"krate":0,"index":4785},{"krate":0,"index":4788},{"krate":0,"index":4793},{"krate":0,"index":4796},{"krate":0,"index":4801},{"krate":0,"index":4703},{"krate":0,"index":4725},{"krate":0,"index":4728},{"krate":0,"index":4733},{"krate":0,"index":4805},{"krate":0,"index":4845},{"krate":0,"index":4850},{"krate":0,"index":4853},{"krate":0,"index":4858},{"krate":0,"index":4861},{"krate":0,"index":4866},{"krate":0,"index":4869},{"krate":0,"index":4874},{"krate":0,"index":4877},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4890},{"krate":0,"index":4893},{"krate":0,"index":4898},{"krate":0,"index":4901},{"krate":0,"index":4906},{"krate":0,"index":4808},{"krate":0,"index":4830},{"krate":0,"index":4833},{"krate":0,"index":4838},{"krate":0,"index":4910},{"krate":0,"index":4950},{"krate":0,"index":4955},{"krate":0,"index":4958},{"krate":0,"index":4963},{"krate":0,"index":4966},{"krate":0,"index":4971},{"krate":0,"index":4974},{"krate":0,"index":4979},{"krate":0,"index":4982},{"krate":0,"index":4987},{"krate":0,"index":4990},{"krate":0,"index":4995},{"krate":0,"index":4998},{"krate":0,"index":5003},{"krate":0,"index":5006},{"krate":0,"index":5011},{"krate":0,"index":4913},{"krate":0,"index":4935},{"krate":0,"index":4938},{"krate":0,"index":4943},{"krate":0,"index":5015},{"krate":0,"index":5055},{"krate":0,"index":5060},{"krate":0,"index":5063},{"krate":0,"index":5068},{"krate":0,"index":5071},{"krate":0,"index":5076},{"krate":0,"index":5079},{"krate":0,"index":5084},{"krate":0,"index":5087},{"krate":0,"index":5092},{"krate":0,"index":5095},{"krate":0,"index":5100},{"krate":0,"index":5103},{"krate":0,"index":5108},{"krate":0,"index":5111},{"krate":0,"index":5116},{"krate":0,"index":5018},{"krate":0,"index":5040},{"krate":0,"index":5043},{"krate":0,"index":5048},{"krate":0,"index":5120},{"krate":0,"index":5160},{"krate":0,"index":5165},{"krate":0,"index":5168},{"krate":0,"index":5173},{"krate":0,"index":5176},{"krate":0,"index":5181},{"krate":0,"index":5184},{"krate":0,"index":5189},{"krate":0,"index":5192},{"krate":0,"index":5197},{"krate":0,"index":5200},{"krate":0,"index":5205},{"krate":0,"index":5208},{"krate":0,"index":5213},{"krate":0,"index":5216},{"krate":0,"index":5221},{"krate":0,"index":5123},{"krate":0,"index":5145},{"krate":0,"index":5148},{"krate":0,"index":5153},{"krate":0,"index":5225},{"krate":0,"index":5265},{"krate":0,"index":5270},{"krate":0,"index":5273},{"krate":0,"index":5278},{"krate":0,"index":5281},{"krate":0,"index":5286},{"krate":0,"index":5289},{"krate":0,"index":5294},{"krate":0,"index":5297},{"krate":0,"index":5302},{"krate":0,"index":5305},{"krate":0,"index":5310},{"krate":0,"index":5313},{"krate":0,"index":5318},{"krate":0,"index":5321},{"krate":0,"index":5326},{"krate":0,"index":5228},{"krate":0,"index":5250},{"krate":0,"index":5253},{"krate":0,"index":5258},{"krate":0,"index":5330},{"krate":0,"index":5370},{"krate":0,"index":5375},{"krate":0,"index":5378},{"krate":0,"index":5383},{"krate":0,"index":5386},{"krate":0,"index":5391},{"krate":0,"index":5394},{"krate":0,"index":5399},{"krate":0,"index":5402},{"krate":0,"index":5407},{"krate":0,"index":5410},{"krate":0,"index":5415},{"krate":0,"index":5418},{"krate":0,"index":5423},{"krate":0,"index":5426},{"krate":0,"index":5431},{"krate":0,"index":5333},{"krate":0,"index":5355},{"krate":0,"index":5358},{"krate":0,"index":5363},{"krate":0,"index":5435},{"krate":0,"index":5475},{"krate":0,"index":5480},{"krate":0,"index":5483},{"krate":0,"index":5488},{"krate":0,"index":5491},{"krate":0,"index":5496},{"krate":0,"index":5499},{"krate":0,"index":5504},{"krate":0,"index":5507},{"krate":0,"index":5512},{"krate":0,"index":5515},{"krate":0,"index":5520},{"krate":0,"index":5523},{"krate":0,"index":5528},{"krate":0,"index":5531},{"krate":0,"index":5536},{"krate":0,"index":5438},{"krate":0,"index":5460},{"krate":0,"index":5463},{"krate":0,"index":5468},{"krate":0,"index":5540},{"krate":0,"index":5580},{"krate":0,"index":5585},{"krate":0,"index":5588},{"krate":0,"index":5593},{"krate":0,"index":5596},{"krate":0,"index":5601},{"krate":0,"index":5604},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5617},{"krate":0,"index":5620},{"krate":0,"index":5625},{"krate":0,"index":5628},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5641},{"krate":0,"index":5543},{"krate":0,"index":5565},{"krate":0,"index":5568},{"krate":0,"index":5573},{"krate":0,"index":5645},{"krate":0,"index":5685},{"krate":0,"index":5690},{"krate":0,"index":5693},{"krate":0,"index":5698},{"krate":0,"index":5701},{"krate":0,"index":5706},{"krate":0,"index":5709},{"krate":0,"index":5714},{"krate":0,"index":5717},{"krate":0,"index":5722},{"krate":0,"index":5725},{"krate":0,"index":5730},{"krate":0,"index":5733},{"krate":0,"index":5738},{"krate":0,"index":5741},{"krate":0,"index":5746},{"krate":0,"index":5648},{"krate":0,"index":5670},{"krate":0,"index":5673},{"krate":0,"index":5678},{"krate":0,"index":5750},{"krate":0,"index":5790},{"krate":0,"index":5795},{"krate":0,"index":5798},{"krate":0,"index":5803},{"krate":0,"index":5806},{"krate":0,"index":5811},{"krate":0,"index":5814},{"krate":0,"index":5819},{"krate":0,"index":5822},{"krate":0,"index":5827},{"krate":0,"index":5830},{"krate":0,"index":5835},{"krate":0,"index":5838},{"krate":0,"index":5843},{"krate":0,"index":5846},{"krate":0,"index":5851},{"krate":0,"index":5753},{"krate":0,"index":5775},{"krate":0,"index":5778},{"krate":0,"index":5783},{"krate":0,"index":5855},{"krate":0,"index":5895},{"krate":0,"index":5900},{"krate":0,"index":5903},{"krate":0,"index":5908},{"krate":0,"index":5911},{"krate":0,"index":5916},{"krate":0,"index":5919},{"krate":0,"index":5924},{"krate":0,"index":5927},{"krate":0,"index":5932},{"krate":0,"index":5935},{"krate":0,"index":5940},{"krate":0,"index":5943},{"krate":0,"index":5948},{"krate":0,"index":5951},{"krate":0,"index":5956},{"krate":0,"index":5858},{"krate":0,"index":5880},{"krate":0,"index":5883},{"krate":0,"index":5888},{"krate":0,"index":5960},{"krate":0,"index":6000},{"krate":0,"index":6005},{"krate":0,"index":6008},{"krate":0,"index":6013},{"krate":0,"index":6016},{"krate":0,"index":6021},{"krate":0,"index":6024},{"krate":0,"index":6029},{"krate":0,"index":6032},{"krate":0,"index":6037},{"krate":0,"index":6040},{"krate":0,"index":6045},{"krate":0,"index":6048},{"krate":0,"index":6053},{"krate":0,"index":6056},{"krate":0,"index":6061},{"krate":0,"index":5963},{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":5993},{"krate":0,"index":6065},{"krate":0,"index":6105},{"krate":0,"index":6110},{"krate":0,"index":6113},{"krate":0,"index":6118},{"krate":0,"index":6121},{"krate":0,"index":6126},{"krate":0,"index":6129},{"krate":0,"index":6134},{"krate":0,"index":6137},{"krate":0,"index":6142},{"krate":0,"index":6145},{"krate":0,"index":6150},{"krate":0,"index":6153},{"krate":0,"index":6158},{"krate":0,"index":6161},{"krate":0,"index":6166},{"krate":0,"index":6068},{"krate":0,"index":6090},{"krate":0,"index":6093},{"krate":0,"index":6098},{"krate":0,"index":6170},{"krate":0,"index":6210},{"krate":0,"index":6215},{"krate":0,"index":6218},{"krate":0,"index":6223},{"krate":0,"index":6226},{"krate":0,"index":6231},{"krate":0,"index":6234},{"krate":0,"index":6239},{"krate":0,"index":6242},{"krate":0,"index":6247},{"krate":0,"index":6250},{"krate":0,"index":6255},{"krate":0,"index":6258},{"krate":0,"index":6263},{"krate":0,"index":6266},{"krate":0,"index":6271},{"krate":0,"index":6173},{"krate":0,"index":6195},{"krate":0,"index":6198},{"krate":0,"index":6203},{"krate":0,"index":6275},{"krate":0,"index":6315},{"krate":0,"index":6320},{"krate":0,"index":6323},{"krate":0,"index":6328},{"krate":0,"index":6331},{"krate":0,"index":6336},{"krate":0,"index":6339},{"krate":0,"index":6344},{"krate":0,"index":6347},{"krate":0,"index":6352},{"krate":0,"index":6355},{"krate":0,"index":6360},{"krate":0,"index":6363},{"krate":0,"index":6368},{"krate":0,"index":6371},{"krate":0,"index":6376},{"krate":0,"index":6278},{"krate":0,"index":6300},{"krate":0,"index":6303},{"krate":0,"index":6308},{"krate":0,"index":6380},{"krate":0,"index":6420},{"krate":0,"index":6425},{"krate":0,"index":6428},{"krate":0,"index":6433},{"krate":0,"index":6436},{"krate":0,"index":6441},{"krate":0,"index":6444},{"krate":0,"index":6449},{"krate":0,"index":6452},{"krate":0,"index":6457},{"krate":0,"index":6460},{"krate":0,"index":6465},{"krate":0,"index":6468},{"krate":0,"index":6473},{"krate":0,"index":6476},{"krate":0,"index":6481},{"krate":0,"index":6383},{"krate":0,"index":6405},{"krate":0,"index":6408},{"krate":0,"index":6413},{"krate":0,"index":6485},{"krate":0,"index":6525},{"krate":0,"index":6530},{"krate":0,"index":6533},{"krate":0,"index":6538},{"krate":0,"index":6541},{"krate":0,"index":6546},{"krate":0,"index":6549},{"krate":0,"index":6554},{"krate":0,"index":6557},{"krate":0,"index":6562},{"krate":0,"index":6565},{"krate":0,"index":6570},{"krate":0,"index":6573},{"krate":0,"index":6578},{"krate":0,"index":6581},{"krate":0,"index":6586},{"krate":0,"index":6488},{"krate":0,"index":6510},{"krate":0,"index":6513},{"krate":0,"index":6518},{"krate":0,"index":6590},{"krate":0,"index":6630},{"krate":0,"index":6635},{"krate":0,"index":6638},{"krate":0,"index":6643},{"krate":0,"index":6646},{"krate":0,"index":6651},{"krate":0,"index":6654},{"krate":0,"index":6659},{"krate":0,"index":6662},{"krate":0,"index":6667},{"krate":0,"index":6670},{"krate":0,"index":6675},{"krate":0,"index":6678},{"krate":0,"index":6683},{"krate":0,"index":6686},{"krate":0,"index":6691},{"krate":0,"index":6593},{"krate":0,"index":6615},{"krate":0,"index":6618},{"krate":0,"index":6623},{"krate":0,"index":6695},{"krate":0,"index":6735},{"krate":0,"index":6740},{"krate":0,"index":6743},{"krate":0,"index":6748},{"krate":0,"index":6751},{"krate":0,"index":6756},{"krate":0,"index":6759},{"krate":0,"index":6764},{"krate":0,"index":6767},{"krate":0,"index":6772},{"krate":0,"index":6775},{"krate":0,"index":6780},{"krate":0,"index":6783},{"krate":0,"index":6788},{"krate":0,"index":6791},{"krate":0,"index":6796},{"krate":0,"index":6698},{"krate":0,"index":6720},{"krate":0,"index":6723},{"krate":0,"index":6728},{"krate":0,"index":6800},{"krate":0,"index":6840},{"krate":0,"index":6845},{"krate":0,"index":6848},{"krate":0,"index":6853},{"krate":0,"index":6856},{"krate":0,"index":6861},{"krate":0,"index":6864},{"krate":0,"index":6869},{"krate":0,"index":6872},{"krate":0,"index":6877},{"krate":0,"index":6880},{"krate":0,"index":6885},{"krate":0,"index":6888},{"krate":0,"index":6893},{"krate":0,"index":6896},{"krate":0,"index":6901},{"krate":0,"index":6803},{"krate":0,"index":6825},{"krate":0,"index":6828},{"krate":0,"index":6833},{"krate":0,"index":6905},{"krate":0,"index":6945},{"krate":0,"index":6950},{"krate":0,"index":6953},{"krate":0,"index":6958},{"krate":0,"index":6961},{"krate":0,"index":6966},{"krate":0,"index":6969},{"krate":0,"index":6974},{"krate":0,"index":6977},{"krate":0,"index":6982},{"krate":0,"index":6985},{"krate":0,"index":6990},{"krate":0,"index":6993},{"krate":0,"index":6998},{"krate":0,"index":7001},{"krate":0,"index":7006},{"krate":0,"index":6908},{"krate":0,"index":6930},{"krate":0,"index":6933},{"krate":0,"index":6938},{"krate":0,"index":7010},{"krate":0,"index":7050},{"krate":0,"index":7055},{"krate":0,"index":7058},{"krate":0,"index":7063},{"krate":0,"index":7066},{"krate":0,"index":7071},{"krate":0,"index":7074},{"krate":0,"index":7079},{"krate":0,"index":7082},{"krate":0,"index":7087},{"krate":0,"index":7090},{"krate":0,"index":7095},{"krate":0,"index":7098},{"krate":0,"index":7103},{"krate":0,"index":7106},{"krate":0,"index":7111},{"krate":0,"index":7013},{"krate":0,"index":7035},{"krate":0,"index":7038},{"krate":0,"index":7043},{"krate":0,"index":7115},{"krate":0,"index":7155},{"krate":0,"index":7160},{"krate":0,"index":7163},{"krate":0,"index":7168},{"krate":0,"index":7171},{"krate":0,"index":7176},{"krate":0,"index":7179},{"krate":0,"index":7184},{"krate":0,"index":7187},{"krate":0,"index":7192},{"krate":0,"index":7195},{"krate":0,"index":7200},{"krate":0,"index":7203},{"krate":0,"index":7208},{"krate":0,"index":7211},{"krate":0,"index":7216},{"krate":0,"index":7118},{"krate":0,"index":7140},{"krate":0,"index":7143},{"krate":0,"index":7148},{"krate":0,"index":7220},{"krate":0,"index":7260},{"krate":0,"index":7265},{"krate":0,"index":7268},{"krate":0,"index":7273},{"krate":0,"index":7276},{"krate":0,"index":7281},{"krate":0,"index":7284},{"krate":0,"index":7289},{"krate":0,"index":7292},{"krate":0,"index":7297},{"krate":0,"index":7300},{"krate":0,"index":7305},{"krate":0,"index":7308},{"krate":0,"index":7313},{"krate":0,"index":7316},{"krate":0,"index":7321},{"krate":0,"index":7223},{"krate":0,"index":7245},{"krate":0,"index":7248},{"krate":0,"index":7253}],"decl_id":null,"docs":" Working with GPIO pins.\n The pins are associated with the PORT hardware.  This module\n defines a `split` method on the `PORT` type that is used to safely\n reference the individual pin configuration.\n The IO pins can be switched into alternate function modes, which\n routes the pins to different peripherals depending on the mode\n for the pin.  The pin configuration is reflected through the\n use of type states to make the interface (ideally, or at least practically)\n impossible to misuse.\n","sig":null,"attributes":[{"value":"! Working with GPIO pins.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":12466,"byte_end":12493,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"! The pins are associated with the PORT hardware.  This module","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":12494,"byte_end":12558,"line_start":2,"line_end":2,"column_start":1,"column_end":65}},{"value":"! defines a `split` method on the `PORT` type that is used to safely","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":12559,"byte_end":12629,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! reference the individual pin configuration.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":12630,"byte_end":12677,"line_start":4,"line_end":4,"column_start":1,"column_end":48}},{"value":"! The IO pins can be switched into alternate function modes, which","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":12678,"byte_end":12746,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"! routes the pins to different peripherals depending on the mode","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":12747,"byte_end":12813,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"! for the pin.  The pin configuration is reflected through the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":12814,"byte_end":12878,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"! use of type states to make the interface (ideally, or at least practically)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":12879,"byte_end":12958,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"! impossible to misuse.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":12959,"byte_end":12984,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":141},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13487,"byte_end":13494,"line_start":24,"line_end":24,"column_start":11,"column_end":18},"name":"GpioExt","qualname":"::common::thumbv6m::gpio::GpioExt","value":"GpioExt","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" The GpioExt trait allows splitting the PORT hardware into\n its constituent pin parts.\n","sig":null,"attributes":[{"value":"/ The GpioExt trait allows splitting the PORT hardware into","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13384,"byte_end":13445,"line_start":22,"line_end":22,"column_start":1,"column_end":62}},{"value":"/ its constituent pin parts.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13446,"byte_end":13476,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":142},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13506,"byte_end":13511,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Parts","qualname":"::common::thumbv6m::gpio::GpioExt::Parts","value":"type Parts;","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13584,"byte_end":13589,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"split","qualname":"::common::thumbv6m::gpio::GpioExt::split","value":"pub fn split(Self) -> Self::Parts","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Consume and split the device into its constitent parts\n","sig":null,"attributes":[{"value":"/ Consume and split the device into its constitent parts","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13518,"byte_end":13576,"line_start":27,"line_end":27,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":144},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13747,"byte_end":13752,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Input","qualname":"::common::thumbv6m::gpio::Input","value":"Input {  }","parent":null,"children":[{"krate":0,"index":146}],"decl_id":null,"docs":" Represents a pin configured for input.\n The MODE type is typically one of `Floating`, `PullDown` or\n `PullUp`.\n","sig":null,"attributes":[{"value":"/ Represents a pin configured for input.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13615,"byte_end":13657,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/ The MODE type is typically one of `Floating`, `PullDown` or","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13658,"byte_end":13721,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ `PullUp`.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13722,"byte_end":13735,"line_start":33,"line_end":33,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":147},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13919,"byte_end":13925,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"Output","qualname":"::common::thumbv6m::gpio::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":149}],"decl_id":null,"docs":" Represents a pin configured for output.\n The MODE type is typically one of `PushPull`, or\n `OpenDrain`.\n","sig":null,"attributes":[{"value":"/ Represents a pin configured for output.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13794,"byte_end":13837,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ The MODE type is typically one of `PushPull`, or","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13838,"byte_end":13890,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ `OpenDrain`.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":13891,"byte_end":13907,"line_start":40,"line_end":40,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":150},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14120,"byte_end":14128,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"Floating","qualname":"::common::thumbv6m::gpio::Floating","value":"","parent":null,"children":[],"decl_id":null,"docs":" Floating Input\n","sig":null,"attributes":[{"value":"/ Floating Input","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14090,"byte_end":14108,"line_start":48,"line_end":48,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14163,"byte_end":14171,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"PullDown","qualname":"::common::thumbv6m::gpio::PullDown","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled down Input\n","sig":null,"attributes":[{"value":"/ Pulled down Input","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14130,"byte_end":14151,"line_start":50,"line_end":50,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14204,"byte_end":14210,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"PullUp","qualname":"::common::thumbv6m::gpio::PullUp","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled up Input\n","sig":null,"attributes":[{"value":"/ Pulled up Input","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14173,"byte_end":14192,"line_start":52,"line_end":52,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14253,"byte_end":14261,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"PushPull","qualname":"::common::thumbv6m::gpio::PushPull","value":"","parent":null,"children":[],"decl_id":null,"docs":" Totem Pole aka Push-Pull\n","sig":null,"attributes":[{"value":"/ Totem Pole aka Push-Pull","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14213,"byte_end":14241,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":158},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14296,"byte_end":14305,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"OpenDrain","qualname":"::common::thumbv6m::gpio::OpenDrain","value":"","parent":null,"children":[],"decl_id":null,"docs":" Open drain output\n","sig":null,"attributes":[{"value":"/ Open drain output","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14263,"byte_end":14284,"line_start":57,"line_end":57,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14375,"byte_end":14392,"line_start":60,"line_end":60,"column_start":12,"column_end":29},"name":"ReadableOpenDrain","qualname":"::common::thumbv6m::gpio::ReadableOpenDrain","value":"","parent":null,"children":[],"decl_id":null,"docs":" Open drain output, which can be read when not driven\n","sig":null,"attributes":[{"value":"/ Open drain output, which can be read when not driven","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14307,"byte_end":14363,"line_start":59,"line_end":59,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14432,"byte_end":14435,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"PfA","qualname":"::common::thumbv6m::gpio::PfA","value":"","parent":null,"children":[],"decl_id":null,"docs":" Peripheral Function A\n","sig":null,"attributes":[{"value":"/ Peripheral Function A","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14395,"byte_end":14420,"line_start":62,"line_end":62,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14474,"byte_end":14477,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"PfB","qualname":"::common::thumbv6m::gpio::PfB","value":"","parent":null,"children":[],"decl_id":null,"docs":" Peripheral Function B\n","sig":null,"attributes":[{"value":"/ Peripheral Function B","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14437,"byte_end":14462,"line_start":64,"line_end":64,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14516,"byte_end":14519,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"PfC","qualname":"::common::thumbv6m::gpio::PfC","value":"","parent":null,"children":[],"decl_id":null,"docs":" Peripheral Function C\n","sig":null,"attributes":[{"value":"/ Peripheral Function C","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14479,"byte_end":14504,"line_start":66,"line_end":66,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14558,"byte_end":14561,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"PfD","qualname":"::common::thumbv6m::gpio::PfD","value":"","parent":null,"children":[],"decl_id":null,"docs":" Peripheral Function D\n","sig":null,"attributes":[{"value":"/ Peripheral Function D","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14521,"byte_end":14546,"line_start":68,"line_end":68,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14600,"byte_end":14603,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"PfE","qualname":"::common::thumbv6m::gpio::PfE","value":"","parent":null,"children":[],"decl_id":null,"docs":" Peripheral Function E\n","sig":null,"attributes":[{"value":"/ Peripheral Function E","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14563,"byte_end":14588,"line_start":70,"line_end":70,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14642,"byte_end":14645,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"PfF","qualname":"::common::thumbv6m::gpio::PfF","value":"","parent":null,"children":[],"decl_id":null,"docs":" Peripheral Function F\n","sig":null,"attributes":[{"value":"/ Peripheral Function F","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14605,"byte_end":14630,"line_start":72,"line_end":72,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":174},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14684,"byte_end":14687,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"PfG","qualname":"::common::thumbv6m::gpio::PfG","value":"","parent":null,"children":[],"decl_id":null,"docs":" Peripheral Function G\n","sig":null,"attributes":[{"value":"/ Peripheral Function G","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14647,"byte_end":14672,"line_start":74,"line_end":74,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":176},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14726,"byte_end":14729,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"PfH","qualname":"::common::thumbv6m::gpio::PfH","value":"","parent":null,"children":[],"decl_id":null,"docs":" Peripheral Function H\n","sig":null,"attributes":[{"value":"/ Peripheral Function H","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14689,"byte_end":14714,"line_start":76,"line_end":76,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":15022,"byte_end":15034,"line_start":85,"line_end":85,"column_start":11,"column_end":23},"name":"IntoFunction","qualname":"::common::thumbv6m::gpio::IntoFunction","value":"IntoFunction<T>","parent":null,"children":[{"krate":0,"index":180}],"decl_id":null,"docs":" A trait that makes it easier to generically manage\n converting a pin from its current state into some\n other functional mode.  The configuration change\n requires exclusive access to the Port hardware,\n which is why this isn't simply the standard `Into`\n trait.\n","sig":null,"attributes":[{"value":"/ A trait that makes it easier to generically manage","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14732,"byte_end":14786,"line_start":79,"line_end":79,"column_start":1,"column_end":55}},{"value":"/ converting a pin from its current state into some","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14787,"byte_end":14840,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"/ other functional mode.  The configuration change","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14841,"byte_end":14893,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"/ requires exclusive access to the Port hardware,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14894,"byte_end":14945,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ which is why this isn't simply the standard `Into`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":14946,"byte_end":15000,"line_start":83,"line_end":83,"column_start":1,"column_end":55}},{"value":"/ trait.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":15001,"byte_end":15011,"line_start":84,"line_end":84,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":15122,"byte_end":15135,"line_start":88,"line_end":88,"column_start":8,"column_end":21},"name":"into_function","qualname":"::common::thumbv6m::gpio::IntoFunction::into_function","value":"pub fn into_function(Self, &mut Port) -> T","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Consume the pin and configure it to operate in\n the mode T.\n","sig":null,"attributes":[{"value":"/ Consume the pin and configure it to operate in","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":15044,"byte_end":15094,"line_start":86,"line_end":86,"column_start":5,"column_end":55}},{"value":"/ the mode T.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":15099,"byte_end":15114,"line_start":87,"line_end":87,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":181},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":25268,"byte_end":25272,"line_start":394,"line_end":394,"column_start":12,"column_end":16},"name":"Port","qualname":"::common::thumbv6m::gpio::Port","value":"Port {  }","parent":null,"children":[{"krate":0,"index":182}],"decl_id":null,"docs":" Opaque port reference\n","sig":null,"attributes":[{"value":"/ Opaque port reference","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":25231,"byte_end":25256,"line_start":393,"line_end":393,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":537},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28150,"byte_end":28153,"line_start":499,"line_end":499,"column_start":11,"column_end":14},"name":"pa0","qualname":"::common::thumbv6m::gpio::Parts::pa0","value":"common::thumbv6m::gpio::Pa0<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":538},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28169,"byte_end":28172,"line_start":500,"line_end":500,"column_start":11,"column_end":14},"name":"pa1","qualname":"::common::thumbv6m::gpio::Parts::pa1","value":"common::thumbv6m::gpio::Pa1<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":539},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28188,"byte_end":28191,"line_start":501,"line_end":501,"column_start":11,"column_end":14},"name":"pa2","qualname":"::common::thumbv6m::gpio::Parts::pa2","value":"common::thumbv6m::gpio::Pa2<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":540},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28207,"byte_end":28210,"line_start":502,"line_end":502,"column_start":11,"column_end":14},"name":"pa3","qualname":"::common::thumbv6m::gpio::Parts::pa3","value":"common::thumbv6m::gpio::Pa3<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":541},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28226,"byte_end":28229,"line_start":503,"line_end":503,"column_start":11,"column_end":14},"name":"pa4","qualname":"::common::thumbv6m::gpio::Parts::pa4","value":"common::thumbv6m::gpio::Pa4<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":542},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28245,"byte_end":28248,"line_start":504,"line_end":504,"column_start":11,"column_end":14},"name":"pa5","qualname":"::common::thumbv6m::gpio::Parts::pa5","value":"common::thumbv6m::gpio::Pa5<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":543},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28264,"byte_end":28267,"line_start":505,"line_end":505,"column_start":11,"column_end":14},"name":"pa6","qualname":"::common::thumbv6m::gpio::Parts::pa6","value":"common::thumbv6m::gpio::Pa6<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":544},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28283,"byte_end":28286,"line_start":506,"line_end":506,"column_start":11,"column_end":14},"name":"pa7","qualname":"::common::thumbv6m::gpio::Parts::pa7","value":"common::thumbv6m::gpio::Pa7<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":545},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28302,"byte_end":28305,"line_start":507,"line_end":507,"column_start":11,"column_end":14},"name":"pa8","qualname":"::common::thumbv6m::gpio::Parts::pa8","value":"common::thumbv6m::gpio::Pa8<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":546},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28321,"byte_end":28324,"line_start":508,"line_end":508,"column_start":11,"column_end":14},"name":"pa9","qualname":"::common::thumbv6m::gpio::Parts::pa9","value":"common::thumbv6m::gpio::Pa9<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":547},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28341,"byte_end":28345,"line_start":509,"line_end":509,"column_start":12,"column_end":16},"name":"pa10","qualname":"::common::thumbv6m::gpio::Parts::pa10","value":"common::thumbv6m::gpio::Pa10<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":548},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28363,"byte_end":28367,"line_start":510,"line_end":510,"column_start":12,"column_end":16},"name":"pa11","qualname":"::common::thumbv6m::gpio::Parts::pa11","value":"common::thumbv6m::gpio::Pa11<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":549},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28385,"byte_end":28389,"line_start":511,"line_end":511,"column_start":12,"column_end":16},"name":"pa12","qualname":"::common::thumbv6m::gpio::Parts::pa12","value":"common::thumbv6m::gpio::Pa12<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":550},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28407,"byte_end":28411,"line_start":512,"line_end":512,"column_start":12,"column_end":16},"name":"pa13","qualname":"::common::thumbv6m::gpio::Parts::pa13","value":"common::thumbv6m::gpio::Pa13<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":551},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28429,"byte_end":28433,"line_start":513,"line_end":513,"column_start":12,"column_end":16},"name":"pa14","qualname":"::common::thumbv6m::gpio::Parts::pa14","value":"common::thumbv6m::gpio::Pa14<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":552},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28451,"byte_end":28455,"line_start":514,"line_end":514,"column_start":12,"column_end":16},"name":"pa15","qualname":"::common::thumbv6m::gpio::Parts::pa15","value":"common::thumbv6m::gpio::Pa15<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":553},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28473,"byte_end":28477,"line_start":515,"line_end":515,"column_start":12,"column_end":16},"name":"pa16","qualname":"::common::thumbv6m::gpio::Parts::pa16","value":"common::thumbv6m::gpio::Pa16<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":554},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28495,"byte_end":28499,"line_start":516,"line_end":516,"column_start":12,"column_end":16},"name":"pa17","qualname":"::common::thumbv6m::gpio::Parts::pa17","value":"common::thumbv6m::gpio::Pa17<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":555},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28517,"byte_end":28521,"line_start":517,"line_end":517,"column_start":12,"column_end":16},"name":"pa18","qualname":"::common::thumbv6m::gpio::Parts::pa18","value":"common::thumbv6m::gpio::Pa18<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":556},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28539,"byte_end":28543,"line_start":518,"line_end":518,"column_start":12,"column_end":16},"name":"pa19","qualname":"::common::thumbv6m::gpio::Parts::pa19","value":"common::thumbv6m::gpio::Pa19<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":557},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28561,"byte_end":28565,"line_start":519,"line_end":519,"column_start":12,"column_end":16},"name":"pa20","qualname":"::common::thumbv6m::gpio::Parts::pa20","value":"common::thumbv6m::gpio::Pa20<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":558},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28583,"byte_end":28587,"line_start":520,"line_end":520,"column_start":12,"column_end":16},"name":"pa21","qualname":"::common::thumbv6m::gpio::Parts::pa21","value":"common::thumbv6m::gpio::Pa21<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":559},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28605,"byte_end":28609,"line_start":521,"line_end":521,"column_start":12,"column_end":16},"name":"pa22","qualname":"::common::thumbv6m::gpio::Parts::pa22","value":"common::thumbv6m::gpio::Pa22<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":560},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28627,"byte_end":28631,"line_start":522,"line_end":522,"column_start":12,"column_end":16},"name":"pa23","qualname":"::common::thumbv6m::gpio::Parts::pa23","value":"common::thumbv6m::gpio::Pa23<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":561},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28649,"byte_end":28653,"line_start":523,"line_end":523,"column_start":12,"column_end":16},"name":"pa24","qualname":"::common::thumbv6m::gpio::Parts::pa24","value":"common::thumbv6m::gpio::Pa24<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":562},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28671,"byte_end":28675,"line_start":524,"line_end":524,"column_start":12,"column_end":16},"name":"pa25","qualname":"::common::thumbv6m::gpio::Parts::pa25","value":"common::thumbv6m::gpio::Pa25<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":563},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28693,"byte_end":28697,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"pa26","qualname":"::common::thumbv6m::gpio::Parts::pa26","value":"common::thumbv6m::gpio::Pa26<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":564},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28715,"byte_end":28719,"line_start":526,"line_end":526,"column_start":12,"column_end":16},"name":"pa27","qualname":"::common::thumbv6m::gpio::Parts::pa27","value":"common::thumbv6m::gpio::Pa27<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":565},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28737,"byte_end":28741,"line_start":527,"line_end":527,"column_start":12,"column_end":16},"name":"pa28","qualname":"::common::thumbv6m::gpio::Parts::pa28","value":"common::thumbv6m::gpio::Pa28<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":566},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28759,"byte_end":28763,"line_start":528,"line_end":528,"column_start":12,"column_end":16},"name":"pa29","qualname":"::common::thumbv6m::gpio::Parts::pa29","value":"common::thumbv6m::gpio::Pa29<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":567},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28781,"byte_end":28785,"line_start":529,"line_end":529,"column_start":12,"column_end":16},"name":"pa30","qualname":"::common::thumbv6m::gpio::Parts::pa30","value":"common::thumbv6m::gpio::Pa30<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":568},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28803,"byte_end":28807,"line_start":530,"line_end":530,"column_start":12,"column_end":16},"name":"pa31","qualname":"::common::thumbv6m::gpio::Parts::pa31","value":"common::thumbv6m::gpio::Pa31<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identA\n","sig":null,"attributes":[{"value":"/ Pin $pin_identA","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27095,"byte_end":27114,"line_start":457,"line_end":457,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":569},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28828,"byte_end":28831,"line_start":532,"line_end":532,"column_start":11,"column_end":14},"name":"pb0","qualname":"::common::thumbv6m::gpio::Parts::pb0","value":"common::thumbv6m::gpio::Pb0<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":570},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28847,"byte_end":28850,"line_start":533,"line_end":533,"column_start":11,"column_end":14},"name":"pb1","qualname":"::common::thumbv6m::gpio::Parts::pb1","value":"common::thumbv6m::gpio::Pb1<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":571},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28866,"byte_end":28869,"line_start":534,"line_end":534,"column_start":11,"column_end":14},"name":"pb2","qualname":"::common::thumbv6m::gpio::Parts::pb2","value":"common::thumbv6m::gpio::Pb2<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":572},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28885,"byte_end":28888,"line_start":535,"line_end":535,"column_start":11,"column_end":14},"name":"pb3","qualname":"::common::thumbv6m::gpio::Parts::pb3","value":"common::thumbv6m::gpio::Pb3<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":573},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28904,"byte_end":28907,"line_start":536,"line_end":536,"column_start":11,"column_end":14},"name":"pb4","qualname":"::common::thumbv6m::gpio::Parts::pb4","value":"common::thumbv6m::gpio::Pb4<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":574},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28923,"byte_end":28926,"line_start":537,"line_end":537,"column_start":11,"column_end":14},"name":"pb5","qualname":"::common::thumbv6m::gpio::Parts::pb5","value":"common::thumbv6m::gpio::Pb5<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":575},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28942,"byte_end":28945,"line_start":538,"line_end":538,"column_start":11,"column_end":14},"name":"pb6","qualname":"::common::thumbv6m::gpio::Parts::pb6","value":"common::thumbv6m::gpio::Pb6<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":576},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28961,"byte_end":28964,"line_start":539,"line_end":539,"column_start":11,"column_end":14},"name":"pb7","qualname":"::common::thumbv6m::gpio::Parts::pb7","value":"common::thumbv6m::gpio::Pb7<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":577},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28980,"byte_end":28983,"line_start":540,"line_end":540,"column_start":11,"column_end":14},"name":"pb8","qualname":"::common::thumbv6m::gpio::Parts::pb8","value":"common::thumbv6m::gpio::Pb8<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":578},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28999,"byte_end":29002,"line_start":541,"line_end":541,"column_start":11,"column_end":14},"name":"pb9","qualname":"::common::thumbv6m::gpio::Parts::pb9","value":"common::thumbv6m::gpio::Pb9<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":579},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29019,"byte_end":29023,"line_start":542,"line_end":542,"column_start":12,"column_end":16},"name":"pb10","qualname":"::common::thumbv6m::gpio::Parts::pb10","value":"common::thumbv6m::gpio::Pb10<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":580},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29041,"byte_end":29045,"line_start":543,"line_end":543,"column_start":12,"column_end":16},"name":"pb11","qualname":"::common::thumbv6m::gpio::Parts::pb11","value":"common::thumbv6m::gpio::Pb11<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":581},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29063,"byte_end":29067,"line_start":544,"line_end":544,"column_start":12,"column_end":16},"name":"pb12","qualname":"::common::thumbv6m::gpio::Parts::pb12","value":"common::thumbv6m::gpio::Pb12<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":582},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29085,"byte_end":29089,"line_start":545,"line_end":545,"column_start":12,"column_end":16},"name":"pb13","qualname":"::common::thumbv6m::gpio::Parts::pb13","value":"common::thumbv6m::gpio::Pb13<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":583},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29107,"byte_end":29111,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"pb14","qualname":"::common::thumbv6m::gpio::Parts::pb14","value":"common::thumbv6m::gpio::Pb14<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":584},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29129,"byte_end":29133,"line_start":547,"line_end":547,"column_start":12,"column_end":16},"name":"pb15","qualname":"::common::thumbv6m::gpio::Parts::pb15","value":"common::thumbv6m::gpio::Pb15<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":585},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29151,"byte_end":29155,"line_start":548,"line_end":548,"column_start":12,"column_end":16},"name":"pb16","qualname":"::common::thumbv6m::gpio::Parts::pb16","value":"common::thumbv6m::gpio::Pb16<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":586},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29173,"byte_end":29177,"line_start":549,"line_end":549,"column_start":12,"column_end":16},"name":"pb17","qualname":"::common::thumbv6m::gpio::Parts::pb17","value":"common::thumbv6m::gpio::Pb17<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":587},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29195,"byte_end":29199,"line_start":550,"line_end":550,"column_start":12,"column_end":16},"name":"pb18","qualname":"::common::thumbv6m::gpio::Parts::pb18","value":"common::thumbv6m::gpio::Pb18<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":588},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29217,"byte_end":29221,"line_start":551,"line_end":551,"column_start":12,"column_end":16},"name":"pb19","qualname":"::common::thumbv6m::gpio::Parts::pb19","value":"common::thumbv6m::gpio::Pb19<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":589},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29239,"byte_end":29243,"line_start":552,"line_end":552,"column_start":12,"column_end":16},"name":"pb20","qualname":"::common::thumbv6m::gpio::Parts::pb20","value":"common::thumbv6m::gpio::Pb20<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":590},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29261,"byte_end":29265,"line_start":553,"line_end":553,"column_start":12,"column_end":16},"name":"pb21","qualname":"::common::thumbv6m::gpio::Parts::pb21","value":"common::thumbv6m::gpio::Pb21<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":591},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29283,"byte_end":29287,"line_start":554,"line_end":554,"column_start":12,"column_end":16},"name":"pb22","qualname":"::common::thumbv6m::gpio::Parts::pb22","value":"common::thumbv6m::gpio::Pb22<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":592},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29305,"byte_end":29309,"line_start":555,"line_end":555,"column_start":12,"column_end":16},"name":"pb23","qualname":"::common::thumbv6m::gpio::Parts::pb23","value":"common::thumbv6m::gpio::Pb23<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":593},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29327,"byte_end":29331,"line_start":556,"line_end":556,"column_start":12,"column_end":16},"name":"pb24","qualname":"::common::thumbv6m::gpio::Parts::pb24","value":"common::thumbv6m::gpio::Pb24<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":594},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29349,"byte_end":29353,"line_start":557,"line_end":557,"column_start":12,"column_end":16},"name":"pb25","qualname":"::common::thumbv6m::gpio::Parts::pb25","value":"common::thumbv6m::gpio::Pb25<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":595},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29371,"byte_end":29375,"line_start":558,"line_end":558,"column_start":12,"column_end":16},"name":"pb26","qualname":"::common::thumbv6m::gpio::Parts::pb26","value":"common::thumbv6m::gpio::Pb26<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":596},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29393,"byte_end":29397,"line_start":559,"line_end":559,"column_start":12,"column_end":16},"name":"pb27","qualname":"::common::thumbv6m::gpio::Parts::pb27","value":"common::thumbv6m::gpio::Pb27<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":597},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29415,"byte_end":29419,"line_start":560,"line_end":560,"column_start":12,"column_end":16},"name":"pb28","qualname":"::common::thumbv6m::gpio::Parts::pb28","value":"common::thumbv6m::gpio::Pb28<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":598},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29437,"byte_end":29441,"line_start":561,"line_end":561,"column_start":12,"column_end":16},"name":"pb29","qualname":"::common::thumbv6m::gpio::Parts::pb29","value":"common::thumbv6m::gpio::Pb29<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":599},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29459,"byte_end":29463,"line_start":562,"line_end":562,"column_start":12,"column_end":16},"name":"pb30","qualname":"::common::thumbv6m::gpio::Parts::pb30","value":"common::thumbv6m::gpio::Pb30<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":600},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29481,"byte_end":29485,"line_start":563,"line_end":563,"column_start":12,"column_end":16},"name":"pb31","qualname":"::common::thumbv6m::gpio::Parts::pb31","value":"common::thumbv6m::gpio::Pb31<common::thumbv6m::gpio::Input<common::thumbv6m::gpio::Floating>>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Pin $pin_identB\n","sig":null,"attributes":[{"value":"/ Pin $pin_identB","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27190,"byte_end":27209,"line_start":461,"line_end":461,"column_start":9,"column_end":28}},{"value":"cfg(any(feature = \"samd21g18a\", feature = \"samd21j18a\"))","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":27218,"byte_end":27275,"line_start":462,"line_end":462,"column_start":9,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28144,"byte_end":28147,"line_start":499,"line_end":499,"column_start":5,"column_end":8},"name":"Pa0","qualname":"::common::thumbv6m::gpio::Pa0","value":"Pa0 {  }","parent":null,"children":[{"krate":0,"index":607}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28163,"byte_end":28166,"line_start":500,"line_end":500,"column_start":5,"column_end":8},"name":"Pa1","qualname":"::common::thumbv6m::gpio::Pa1","value":"Pa1 {  }","parent":null,"children":[{"krate":0,"index":712}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":815},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28182,"byte_end":28185,"line_start":501,"line_end":501,"column_start":5,"column_end":8},"name":"Pa2","qualname":"::common::thumbv6m::gpio::Pa2","value":"Pa2 {  }","parent":null,"children":[{"krate":0,"index":817}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":920},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28201,"byte_end":28204,"line_start":502,"line_end":502,"column_start":5,"column_end":8},"name":"Pa3","qualname":"::common::thumbv6m::gpio::Pa3","value":"Pa3 {  }","parent":null,"children":[{"krate":0,"index":922}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1025},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28220,"byte_end":28223,"line_start":503,"line_end":503,"column_start":5,"column_end":8},"name":"Pa4","qualname":"::common::thumbv6m::gpio::Pa4","value":"Pa4 {  }","parent":null,"children":[{"krate":0,"index":1027}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1130},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28239,"byte_end":28242,"line_start":504,"line_end":504,"column_start":5,"column_end":8},"name":"Pa5","qualname":"::common::thumbv6m::gpio::Pa5","value":"Pa5 {  }","parent":null,"children":[{"krate":0,"index":1132}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1235},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28258,"byte_end":28261,"line_start":505,"line_end":505,"column_start":5,"column_end":8},"name":"Pa6","qualname":"::common::thumbv6m::gpio::Pa6","value":"Pa6 {  }","parent":null,"children":[{"krate":0,"index":1237}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1340},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28277,"byte_end":28280,"line_start":506,"line_end":506,"column_start":5,"column_end":8},"name":"Pa7","qualname":"::common::thumbv6m::gpio::Pa7","value":"Pa7 {  }","parent":null,"children":[{"krate":0,"index":1342}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28296,"byte_end":28299,"line_start":507,"line_end":507,"column_start":5,"column_end":8},"name":"Pa8","qualname":"::common::thumbv6m::gpio::Pa8","value":"Pa8 {  }","parent":null,"children":[{"krate":0,"index":1447}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1550},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28315,"byte_end":28318,"line_start":508,"line_end":508,"column_start":5,"column_end":8},"name":"Pa9","qualname":"::common::thumbv6m::gpio::Pa9","value":"Pa9 {  }","parent":null,"children":[{"krate":0,"index":1552}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1655},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28334,"byte_end":28338,"line_start":509,"line_end":509,"column_start":5,"column_end":9},"name":"Pa10","qualname":"::common::thumbv6m::gpio::Pa10","value":"Pa10 {  }","parent":null,"children":[{"krate":0,"index":1657}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1760},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28356,"byte_end":28360,"line_start":510,"line_end":510,"column_start":5,"column_end":9},"name":"Pa11","qualname":"::common::thumbv6m::gpio::Pa11","value":"Pa11 {  }","parent":null,"children":[{"krate":0,"index":1762}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1865},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28378,"byte_end":28382,"line_start":511,"line_end":511,"column_start":5,"column_end":9},"name":"Pa12","qualname":"::common::thumbv6m::gpio::Pa12","value":"Pa12 {  }","parent":null,"children":[{"krate":0,"index":1867}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1970},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28400,"byte_end":28404,"line_start":512,"line_end":512,"column_start":5,"column_end":9},"name":"Pa13","qualname":"::common::thumbv6m::gpio::Pa13","value":"Pa13 {  }","parent":null,"children":[{"krate":0,"index":1972}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2075},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28422,"byte_end":28426,"line_start":513,"line_end":513,"column_start":5,"column_end":9},"name":"Pa14","qualname":"::common::thumbv6m::gpio::Pa14","value":"Pa14 {  }","parent":null,"children":[{"krate":0,"index":2077}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2180},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28444,"byte_end":28448,"line_start":514,"line_end":514,"column_start":5,"column_end":9},"name":"Pa15","qualname":"::common::thumbv6m::gpio::Pa15","value":"Pa15 {  }","parent":null,"children":[{"krate":0,"index":2182}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2285},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28466,"byte_end":28470,"line_start":515,"line_end":515,"column_start":5,"column_end":9},"name":"Pa16","qualname":"::common::thumbv6m::gpio::Pa16","value":"Pa16 {  }","parent":null,"children":[{"krate":0,"index":2287}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2390},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28488,"byte_end":28492,"line_start":516,"line_end":516,"column_start":5,"column_end":9},"name":"Pa17","qualname":"::common::thumbv6m::gpio::Pa17","value":"Pa17 {  }","parent":null,"children":[{"krate":0,"index":2392}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2495},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28510,"byte_end":28514,"line_start":517,"line_end":517,"column_start":5,"column_end":9},"name":"Pa18","qualname":"::common::thumbv6m::gpio::Pa18","value":"Pa18 {  }","parent":null,"children":[{"krate":0,"index":2497}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2600},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28532,"byte_end":28536,"line_start":518,"line_end":518,"column_start":5,"column_end":9},"name":"Pa19","qualname":"::common::thumbv6m::gpio::Pa19","value":"Pa19 {  }","parent":null,"children":[{"krate":0,"index":2602}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2705},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28554,"byte_end":28558,"line_start":519,"line_end":519,"column_start":5,"column_end":9},"name":"Pa20","qualname":"::common::thumbv6m::gpio::Pa20","value":"Pa20 {  }","parent":null,"children":[{"krate":0,"index":2707}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2810},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28576,"byte_end":28580,"line_start":520,"line_end":520,"column_start":5,"column_end":9},"name":"Pa21","qualname":"::common::thumbv6m::gpio::Pa21","value":"Pa21 {  }","parent":null,"children":[{"krate":0,"index":2812}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2915},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28598,"byte_end":28602,"line_start":521,"line_end":521,"column_start":5,"column_end":9},"name":"Pa22","qualname":"::common::thumbv6m::gpio::Pa22","value":"Pa22 {  }","parent":null,"children":[{"krate":0,"index":2917}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3020},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28620,"byte_end":28624,"line_start":522,"line_end":522,"column_start":5,"column_end":9},"name":"Pa23","qualname":"::common::thumbv6m::gpio::Pa23","value":"Pa23 {  }","parent":null,"children":[{"krate":0,"index":3022}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3125},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28642,"byte_end":28646,"line_start":523,"line_end":523,"column_start":5,"column_end":9},"name":"Pa24","qualname":"::common::thumbv6m::gpio::Pa24","value":"Pa24 {  }","parent":null,"children":[{"krate":0,"index":3127}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3230},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28664,"byte_end":28668,"line_start":524,"line_end":524,"column_start":5,"column_end":9},"name":"Pa25","qualname":"::common::thumbv6m::gpio::Pa25","value":"Pa25 {  }","parent":null,"children":[{"krate":0,"index":3232}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3335},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28686,"byte_end":28690,"line_start":525,"line_end":525,"column_start":5,"column_end":9},"name":"Pa26","qualname":"::common::thumbv6m::gpio::Pa26","value":"Pa26 {  }","parent":null,"children":[{"krate":0,"index":3337}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3440},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28708,"byte_end":28712,"line_start":526,"line_end":526,"column_start":5,"column_end":9},"name":"Pa27","qualname":"::common::thumbv6m::gpio::Pa27","value":"Pa27 {  }","parent":null,"children":[{"krate":0,"index":3442}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3545},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28730,"byte_end":28734,"line_start":527,"line_end":527,"column_start":5,"column_end":9},"name":"Pa28","qualname":"::common::thumbv6m::gpio::Pa28","value":"Pa28 {  }","parent":null,"children":[{"krate":0,"index":3547}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3650},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28752,"byte_end":28756,"line_start":528,"line_end":528,"column_start":5,"column_end":9},"name":"Pa29","qualname":"::common::thumbv6m::gpio::Pa29","value":"Pa29 {  }","parent":null,"children":[{"krate":0,"index":3652}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3755},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28774,"byte_end":28778,"line_start":529,"line_end":529,"column_start":5,"column_end":9},"name":"Pa30","qualname":"::common::thumbv6m::gpio::Pa30","value":"Pa30 {  }","parent":null,"children":[{"krate":0,"index":3757}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3860},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28796,"byte_end":28800,"line_start":530,"line_end":530,"column_start":5,"column_end":9},"name":"Pa31","qualname":"::common::thumbv6m::gpio::Pa31","value":"Pa31 {  }","parent":null,"children":[{"krate":0,"index":3862}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3965},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28822,"byte_end":28825,"line_start":532,"line_end":532,"column_start":5,"column_end":8},"name":"Pb0","qualname":"::common::thumbv6m::gpio::Pb0","value":"Pb0 {  }","parent":null,"children":[{"krate":0,"index":3967}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4070},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28841,"byte_end":28844,"line_start":533,"line_end":533,"column_start":5,"column_end":8},"name":"Pb1","qualname":"::common::thumbv6m::gpio::Pb1","value":"Pb1 {  }","parent":null,"children":[{"krate":0,"index":4072}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4175},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28860,"byte_end":28863,"line_start":534,"line_end":534,"column_start":5,"column_end":8},"name":"Pb2","qualname":"::common::thumbv6m::gpio::Pb2","value":"Pb2 {  }","parent":null,"children":[{"krate":0,"index":4177}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4280},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28879,"byte_end":28882,"line_start":535,"line_end":535,"column_start":5,"column_end":8},"name":"Pb3","qualname":"::common::thumbv6m::gpio::Pb3","value":"Pb3 {  }","parent":null,"children":[{"krate":0,"index":4282}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4385},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28898,"byte_end":28901,"line_start":536,"line_end":536,"column_start":5,"column_end":8},"name":"Pb4","qualname":"::common::thumbv6m::gpio::Pb4","value":"Pb4 {  }","parent":null,"children":[{"krate":0,"index":4387}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4490},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28917,"byte_end":28920,"line_start":537,"line_end":537,"column_start":5,"column_end":8},"name":"Pb5","qualname":"::common::thumbv6m::gpio::Pb5","value":"Pb5 {  }","parent":null,"children":[{"krate":0,"index":4492}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4595},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28936,"byte_end":28939,"line_start":538,"line_end":538,"column_start":5,"column_end":8},"name":"Pb6","qualname":"::common::thumbv6m::gpio::Pb6","value":"Pb6 {  }","parent":null,"children":[{"krate":0,"index":4597}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4700},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28955,"byte_end":28958,"line_start":539,"line_end":539,"column_start":5,"column_end":8},"name":"Pb7","qualname":"::common::thumbv6m::gpio::Pb7","value":"Pb7 {  }","parent":null,"children":[{"krate":0,"index":4702}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4805},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28974,"byte_end":28977,"line_start":540,"line_end":540,"column_start":5,"column_end":8},"name":"Pb8","qualname":"::common::thumbv6m::gpio::Pb8","value":"Pb8 {  }","parent":null,"children":[{"krate":0,"index":4807}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4910},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":28993,"byte_end":28996,"line_start":541,"line_end":541,"column_start":5,"column_end":8},"name":"Pb9","qualname":"::common::thumbv6m::gpio::Pb9","value":"Pb9 {  }","parent":null,"children":[{"krate":0,"index":4912}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5015},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29012,"byte_end":29016,"line_start":542,"line_end":542,"column_start":5,"column_end":9},"name":"Pb10","qualname":"::common::thumbv6m::gpio::Pb10","value":"Pb10 {  }","parent":null,"children":[{"krate":0,"index":5017}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5120},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29034,"byte_end":29038,"line_start":543,"line_end":543,"column_start":5,"column_end":9},"name":"Pb11","qualname":"::common::thumbv6m::gpio::Pb11","value":"Pb11 {  }","parent":null,"children":[{"krate":0,"index":5122}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5225},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29056,"byte_end":29060,"line_start":544,"line_end":544,"column_start":5,"column_end":9},"name":"Pb12","qualname":"::common::thumbv6m::gpio::Pb12","value":"Pb12 {  }","parent":null,"children":[{"krate":0,"index":5227}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5330},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29078,"byte_end":29082,"line_start":545,"line_end":545,"column_start":5,"column_end":9},"name":"Pb13","qualname":"::common::thumbv6m::gpio::Pb13","value":"Pb13 {  }","parent":null,"children":[{"krate":0,"index":5332}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5435},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29100,"byte_end":29104,"line_start":546,"line_end":546,"column_start":5,"column_end":9},"name":"Pb14","qualname":"::common::thumbv6m::gpio::Pb14","value":"Pb14 {  }","parent":null,"children":[{"krate":0,"index":5437}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5540},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29122,"byte_end":29126,"line_start":547,"line_end":547,"column_start":5,"column_end":9},"name":"Pb15","qualname":"::common::thumbv6m::gpio::Pb15","value":"Pb15 {  }","parent":null,"children":[{"krate":0,"index":5542}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5645},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29144,"byte_end":29148,"line_start":548,"line_end":548,"column_start":5,"column_end":9},"name":"Pb16","qualname":"::common::thumbv6m::gpio::Pb16","value":"Pb16 {  }","parent":null,"children":[{"krate":0,"index":5647}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5750},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29166,"byte_end":29170,"line_start":549,"line_end":549,"column_start":5,"column_end":9},"name":"Pb17","qualname":"::common::thumbv6m::gpio::Pb17","value":"Pb17 {  }","parent":null,"children":[{"krate":0,"index":5752}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5855},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29188,"byte_end":29192,"line_start":550,"line_end":550,"column_start":5,"column_end":9},"name":"Pb18","qualname":"::common::thumbv6m::gpio::Pb18","value":"Pb18 {  }","parent":null,"children":[{"krate":0,"index":5857}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5960},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29210,"byte_end":29214,"line_start":551,"line_end":551,"column_start":5,"column_end":9},"name":"Pb19","qualname":"::common::thumbv6m::gpio::Pb19","value":"Pb19 {  }","parent":null,"children":[{"krate":0,"index":5962}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6065},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29232,"byte_end":29236,"line_start":552,"line_end":552,"column_start":5,"column_end":9},"name":"Pb20","qualname":"::common::thumbv6m::gpio::Pb20","value":"Pb20 {  }","parent":null,"children":[{"krate":0,"index":6067}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6170},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29254,"byte_end":29258,"line_start":553,"line_end":553,"column_start":5,"column_end":9},"name":"Pb21","qualname":"::common::thumbv6m::gpio::Pb21","value":"Pb21 {  }","parent":null,"children":[{"krate":0,"index":6172}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6275},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29276,"byte_end":29280,"line_start":554,"line_end":554,"column_start":5,"column_end":9},"name":"Pb22","qualname":"::common::thumbv6m::gpio::Pb22","value":"Pb22 {  }","parent":null,"children":[{"krate":0,"index":6277}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6380},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29298,"byte_end":29302,"line_start":555,"line_end":555,"column_start":5,"column_end":9},"name":"Pb23","qualname":"::common::thumbv6m::gpio::Pb23","value":"Pb23 {  }","parent":null,"children":[{"krate":0,"index":6382}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6485},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29320,"byte_end":29324,"line_start":556,"line_end":556,"column_start":5,"column_end":9},"name":"Pb24","qualname":"::common::thumbv6m::gpio::Pb24","value":"Pb24 {  }","parent":null,"children":[{"krate":0,"index":6487}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6590},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29342,"byte_end":29346,"line_start":557,"line_end":557,"column_start":5,"column_end":9},"name":"Pb25","qualname":"::common::thumbv6m::gpio::Pb25","value":"Pb25 {  }","parent":null,"children":[{"krate":0,"index":6592}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6695},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29364,"byte_end":29368,"line_start":558,"line_end":558,"column_start":5,"column_end":9},"name":"Pb26","qualname":"::common::thumbv6m::gpio::Pb26","value":"Pb26 {  }","parent":null,"children":[{"krate":0,"index":6697}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6800},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29386,"byte_end":29390,"line_start":559,"line_end":559,"column_start":5,"column_end":9},"name":"Pb27","qualname":"::common::thumbv6m::gpio::Pb27","value":"Pb27 {  }","parent":null,"children":[{"krate":0,"index":6802}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6905},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29408,"byte_end":29412,"line_start":560,"line_end":560,"column_start":5,"column_end":9},"name":"Pb28","qualname":"::common::thumbv6m::gpio::Pb28","value":"Pb28 {  }","parent":null,"children":[{"krate":0,"index":6907}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7010},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29430,"byte_end":29434,"line_start":561,"line_end":561,"column_start":5,"column_end":9},"name":"Pb29","qualname":"::common::thumbv6m::gpio::Pb29","value":"Pb29 {  }","parent":null,"children":[{"krate":0,"index":7012}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7115},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29452,"byte_end":29456,"line_start":562,"line_end":562,"column_start":5,"column_end":9},"name":"Pb30","qualname":"::common::thumbv6m::gpio::Pb30","value":"Pb30 {  }","parent":null,"children":[{"krate":0,"index":7117}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7220},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":29474,"byte_end":29478,"line_start":563,"line_end":563,"column_start":5,"column_end":9},"name":"Pb31","qualname":"::common::thumbv6m::gpio::Pb31","value":"Pb31 {  }","parent":null,"children":[{"krate":0,"index":7222}],"decl_id":null,"docs":" Represents the IO pin with the matching name.\n","sig":null,"attributes":[{"value":"/ Represents the IO pin with the matching name.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":16783,"byte_end":16832,"line_start":144,"line_end":144,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7325},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30593,"byte_end":30600,"line_start":4,"line_end":4,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::common::thumbv6m::reset_cause::ResetCause::Unknown","value":"ResetCause::Unknown","parent":{"krate":0,"index":7324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7327},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30606,"byte_end":30609,"line_start":5,"line_end":5,"column_start":5,"column_end":8},"name":"POR","qualname":"::common::thumbv6m::reset_cause::ResetCause::POR","value":"ResetCause::POR","parent":{"krate":0,"index":7324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7329},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30615,"byte_end":30620,"line_start":6,"line_end":6,"column_start":5,"column_end":10},"name":"BOD12","qualname":"::common::thumbv6m::reset_cause::ResetCause::BOD12","value":"ResetCause::BOD12","parent":{"krate":0,"index":7324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7331},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30626,"byte_end":30631,"line_start":7,"line_end":7,"column_start":5,"column_end":10},"name":"BOD33","qualname":"::common::thumbv6m::reset_cause::ResetCause::BOD33","value":"ResetCause::BOD33","parent":{"krate":0,"index":7324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7333},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30637,"byte_end":30645,"line_start":8,"line_end":8,"column_start":5,"column_end":13},"name":"External","qualname":"::common::thumbv6m::reset_cause::ResetCause::External","value":"ResetCause::External","parent":{"krate":0,"index":7324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7335},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30651,"byte_end":30659,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Watchdog","qualname":"::common::thumbv6m::reset_cause::ResetCause::Watchdog","value":"ResetCause::Watchdog","parent":{"krate":0,"index":7324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7337},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30665,"byte_end":30671,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"System","qualname":"::common::thumbv6m::reset_cause::ResetCause::System","value":"ResetCause::System","parent":{"krate":0,"index":7324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7324},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30576,"byte_end":30586,"line_start":3,"line_end":3,"column_start":10,"column_end":20},"name":"ResetCause","qualname":"::common::thumbv6m::reset_cause::ResetCause","value":"pub enum ResetCause {\n    Unknown,\n    POR,\n    BOD12,\n    BOD33,\n    External,\n    Watchdog,\n    System,\n}","parent":null,"children":[{"krate":0,"index":7325},{"krate":0,"index":7327},{"krate":0,"index":7329},{"krate":0,"index":7331},{"krate":0,"index":7333},{"krate":0,"index":7335},{"krate":0,"index":7337}],"decl_id":null,"docs":" ResetCause represents the reason the MCU was reset.\n","sig":null,"attributes":[{"value":"/ ResetCause represents the reason the MCU was reset.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30481,"byte_end":30536,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":205},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":31065,"byte_end":31076,"line_start":28,"line_end":28,"column_start":8,"column_end":19},"name":"reset_cause","qualname":"::common::thumbv6m::reset_cause::reset_cause","value":"pub fn reset_cause(&crate::target_device::PM) -> ResetCause","parent":null,"children":[],"decl_id":null,"docs":" Returns the cause of the last reset.\n","sig":null,"attributes":[{"value":"/ Returns the cause of the last reset.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":31017,"byte_end":31057,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/serial_number.rs","byte_start":31602,"byte_end":31621,"line_start":14,"line_end":14,"column_start":8,"column_end":27},"name":"split_serial_number","qualname":"::common::thumbv6m::serial_number::split_serial_number","value":"pub fn split_serial_number() -> (u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the serial number of the chip as 4 32-bit integers. The serial\n number is only guaranteed to be unique if all 128 bits are used.\n","sig":null,"attributes":[{"value":"/ Returns the serial number of the chip as 4 32-bit integers. The serial","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/serial_number.rs","byte_start":31451,"byte_end":31525,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ number is only guaranteed to be unique if all 128 bits are used.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/serial_number.rs","byte_start":31526,"byte_end":31594,"line_start":13,"line_end":13,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":214},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/serial_number.rs","byte_start":32015,"byte_end":32028,"line_start":27,"line_end":27,"column_start":8,"column_end":21},"name":"serial_number","qualname":"::common::thumbv6m::serial_number::serial_number","value":"pub fn serial_number() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the serial number of the chip as an array of bytes. The serial\n number is only guaranteed to be unique if all 16 bytes are used.\n","sig":null,"attributes":[{"value":"/ Returns the serial number of the chip as an array of bytes. The serial","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/serial_number.rs","byte_start":31864,"byte_end":31938,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ number is only guaranteed to be unique if all 16 bytes are used.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/serial_number.rs","byte_start":31939,"byte_end":32007,"line_start":26,"line_end":26,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":219},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"samd21","qualname":"::samd21","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/mod.rs","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":230},{"krate":0,"index":300},{"krate":0,"index":379}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"samd21\")","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":1339,"byte_end":1365,"line_start":66,"line_end":66,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":220},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"calibration","qualname":"::samd21::calibration","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" NVM Software Calibration Area Mapping\n","sig":null,"attributes":[{"value":"! NVM Software Calibration Area Mapping","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":32844,"byte_end":32885,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":225},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":33687,"byte_end":33697,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"osc32k_cal","qualname":"::samd21::calibration::osc32k_cal","value":"pub fn osc32k_cal() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the osc32k calibration value from the NVM calibration area\n","sig":null,"attributes":[{"value":"/ Returns the osc32k calibration value from the NVM calibration area","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":33609,"byte_end":33679,"line_start":34,"line_end":34,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":226},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":33793,"byte_end":33811,"line_start":40,"line_end":40,"column_start":8,"column_end":26},"name":"dfll48m_coarse_cal","qualname":"::samd21::calibration::dfll48m_coarse_cal","value":"pub fn dfll48m_coarse_cal() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the dfll48m coarse calibration value\n","sig":null,"attributes":[{"value":"/ Returns the dfll48m coarse calibration value","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":33737,"byte_end":33785,"line_start":39,"line_end":39,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":227},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":33959,"byte_end":33973,"line_start":45,"line_end":45,"column_start":8,"column_end":22},"name":"usb_transn_cal","qualname":"::samd21::calibration::usb_transn_cal","value":"pub fn usb_transn_cal() -> u8","parent":null,"children":[],"decl_id":null,"docs":" USB TRANSN calibration value. Should be written to USB PADCAL register.\n","sig":null,"attributes":[{"value":"/ USB TRANSN calibration value. Should be written to USB PADCAL register.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":33876,"byte_end":33951,"line_start":44,"line_end":44,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":228},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":34118,"byte_end":34132,"line_start":50,"line_end":50,"column_start":8,"column_end":22},"name":"usb_transp_cal","qualname":"::samd21::calibration::usb_transp_cal","value":"pub fn usb_transp_cal() -> u8","parent":null,"children":[],"decl_id":null,"docs":" USB TRANSP calibration value. Should be written to USB PADCAL register.\n","sig":null,"attributes":[{"value":"/ USB TRANSP calibration value. Should be written to USB PADCAL register.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":34035,"byte_end":34110,"line_start":49,"line_end":49,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":34276,"byte_end":34288,"line_start":55,"line_end":55,"column_start":8,"column_end":20},"name":"usb_trim_cal","qualname":"::samd21::calibration::usb_trim_cal","value":"pub fn usb_trim_cal() -> u8","parent":null,"children":[],"decl_id":null,"docs":" USB TRIM calibration value. Should be written to USB PADCAL register.\n","sig":null,"attributes":[{"value":"/ USB TRIM calibration value. Should be written to USB PADCAL register.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/calibration.rs","byte_start":34195,"byte_end":34268,"line_start":54,"line_end":54,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":230},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"clock","qualname":"::samd21::clock","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":9986},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":7344},{"krate":0,"index":7348},{"krate":0,"index":7347},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":259},{"krate":0,"index":264},{"krate":0,"index":7511},{"krate":0,"index":7513},{"krate":0,"index":7350},{"krate":0,"index":7352},{"krate":0,"index":7515},{"krate":0,"index":7517},{"krate":0,"index":7354},{"krate":0,"index":7356},{"krate":0,"index":7519},{"krate":0,"index":7521},{"krate":0,"index":7358},{"krate":0,"index":7360},{"krate":0,"index":7523},{"krate":0,"index":7525},{"krate":0,"index":7362},{"krate":0,"index":7364},{"krate":0,"index":7527},{"krate":0,"index":7529},{"krate":0,"index":7366},{"krate":0,"index":7368},{"krate":0,"index":7531},{"krate":0,"index":7533},{"krate":0,"index":7370},{"krate":0,"index":7372},{"krate":0,"index":7535},{"krate":0,"index":7537},{"krate":0,"index":7374},{"krate":0,"index":7376},{"krate":0,"index":7539},{"krate":0,"index":7541},{"krate":0,"index":7378},{"krate":0,"index":7380},{"krate":0,"index":7543},{"krate":0,"index":7545},{"krate":0,"index":7382},{"krate":0,"index":7384},{"krate":0,"index":7547},{"krate":0,"index":7549},{"krate":0,"index":7386},{"krate":0,"index":7388},{"krate":0,"index":7551},{"krate":0,"index":7553},{"krate":0,"index":7390},{"krate":0,"index":7392},{"krate":0,"index":7555},{"krate":0,"index":7557},{"krate":0,"index":7394},{"krate":0,"index":7396},{"krate":0,"index":7559},{"krate":0,"index":7561},{"krate":0,"index":7398},{"krate":0,"index":7400},{"krate":0,"index":7563},{"krate":0,"index":7565},{"krate":0,"index":7402},{"krate":0,"index":7404},{"krate":0,"index":7567},{"krate":0,"index":7569},{"krate":0,"index":7406},{"krate":0,"index":7408},{"krate":0,"index":7571},{"krate":0,"index":7573},{"krate":0,"index":7410},{"krate":0,"index":7412},{"krate":0,"index":7575},{"krate":0,"index":7577},{"krate":0,"index":7414},{"krate":0,"index":7416},{"krate":0,"index":7579},{"krate":0,"index":7581},{"krate":0,"index":7418},{"krate":0,"index":7420},{"krate":0,"index":7583},{"krate":0,"index":7585},{"krate":0,"index":7422},{"krate":0,"index":7424},{"krate":0,"index":7587},{"krate":0,"index":7589},{"krate":0,"index":7426},{"krate":0,"index":7428},{"krate":0,"index":7591},{"krate":0,"index":7593},{"krate":0,"index":7430},{"krate":0,"index":7432},{"krate":0,"index":7595},{"krate":0,"index":7597},{"krate":0,"index":7434},{"krate":0,"index":7436},{"krate":0,"index":7599},{"krate":0,"index":7601},{"krate":0,"index":7438},{"krate":0,"index":7440},{"krate":0,"index":7603},{"krate":0,"index":7605},{"krate":0,"index":7442},{"krate":0,"index":7444},{"krate":0,"index":7607},{"krate":0,"index":7609},{"krate":0,"index":7446},{"krate":0,"index":7448},{"krate":0,"index":7611},{"krate":0,"index":7613},{"krate":0,"index":7450},{"krate":0,"index":7452},{"krate":0,"index":7615},{"krate":0,"index":7617},{"krate":0,"index":7454},{"krate":0,"index":7456},{"krate":0,"index":7619},{"krate":0,"index":7621},{"krate":0,"index":7458},{"krate":0,"index":7460},{"krate":0,"index":7623},{"krate":0,"index":7625},{"krate":0,"index":7462},{"krate":0,"index":7464},{"krate":0,"index":7627},{"krate":0,"index":7629},{"krate":0,"index":7466},{"krate":0,"index":7468},{"krate":0,"index":7631},{"krate":0,"index":7633},{"krate":0,"index":7470},{"krate":0,"index":7472},{"krate":0,"index":7635},{"krate":0,"index":7637},{"krate":0,"index":7474},{"krate":0,"index":7476},{"krate":0,"index":7478},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":292}],"decl_id":null,"docs":" Configuring the system clock sources.\n You will typically need to create an instance of `GenericClockController`\n before you can set up most of the peripherals on the atsamd21 device.\n The other types in this module are used to enforce at compile time\n that the peripherals have been correctly configured.\n","sig":null,"attributes":[{"value":"! Configuring the system clock sources.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":34344,"byte_end":34385,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"! You will typically need to create an instance of `GenericClockController`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":34386,"byte_end":34463,"line_start":2,"line_end":2,"column_start":1,"column_end":78}},{"value":"! before you can set up most of the peripherals on the atsamd21 device.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":34464,"byte_end":34537,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"! The other types in this module are used to enforce at compile time","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":34538,"byte_end":34608,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! that the peripherals have been correctly configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":34609,"byte_end":34665,"line_start":5,"line_end":5,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":243},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":34924,"byte_end":34931,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"ClockId","qualname":"::samd21::clock::ClockId","value":"target_device::gclk::clkctrl::ID_A","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":244},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":34979,"byte_end":34989,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"ClockGenId","qualname":"::samd21::clock::ClockGenId","value":"target_device::gclk::clkctrl::GEN_A","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":245},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35038,"byte_end":35049,"line_start":14,"line_end":14,"column_start":10,"column_end":21},"name":"ClockSource","qualname":"::samd21::clock::ClockSource","value":"target_device::gclk::genctrl::SRC_A","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7344},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35372,"byte_end":35378,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"GClock","qualname":"::samd21::clock::GClock","value":"GClock {  }","parent":null,"children":[{"krate":0,"index":7345},{"krate":0,"index":7346}],"decl_id":null,"docs":" Represents a configured clock generator.\n Can be converted into the effective clock frequency.\n Its primary purpose is to be passed in to methods\n such as `GenericClockController::tcc2_tc3` to configure\n the clock for a peripheral.\n","sig":null,"attributes":[{"value":"/ Represents a configured clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35090,"byte_end":35134,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"/ Can be converted into the effective clock frequency.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35135,"byte_end":35191,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/ Its primary purpose is to be passed in to methods","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35192,"byte_end":35245,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/ such as `GenericClockController::tcc2_tc3` to configure","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35246,"byte_end":35305,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/ the clock for a peripheral.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35306,"byte_end":35337,"line_start":20,"line_end":20,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":259},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37257,"byte_end":37279,"line_start":90,"line_end":90,"column_start":12,"column_end":34},"name":"GenericClockController","qualname":"::samd21::clock::GenericClockController","value":"GenericClockController {  }","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":263}],"decl_id":null,"docs":" `GenericClockController` encapsulates the GCLK hardware.\n It provides a type safe way to configure the system clocks.\n Initializing the `GenericClockController` instance configures\n the system to run at 48Mhz by setting gclk1 as a 32khz source\n and feeding it into the DFLL48 hardware which in turn drives\n gclk0 at 48Mhz.\n","sig":null,"attributes":[{"value":"/ `GenericClockController` encapsulates the GCLK hardware.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":36904,"byte_end":36964,"line_start":84,"line_end":84,"column_start":1,"column_end":61}},{"value":"/ It provides a type safe way to configure the system clocks.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":36965,"byte_end":37028,"line_start":85,"line_end":85,"column_start":1,"column_end":64}},{"value":"/ Initializing the `GenericClockController` instance configures","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37029,"byte_end":37094,"line_start":86,"line_end":86,"column_start":1,"column_end":66}},{"value":"/ the system to run at 48Mhz by setting gclk1 as a 32khz source","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37095,"byte_end":37160,"line_start":87,"line_end":87,"column_start":1,"column_end":66}},{"value":"/ and feeding it into the DFLL48 hardware which in turn drives","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37161,"byte_end":37225,"line_start":88,"line_end":88,"column_start":1,"column_end":65}},{"value":"/ gclk0 at 48Mhz.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37226,"byte_end":37245,"line_start":89,"line_end":89,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37504,"byte_end":37524,"line_start":99,"line_end":99,"column_start":12,"column_end":32},"name":"with_internal_32kosc","qualname":"<GenericClockController>::with_internal_32kosc","value":"pub fn with_internal_32kosc(GCLK, &mut PM, &mut SYSCTRL, &mut NVMCTRL) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Reset the clock controller, configure the system to run\n at 48Mhz and reset various clock dividers.\n","sig":null,"attributes":[{"value":"/ Reset the clock controller, configure the system to run","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37382,"byte_end":37441,"line_start":97,"line_end":97,"column_start":5,"column_end":64}},{"value":"/ at 48Mhz and reset various clock dividers.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37446,"byte_end":37492,"line_start":98,"line_end":98,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37831,"byte_end":37851,"line_start":110,"line_end":110,"column_start":12,"column_end":32},"name":"with_external_32kosc","qualname":"<GenericClockController>::with_external_32kosc","value":"pub fn with_external_32kosc(GCLK, &mut PM, &mut SYSCTRL, &mut NVMCTRL) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Reset the clock controller, configure the system to run\n at 48Mhz and reset various clock dividers.\n","sig":null,"attributes":[{"value":"/ Reset the clock controller, configure the system to run","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37709,"byte_end":37768,"line_start":108,"line_end":108,"column_start":5,"column_end":64}},{"value":"/ at 48Mhz and reset various clock dividers.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37773,"byte_end":37819,"line_start":109,"line_end":109,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":39935,"byte_end":39940,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"gclk0","qualname":"<GenericClockController>::gclk0","value":"pub fn gclk0(&mut Self) -> GClock","parent":null,"children":[],"decl_id":null,"docs":" Returns a `GClock` for gclk0, the system clock generator at 48Mhz\n","sig":null,"attributes":[{"value":"/ Returns a `GClock` for gclk0, the system clock generator at 48Mhz","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":39854,"byte_end":39923,"line_start":180,"line_end":180,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40127,"byte_end":40132,"line_start":189,"line_end":189,"column_start":12,"column_end":17},"name":"gclk1","qualname":"<GenericClockController>::gclk1","value":"pub fn gclk1(&mut Self) -> GClock","parent":null,"children":[],"decl_id":null,"docs":" Returns a `GClock` for gclk1, the 32Khz oscillator.\n","sig":null,"attributes":[{"value":"/ Returns a `GClock` for gclk1, the 32Khz oscillator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40060,"byte_end":40115,"line_start":188,"line_end":188,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40406,"byte_end":40414,"line_start":199,"line_end":199,"column_start":12,"column_end":20},"name":"get_gclk","qualname":"<GenericClockController>::get_gclk","value":"pub fn get_gclk(&mut Self, ClockGenId) -> Option<GClock>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `GClock` for the specified clock generator.\n If that clock generator has not yet been configured,\n returns None.\n","sig":null,"attributes":[{"value":"/ Returns the `GClock` for the specified clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40252,"byte_end":40311,"line_start":196,"line_end":196,"column_start":5,"column_end":64}},{"value":"/ If that clock generator has not yet been configured,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40316,"byte_end":40372,"line_start":197,"line_end":197,"column_start":5,"column_end":61}},{"value":"/ returns None.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40377,"byte_end":40394,"line_start":198,"line_end":198,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":41263,"byte_end":41296,"line_start":220,"line_end":220,"column_start":12,"column_end":45},"name":"configure_gclk_divider_and_source","qualname":"<GenericClockController>::configure_gclk_divider_and_source","value":"pub fn configure_gclk_divider_and_source(&mut Self, ClockGenId, u16,\n                                         ClockSource, bool) -> Option<GClock>","parent":null,"children":[],"decl_id":null,"docs":" Configures a clock generator with the specified divider and\n source.\n `divider` is a linear divider to be applied to the clock\n source.  While the hardware also supports an exponential divider,\n this function doesn't expose that functionality at this time.\n `improve_duty_cycle` is a boolean that, when set to true, enables\n a 5o/50 duty cycle for odd divider values.\n Returns a `GClock` for the configured clock generator.\n Returns `None` if the clock generator has already been configured.\n","sig":null,"attributes":[{"value":"/ Configures a clock generator with the specified divider and","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40700,"byte_end":40763,"line_start":211,"line_end":211,"column_start":5,"column_end":68}},{"value":"/ source.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40768,"byte_end":40779,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ `divider` is a linear divider to be applied to the clock","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40784,"byte_end":40844,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/ source.  While the hardware also supports an exponential divider,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40849,"byte_end":40918,"line_start":214,"line_end":214,"column_start":5,"column_end":74}},{"value":"/ this function doesn't expose that functionality at this time.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40923,"byte_end":40988,"line_start":215,"line_end":215,"column_start":5,"column_end":70}},{"value":"/ `improve_duty_cycle` is a boolean that, when set to true, enables","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":40993,"byte_end":41062,"line_start":216,"line_end":216,"column_start":5,"column_end":74}},{"value":"/ a 5o/50 duty cycle for odd divider values.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":41067,"byte_end":41113,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/ Returns a `GClock` for the configured clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":41118,"byte_end":41176,"line_start":218,"line_end":218,"column_start":5,"column_end":63}},{"value":"/ Returns `None` if the clock generator has already been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":41181,"byte_end":41251,"line_start":219,"line_end":219,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":7511},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44040,"byte_end":44053,"line_start":306,"line_end":306,"column_start":17,"column_end":30},"name":"Tcc0Tcc1Clock","qualname":"::samd21::clock::Tcc0Tcc1Clock","value":"Tcc0Tcc1Clock {  }","parent":null,"children":[{"krate":0,"index":7512}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7515},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44082,"byte_end":44094,"line_start":307,"line_end":307,"column_start":16,"column_end":28},"name":"Tcc2Tc3Clock","qualname":"::samd21::clock::Tcc2Tc3Clock","value":"Tcc2Tc3Clock {  }","parent":null,"children":[{"krate":0,"index":7516}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7519},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44121,"byte_end":44132,"line_start":308,"line_end":308,"column_start":15,"column_end":26},"name":"Tc4Tc5Clock","qualname":"::samd21::clock::Tc4Tc5Clock","value":"Tc4Tc5Clock {  }","parent":null,"children":[{"krate":0,"index":7520}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7523},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44158,"byte_end":44169,"line_start":309,"line_end":309,"column_start":15,"column_end":26},"name":"Tc6Tc7Clock","qualname":"::samd21::clock::Tc6Tc7Clock","value":"Tc6Tc7Clock {  }","parent":null,"children":[{"krate":0,"index":7524}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7527},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44200,"byte_end":44216,"line_start":310,"line_end":310,"column_start":20,"column_end":36},"name":"Sercom0CoreClock","qualname":"::samd21::clock::Sercom0CoreClock","value":"Sercom0CoreClock {  }","parent":null,"children":[{"krate":0,"index":7528}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7531},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44252,"byte_end":44268,"line_start":311,"line_end":311,"column_start":20,"column_end":36},"name":"Sercom1CoreClock","qualname":"::samd21::clock::Sercom1CoreClock","value":"Sercom1CoreClock {  }","parent":null,"children":[{"krate":0,"index":7532}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7535},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44304,"byte_end":44320,"line_start":312,"line_end":312,"column_start":20,"column_end":36},"name":"Sercom2CoreClock","qualname":"::samd21::clock::Sercom2CoreClock","value":"Sercom2CoreClock {  }","parent":null,"children":[{"krate":0,"index":7536}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7539},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44356,"byte_end":44372,"line_start":313,"line_end":313,"column_start":20,"column_end":36},"name":"Sercom3CoreClock","qualname":"::samd21::clock::Sercom3CoreClock","value":"Sercom3CoreClock {  }","parent":null,"children":[{"krate":0,"index":7540}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7543},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44408,"byte_end":44424,"line_start":314,"line_end":314,"column_start":20,"column_end":36},"name":"Sercom4CoreClock","qualname":"::samd21::clock::Sercom4CoreClock","value":"Sercom4CoreClock {  }","parent":null,"children":[{"krate":0,"index":7544}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7547},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44460,"byte_end":44476,"line_start":315,"line_end":315,"column_start":20,"column_end":36},"name":"Sercom5CoreClock","qualname":"::samd21::clock::Sercom5CoreClock","value":"Sercom5CoreClock {  }","parent":null,"children":[{"krate":0,"index":7548}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7551},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44503,"byte_end":44511,"line_start":316,"line_end":316,"column_start":11,"column_end":19},"name":"UsbClock","qualname":"::samd21::clock::UsbClock","value":"UsbClock {  }","parent":null,"children":[{"krate":0,"index":7552}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7555},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44529,"byte_end":44537,"line_start":317,"line_end":317,"column_start":11,"column_end":19},"name":"RtcClock","qualname":"::samd21::clock::RtcClock","value":"RtcClock {  }","parent":null,"children":[{"krate":0,"index":7556}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7559},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44555,"byte_end":44563,"line_start":318,"line_end":318,"column_start":11,"column_end":19},"name":"AdcClock","qualname":"::samd21::clock::AdcClock","value":"AdcClock {  }","parent":null,"children":[{"krate":0,"index":7560}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7563},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44581,"byte_end":44589,"line_start":319,"line_end":319,"column_start":11,"column_end":19},"name":"WdtClock","qualname":"::samd21::clock::WdtClock","value":"WdtClock {  }","parent":null,"children":[{"krate":0,"index":7564}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7567},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44607,"byte_end":44615,"line_start":320,"line_end":320,"column_start":11,"column_end":19},"name":"EicClock","qualname":"::samd21::clock::EicClock","value":"EicClock {  }","parent":null,"children":[{"krate":0,"index":7568}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7571},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44636,"byte_end":44647,"line_start":321,"line_end":321,"column_start":14,"column_end":25},"name":"Evsys0Clock","qualname":"::samd21::clock::Evsys0Clock","value":"Evsys0Clock {  }","parent":null,"children":[{"krate":0,"index":7572}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7575},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44672,"byte_end":44683,"line_start":322,"line_end":322,"column_start":14,"column_end":25},"name":"Evsys1Clock","qualname":"::samd21::clock::Evsys1Clock","value":"Evsys1Clock {  }","parent":null,"children":[{"krate":0,"index":7576}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7579},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44708,"byte_end":44719,"line_start":323,"line_end":323,"column_start":14,"column_end":25},"name":"Evsys2Clock","qualname":"::samd21::clock::Evsys2Clock","value":"Evsys2Clock {  }","parent":null,"children":[{"krate":0,"index":7580}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7583},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44744,"byte_end":44755,"line_start":324,"line_end":324,"column_start":14,"column_end":25},"name":"Evsys3Clock","qualname":"::samd21::clock::Evsys3Clock","value":"Evsys3Clock {  }","parent":null,"children":[{"krate":0,"index":7584}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7587},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44780,"byte_end":44791,"line_start":325,"line_end":325,"column_start":14,"column_end":25},"name":"Evsys4Clock","qualname":"::samd21::clock::Evsys4Clock","value":"Evsys4Clock {  }","parent":null,"children":[{"krate":0,"index":7588}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7591},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44816,"byte_end":44827,"line_start":326,"line_end":326,"column_start":14,"column_end":25},"name":"Evsys5Clock","qualname":"::samd21::clock::Evsys5Clock","value":"Evsys5Clock {  }","parent":null,"children":[{"krate":0,"index":7592}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7595},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44852,"byte_end":44863,"line_start":327,"line_end":327,"column_start":14,"column_end":25},"name":"Evsys6Clock","qualname":"::samd21::clock::Evsys6Clock","value":"Evsys6Clock {  }","parent":null,"children":[{"krate":0,"index":7596}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7599},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44888,"byte_end":44899,"line_start":328,"line_end":328,"column_start":14,"column_end":25},"name":"Evsys7Clock","qualname":"::samd21::clock::Evsys7Clock","value":"Evsys7Clock {  }","parent":null,"children":[{"krate":0,"index":7600}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7603},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44924,"byte_end":44935,"line_start":329,"line_end":329,"column_start":14,"column_end":25},"name":"Evsys8Clock","qualname":"::samd21::clock::Evsys8Clock","value":"Evsys8Clock {  }","parent":null,"children":[{"krate":0,"index":7604}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7607},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44960,"byte_end":44971,"line_start":330,"line_end":330,"column_start":14,"column_end":25},"name":"Evsys9Clock","qualname":"::samd21::clock::Evsys9Clock","value":"Evsys9Clock {  }","parent":null,"children":[{"krate":0,"index":7608}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7611},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44997,"byte_end":45009,"line_start":331,"line_end":331,"column_start":15,"column_end":27},"name":"Evsys10Clock","qualname":"::samd21::clock::Evsys10Clock","value":"Evsys10Clock {  }","parent":null,"children":[{"krate":0,"index":7612}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7615},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45036,"byte_end":45048,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"name":"Evsys11Clock","qualname":"::samd21::clock::Evsys11Clock","value":"Evsys11Clock {  }","parent":null,"children":[{"krate":0,"index":7616}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7619},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45074,"byte_end":45084,"line_start":333,"line_end":333,"column_start":14,"column_end":24},"name":"AcAnaClock","qualname":"::samd21::clock::AcAnaClock","value":"AcAnaClock {  }","parent":null,"children":[{"krate":0,"index":7620}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7623},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45108,"byte_end":45118,"line_start":334,"line_end":334,"column_start":14,"column_end":24},"name":"AcDigClock","qualname":"::samd21::clock::AcDigClock","value":"AcDigClock {  }","parent":null,"children":[{"krate":0,"index":7624}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7627},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45139,"byte_end":45147,"line_start":335,"line_end":335,"column_start":11,"column_end":19},"name":"DacClock","qualname":"::samd21::clock::DacClock","value":"DacClock {  }","parent":null,"children":[{"krate":0,"index":7628}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7631},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45166,"byte_end":45175,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"I2S0Clock","qualname":"::samd21::clock::I2S0Clock","value":"I2S0Clock {  }","parent":null,"children":[{"krate":0,"index":7632}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":7635},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45196,"byte_end":45205,"line_start":337,"line_end":337,"column_start":12,"column_end":21},"name":"I2S1Clock","qualname":"::samd21::clock::I2S1Clock","value":"I2S1Clock {  }","parent":null,"children":[{"krate":0,"index":7636}],"decl_id":null,"docs":" A typed token that indicates that the clock for the peripheral(s)\n with the matching name has been configured.\n The effective clock frequency is available via the `freq` method,\n or by converting the object into a `Hertz` instance.\n The peripheral initialization code will typically require passing\n in this object to prove at compile time that the clock has been\n correctly initialized.\n","sig":null,"attributes":[{"value":"/ A typed token that indicates that the clock for the peripheral(s)","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42164,"byte_end":42233,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ with the matching name has been configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42234,"byte_end":42281,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ The effective clock frequency is available via the `freq` method,","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42282,"byte_end":42351,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ or by converting the object into a `Hertz` instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42352,"byte_end":42408,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/ The peripheral initialization code will typically require passing","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42409,"byte_end":42478,"line_start":254,"line_end":254,"column_start":1,"column_end":70}},{"value":"/ in this object to prove at compile time that the clock has been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42479,"byte_end":42546,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ correctly initialized.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42547,"byte_end":42573,"line_start":256,"line_end":256,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7479},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44029,"byte_end":44038,"line_start":306,"line_end":306,"column_start":6,"column_end":15},"name":"tcc0_tcc1","qualname":"<GenericClockController>::tcc0_tcc1","value":"pub fn tcc0_tcc1(&mut Self, &GClock) -> Option<Tcc0Tcc1Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7480},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44072,"byte_end":44080,"line_start":307,"line_end":307,"column_start":6,"column_end":14},"name":"tcc2_tc3","qualname":"<GenericClockController>::tcc2_tc3","value":"pub fn tcc2_tc3(&mut Self, &GClock) -> Option<Tcc2Tc3Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7481},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44112,"byte_end":44119,"line_start":308,"line_end":308,"column_start":6,"column_end":13},"name":"tc4_tc5","qualname":"<GenericClockController>::tc4_tc5","value":"pub fn tc4_tc5(&mut Self, &GClock) -> Option<Tc4Tc5Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7482},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44149,"byte_end":44156,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"name":"tc6_tc7","qualname":"<GenericClockController>::tc6_tc7","value":"pub fn tc6_tc7(&mut Self, &GClock) -> Option<Tc6Tc7Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7483},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44186,"byte_end":44198,"line_start":310,"line_end":310,"column_start":6,"column_end":18},"name":"sercom0_core","qualname":"<GenericClockController>::sercom0_core","value":"pub fn sercom0_core(&mut Self, &GClock) -> Option<Sercom0CoreClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7484},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44238,"byte_end":44250,"line_start":311,"line_end":311,"column_start":6,"column_end":18},"name":"sercom1_core","qualname":"<GenericClockController>::sercom1_core","value":"pub fn sercom1_core(&mut Self, &GClock) -> Option<Sercom1CoreClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7485},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44290,"byte_end":44302,"line_start":312,"line_end":312,"column_start":6,"column_end":18},"name":"sercom2_core","qualname":"<GenericClockController>::sercom2_core","value":"pub fn sercom2_core(&mut Self, &GClock) -> Option<Sercom2CoreClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7486},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44342,"byte_end":44354,"line_start":313,"line_end":313,"column_start":6,"column_end":18},"name":"sercom3_core","qualname":"<GenericClockController>::sercom3_core","value":"pub fn sercom3_core(&mut Self, &GClock) -> Option<Sercom3CoreClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7487},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44394,"byte_end":44406,"line_start":314,"line_end":314,"column_start":6,"column_end":18},"name":"sercom4_core","qualname":"<GenericClockController>::sercom4_core","value":"pub fn sercom4_core(&mut Self, &GClock) -> Option<Sercom4CoreClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7488},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44446,"byte_end":44458,"line_start":315,"line_end":315,"column_start":6,"column_end":18},"name":"sercom5_core","qualname":"<GenericClockController>::sercom5_core","value":"pub fn sercom5_core(&mut Self, &GClock) -> Option<Sercom5CoreClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7489},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44498,"byte_end":44501,"line_start":316,"line_end":316,"column_start":6,"column_end":9},"name":"usb","qualname":"<GenericClockController>::usb","value":"pub fn usb(&mut Self, &GClock) -> Option<UsbClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7490},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44524,"byte_end":44527,"line_start":317,"line_end":317,"column_start":6,"column_end":9},"name":"rtc","qualname":"<GenericClockController>::rtc","value":"pub fn rtc(&mut Self, &GClock) -> Option<RtcClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7491},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44550,"byte_end":44553,"line_start":318,"line_end":318,"column_start":6,"column_end":9},"name":"adc","qualname":"<GenericClockController>::adc","value":"pub fn adc(&mut Self, &GClock) -> Option<AdcClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7492},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44576,"byte_end":44579,"line_start":319,"line_end":319,"column_start":6,"column_end":9},"name":"wdt","qualname":"<GenericClockController>::wdt","value":"pub fn wdt(&mut Self, &GClock) -> Option<WdtClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7493},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44602,"byte_end":44605,"line_start":320,"line_end":320,"column_start":6,"column_end":9},"name":"eic","qualname":"<GenericClockController>::eic","value":"pub fn eic(&mut Self, &GClock) -> Option<EicClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7494},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44628,"byte_end":44634,"line_start":321,"line_end":321,"column_start":6,"column_end":12},"name":"evsys0","qualname":"<GenericClockController>::evsys0","value":"pub fn evsys0(&mut Self, &GClock) -> Option<Evsys0Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7495},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44664,"byte_end":44670,"line_start":322,"line_end":322,"column_start":6,"column_end":12},"name":"evsys1","qualname":"<GenericClockController>::evsys1","value":"pub fn evsys1(&mut Self, &GClock) -> Option<Evsys1Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7496},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44700,"byte_end":44706,"line_start":323,"line_end":323,"column_start":6,"column_end":12},"name":"evsys2","qualname":"<GenericClockController>::evsys2","value":"pub fn evsys2(&mut Self, &GClock) -> Option<Evsys2Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7497},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44736,"byte_end":44742,"line_start":324,"line_end":324,"column_start":6,"column_end":12},"name":"evsys3","qualname":"<GenericClockController>::evsys3","value":"pub fn evsys3(&mut Self, &GClock) -> Option<Evsys3Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7498},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44772,"byte_end":44778,"line_start":325,"line_end":325,"column_start":6,"column_end":12},"name":"evsys4","qualname":"<GenericClockController>::evsys4","value":"pub fn evsys4(&mut Self, &GClock) -> Option<Evsys4Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7499},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44808,"byte_end":44814,"line_start":326,"line_end":326,"column_start":6,"column_end":12},"name":"evsys5","qualname":"<GenericClockController>::evsys5","value":"pub fn evsys5(&mut Self, &GClock) -> Option<Evsys5Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7500},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44844,"byte_end":44850,"line_start":327,"line_end":327,"column_start":6,"column_end":12},"name":"evsys6","qualname":"<GenericClockController>::evsys6","value":"pub fn evsys6(&mut Self, &GClock) -> Option<Evsys6Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7501},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44880,"byte_end":44886,"line_start":328,"line_end":328,"column_start":6,"column_end":12},"name":"evsys7","qualname":"<GenericClockController>::evsys7","value":"pub fn evsys7(&mut Self, &GClock) -> Option<Evsys7Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7502},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44916,"byte_end":44922,"line_start":329,"line_end":329,"column_start":6,"column_end":12},"name":"evsys8","qualname":"<GenericClockController>::evsys8","value":"pub fn evsys8(&mut Self, &GClock) -> Option<Evsys8Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7503},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44952,"byte_end":44958,"line_start":330,"line_end":330,"column_start":6,"column_end":12},"name":"evsys9","qualname":"<GenericClockController>::evsys9","value":"pub fn evsys9(&mut Self, &GClock) -> Option<Evsys9Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7504},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":44988,"byte_end":44995,"line_start":331,"line_end":331,"column_start":6,"column_end":13},"name":"evsys10","qualname":"<GenericClockController>::evsys10","value":"pub fn evsys10(&mut Self, &GClock) -> Option<Evsys10Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7505},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45027,"byte_end":45034,"line_start":332,"line_end":332,"column_start":6,"column_end":13},"name":"evsys11","qualname":"<GenericClockController>::evsys11","value":"pub fn evsys11(&mut Self, &GClock) -> Option<Evsys11Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7506},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45066,"byte_end":45072,"line_start":333,"line_end":333,"column_start":6,"column_end":12},"name":"ac_ana","qualname":"<GenericClockController>::ac_ana","value":"pub fn ac_ana(&mut Self, &GClock) -> Option<AcAnaClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7507},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45100,"byte_end":45106,"line_start":334,"line_end":334,"column_start":6,"column_end":12},"name":"ac_dig","qualname":"<GenericClockController>::ac_dig","value":"pub fn ac_dig(&mut Self, &GClock) -> Option<AcDigClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7508},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45134,"byte_end":45137,"line_start":335,"line_end":335,"column_start":6,"column_end":9},"name":"dac","qualname":"<GenericClockController>::dac","value":"pub fn dac(&mut Self, &GClock) -> Option<DacClock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7509},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45160,"byte_end":45164,"line_start":336,"line_end":336,"column_start":6,"column_end":10},"name":"i2s0","qualname":"<GenericClockController>::i2s0","value":"pub fn i2s0(&mut Self, &GClock) -> Option<I2S0Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7510},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45190,"byte_end":45194,"line_start":337,"line_end":337,"column_start":6,"column_end":10},"name":"i2s1","qualname":"<GenericClockController>::i2s1","value":"pub fn i2s1(&mut Self, &GClock) -> Option<I2S1Clock>","parent":null,"children":[],"decl_id":null,"docs":" Configure the clock for peripheral(s) that match the name\n of this function to use the specific clock generator.\n The `GClock` parameter may be one of default clocks\n return from `gclk0()`, `gclk1()` or a clock configured\n by the host application using the `configure_gclk_divider_and_source`\n method.\n Returns a typed token that proves that the clock has been configured;\n the peripheral initialization code will typically require that this\n clock token be passed in to ensure that the clock has been initialized\n appropriately.\n Returns `None` is the specified generic clock has already been\n configured.\n","sig":null,"attributes":[{"value":"/ Configure the clock for peripheral(s) that match the name","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42886,"byte_end":42947,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ of this function to use the specific clock generator.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":42952,"byte_end":43009,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ The `GClock` parameter may be one of default clocks","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43014,"byte_end":43069,"line_start":279,"line_end":279,"column_start":5,"column_end":60}},{"value":"/ return from `gclk0()`, `gclk1()` or a clock configured","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43074,"byte_end":43132,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/ by the host application using the `configure_gclk_divider_and_source`","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43137,"byte_end":43210,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43215,"byte_end":43226,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Returns a typed token that proves that the clock has been configured;","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43231,"byte_end":43304,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ the peripheral initialization code will typically require that this","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43309,"byte_end":43380,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ clock token be passed in to ensure that the clock has been initialized","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43385,"byte_end":43459,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ appropriately.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43464,"byte_end":43482,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ Returns `None` is the specified generic clock has already been","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43487,"byte_end":43553,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":43558,"byte_end":43573,"line_start":288,"line_end":288,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":278},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45268,"byte_end":45279,"line_start":341,"line_end":341,"column_start":11,"column_end":22},"name":"OSC48M_FREQ","qualname":"::samd21::clock::OSC48M_FREQ","value":"Hertz","parent":null,"children":[],"decl_id":null,"docs":" The frequency of the 48Mhz source.\n","sig":null,"attributes":[{"value":"/ The frequency of the 48Mhz source.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45219,"byte_end":45257,"line_start":340,"line_end":340,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":279},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45357,"byte_end":45368,"line_start":343,"line_end":343,"column_start":11,"column_end":22},"name":"OSC32K_FREQ","qualname":"::samd21::clock::OSC32K_FREQ","value":"Hertz","parent":null,"children":[],"decl_id":null,"docs":" The frequency of the 32Khz source.\n","sig":null,"attributes":[{"value":"/ The frequency of the 32Khz source.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":45308,"byte_end":45346,"line_start":342,"line_end":342,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":300},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sercom","qualname":"::samd21::sercom","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":323},{"krate":0,"index":329},{"krate":0,"index":351},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"decl_id":null,"docs":" Working with the SERCOM peripherals.","sig":null,"attributes":[{"value":"! Working with the SERCOM peripherals.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49461,"byte_end":49501,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49502,"byte_end":49505,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The atsamd21 hardware has several SERCOM instances that can","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49506,"byte_end":49569,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"! be configured to perform a variety of serial communication","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49570,"byte_end":49632,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"! tasks.  This configuration is expressed through the use of","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49633,"byte_end":49695,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"! type states to make it difficult to misuse.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49696,"byte_end":49743,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"! Each sercom instance is associated with a group of IO pins","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49744,"byte_end":49806,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"! referred to as a Pad.  When the pins are set to the appropriate","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49807,"byte_end":49874,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"! peripheral function mode they are routed to the sercom pad.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/mod.rs","byte_start":49875,"byte_end":49938,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7639},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":59656,"byte_end":59666,"line_start":306,"line_end":306,"column_start":5,"column_end":15},"name":"I2CMaster0","qualname":"::samd21::sercom::i2c::I2CMaster0","value":"I2CMaster0 {  }","parent":null,"children":[{"krate":0,"index":7642},{"krate":0,"index":7643},{"krate":0,"index":7644}],"decl_id":null,"docs":" Represents the Sercom instance configured to act as an I2C Master.\n The embedded_hal blocking I2C traits are implemented by this instance.\n","sig":null,"attributes":[{"value":"/ Represents the Sercom instance configured to act as an I2C Master.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50785,"byte_end":50855,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ The embedded_hal blocking I2C traits are implemented by this instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50856,"byte_end":50930,"line_start":24,"line_end":24,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":7693},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":59815,"byte_end":59825,"line_start":314,"line_end":314,"column_start":5,"column_end":15},"name":"I2CMaster1","qualname":"::samd21::sercom::i2c::I2CMaster1","value":"I2CMaster1 {  }","parent":null,"children":[{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698}],"decl_id":null,"docs":" Represents the Sercom instance configured to act as an I2C Master.\n The embedded_hal blocking I2C traits are implemented by this instance.\n","sig":null,"attributes":[{"value":"/ Represents the Sercom instance configured to act as an I2C Master.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50785,"byte_end":50855,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ The embedded_hal blocking I2C traits are implemented by this instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50856,"byte_end":50930,"line_start":24,"line_end":24,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":7747},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":59974,"byte_end":59984,"line_start":322,"line_end":322,"column_start":5,"column_end":15},"name":"I2CMaster2","qualname":"::samd21::sercom::i2c::I2CMaster2","value":"I2CMaster2 {  }","parent":null,"children":[{"krate":0,"index":7750},{"krate":0,"index":7751},{"krate":0,"index":7752}],"decl_id":null,"docs":" Represents the Sercom instance configured to act as an I2C Master.\n The embedded_hal blocking I2C traits are implemented by this instance.\n","sig":null,"attributes":[{"value":"/ Represents the Sercom instance configured to act as an I2C Master.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50785,"byte_end":50855,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ The embedded_hal blocking I2C traits are implemented by this instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50856,"byte_end":50930,"line_start":24,"line_end":24,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":7801},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":60133,"byte_end":60143,"line_start":330,"line_end":330,"column_start":5,"column_end":15},"name":"I2CMaster3","qualname":"::samd21::sercom::i2c::I2CMaster3","value":"I2CMaster3 {  }","parent":null,"children":[{"krate":0,"index":7804},{"krate":0,"index":7805},{"krate":0,"index":7806}],"decl_id":null,"docs":" Represents the Sercom instance configured to act as an I2C Master.\n The embedded_hal blocking I2C traits are implemented by this instance.\n","sig":null,"attributes":[{"value":"/ Represents the Sercom instance configured to act as an I2C Master.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50785,"byte_end":50855,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ The embedded_hal blocking I2C traits are implemented by this instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50856,"byte_end":50930,"line_start":24,"line_end":24,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":7855},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":60364,"byte_end":60374,"line_start":342,"line_end":342,"column_start":5,"column_end":15},"name":"I2CMaster4","qualname":"::samd21::sercom::i2c::I2CMaster4","value":"I2CMaster4 {  }","parent":null,"children":[{"krate":0,"index":7858},{"krate":0,"index":7859},{"krate":0,"index":7860}],"decl_id":null,"docs":" Represents the Sercom instance configured to act as an I2C Master.\n The embedded_hal blocking I2C traits are implemented by this instance.\n","sig":null,"attributes":[{"value":"/ Represents the Sercom instance configured to act as an I2C Master.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50785,"byte_end":50855,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ The embedded_hal blocking I2C traits are implemented by this instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50856,"byte_end":50930,"line_start":24,"line_end":24,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":7909},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":60523,"byte_end":60533,"line_start":350,"line_end":350,"column_start":5,"column_end":15},"name":"I2CMaster5","qualname":"::samd21::sercom::i2c::I2CMaster5","value":"I2CMaster5 {  }","parent":null,"children":[{"krate":0,"index":7912},{"krate":0,"index":7913},{"krate":0,"index":7914}],"decl_id":null,"docs":" Represents the Sercom instance configured to act as an I2C Master.\n The embedded_hal blocking I2C traits are implemented by this instance.\n","sig":null,"attributes":[{"value":"/ Represents the Sercom instance configured to act as an I2C Master.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50785,"byte_end":50855,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ The embedded_hal blocking I2C traits are implemented by this instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":50856,"byte_end":50930,"line_start":24,"line_end":24,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7964},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":60724,"byte_end":60739,"line_start":362,"line_end":362,"column_start":5,"column_end":20},"name":"ArbitrationLost","qualname":"::samd21::sercom::i2c::I2CError::ArbitrationLost","value":"I2CError::ArbitrationLost","parent":{"krate":0,"index":7963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7966},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":60745,"byte_end":60757,"line_start":363,"line_end":363,"column_start":5,"column_end":17},"name":"AddressError","qualname":"::samd21::sercom::i2c::I2CError::AddressError","value":"I2CError::AddressError","parent":{"krate":0,"index":7963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7968},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":60763,"byte_end":60771,"line_start":364,"line_end":364,"column_start":5,"column_end":13},"name":"BusError","qualname":"::samd21::sercom::i2c::I2CError::BusError","value":"I2CError::BusError","parent":{"krate":0,"index":7963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7970},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":60777,"byte_end":60784,"line_start":365,"line_end":365,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::samd21::sercom::i2c::I2CError::Timeout","value":"I2CError::Timeout","parent":{"krate":0,"index":7963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7972},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":60790,"byte_end":60794,"line_start":366,"line_end":366,"column_start":5,"column_end":9},"name":"Nack","qualname":"::samd21::sercom::i2c::I2CError::Nack","value":"I2CError::Nack","parent":{"krate":0,"index":7963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7963},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/i2c.rs","byte_start":60709,"byte_end":60717,"line_start":361,"line_end":361,"column_start":10,"column_end":18},"name":"I2CError","qualname":"::samd21::sercom::i2c::I2CError","value":"pub enum I2CError { ArbitrationLost, AddressError, BusError, Timeout, Nack, }","parent":null,"children":[{"krate":0,"index":7964},{"krate":0,"index":7966},{"krate":0,"index":7968},{"krate":0,"index":7970},{"krate":0,"index":7972}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7976},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61007,"byte_end":61018,"line_start":9,"line_end":9,"column_start":6,"column_end":17},"name":"Sercom0Pad0","qualname":"::samd21::sercom::pads::Sercom0Pad0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7989},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61059,"byte_end":61070,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"name":"Sercom0Pad1","qualname":"::samd21::sercom::pads::Sercom0Pad1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8002},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61111,"byte_end":61122,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"name":"Sercom0Pad2","qualname":"::samd21::sercom::pads::Sercom0Pad2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8015},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61164,"byte_end":61175,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"name":"Sercom0Pad3","qualname":"::samd21::sercom::pads::Sercom0Pad3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8028},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61346,"byte_end":61357,"line_start":34,"line_end":34,"column_start":6,"column_end":17},"name":"Sercom1Pad0","qualname":"::samd21::sercom::pads::Sercom1Pad0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8041},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61399,"byte_end":61410,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"name":"Sercom1Pad1","qualname":"::samd21::sercom::pads::Sercom1Pad1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8054},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61452,"byte_end":61463,"line_start":44,"line_end":44,"column_start":6,"column_end":17},"name":"Sercom1Pad2","qualname":"::samd21::sercom::pads::Sercom1Pad2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8067},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61506,"byte_end":61517,"line_start":49,"line_end":49,"column_start":6,"column_end":17},"name":"Sercom1Pad3","qualname":"::samd21::sercom::pads::Sercom1Pad3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8080},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61689,"byte_end":61700,"line_start":59,"line_end":59,"column_start":6,"column_end":17},"name":"Sercom2Pad0","qualname":"::samd21::sercom::pads::Sercom2Pad0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8093},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61742,"byte_end":61753,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"name":"Sercom2Pad1","qualname":"::samd21::sercom::pads::Sercom2Pad1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8106},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61795,"byte_end":61806,"line_start":69,"line_end":69,"column_start":6,"column_end":17},"name":"Sercom2Pad2","qualname":"::samd21::sercom::pads::Sercom2Pad2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8119},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":61849,"byte_end":61860,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"name":"Sercom2Pad3","qualname":"::samd21::sercom::pads::Sercom2Pad3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8132},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":62050,"byte_end":62061,"line_start":84,"line_end":84,"column_start":6,"column_end":17},"name":"Sercom3Pad0","qualname":"::samd21::sercom::pads::Sercom3Pad0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8145},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":62104,"byte_end":62115,"line_start":89,"line_end":89,"column_start":6,"column_end":17},"name":"Sercom3Pad1","qualname":"::samd21::sercom::pads::Sercom3Pad1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8158},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":62158,"byte_end":62169,"line_start":94,"line_end":94,"column_start":6,"column_end":17},"name":"Sercom3Pad2","qualname":"::samd21::sercom::pads::Sercom3Pad2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8174},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":62227,"byte_end":62238,"line_start":100,"line_end":100,"column_start":6,"column_end":17},"name":"Sercom3Pad3","qualname":"::samd21::sercom::pads::Sercom3Pad3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8190},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":62521,"byte_end":62532,"line_start":112,"line_end":112,"column_start":6,"column_end":17},"name":"Sercom4Pad0","qualname":"::samd21::sercom::pads::Sercom4Pad0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8206},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":62649,"byte_end":62660,"line_start":119,"line_end":119,"column_start":6,"column_end":17},"name":"Sercom4Pad1","qualname":"::samd21::sercom::pads::Sercom4Pad1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8222},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":62777,"byte_end":62788,"line_start":126,"line_end":126,"column_start":6,"column_end":17},"name":"Sercom4Pad2","qualname":"::samd21::sercom::pads::Sercom4Pad2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8238},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":62906,"byte_end":62917,"line_start":133,"line_end":133,"column_start":6,"column_end":17},"name":"Sercom4Pad3","qualname":"::samd21::sercom::pads::Sercom4Pad3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8254},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":63232,"byte_end":63243,"line_start":145,"line_end":145,"column_start":6,"column_end":17},"name":"Sercom5Pad0","qualname":"::samd21::sercom::pads::Sercom5Pad0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8273},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":63375,"byte_end":63386,"line_start":153,"line_end":153,"column_start":6,"column_end":17},"name":"Sercom5Pad1","qualname":"::samd21::sercom::pads::Sercom5Pad1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8292},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":63518,"byte_end":63529,"line_start":161,"line_end":161,"column_start":6,"column_end":17},"name":"Sercom5Pad2","qualname":"::samd21::sercom::pads::Sercom5Pad2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8311},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/pads.rs","byte_start":63661,"byte_end":63672,"line_start":169,"line_end":169,"column_start":6,"column_end":17},"name":"Sercom5Pad3","qualname":"::samd21::sercom::pads::Sercom5Pad3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a numbered pad for the associated sercom instance. The pad is\n generic over any pin, only the PadPin implementations in this the sercom\n module make sense.\n","sig":null,"attributes":[{"value":"/ Represents a numbered pad for the associated sercom instance. The pad is","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6662,"byte_end":6738,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ generic over any pin, only the PadPin implementations in this the sercom","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6739,"byte_end":6815,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ module make sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/pad.rs","byte_start":6816,"byte_end":6838,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8331},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":64120,"byte_end":64127,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::samd21::sercom::spi::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":8330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8330},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":64108,"byte_end":64113,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::samd21::sercom::spi::Error","value":"pub enum Error { Overrun, }","parent":null,"children":[{"krate":0,"index":8331}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":348},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":64390,"byte_end":64398,"line_start":19,"line_end":19,"column_start":11,"column_end":19},"name":"DipoDopo","qualname":"::samd21::sercom::spi::DipoDopo","value":"DipoDopo","parent":null,"children":[{"krate":0,"index":349}],"decl_id":null,"docs":" The DipoDopo trait defines a way to get the data in and data out pin out\n values for a given SPIMasterXPadout configuration. You should not implement\n this trait for yourself; only the implementations in the sercom module make\n sense.\n","sig":null,"attributes":[{"value":"/ The DipoDopo trait defines a way to get the data in and data out pin out","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":64132,"byte_end":64208,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ values for a given SPIMasterXPadout configuration. You should not implement","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":64209,"byte_end":64288,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ this trait for yourself; only the implementations in the sercom module make","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":64289,"byte_end":64368,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":64369,"byte_end":64379,"line_start":18,"line_end":18,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":64408,"byte_end":64417,"line_start":20,"line_end":20,"column_start":8,"column_end":17},"name":"dipo_dopo","qualname":"::samd21::sercom::spi::DipoDopo::dipo_dopo","value":"pub fn dipo_dopo(&Self) -> (u8, u8)","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8439},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":75356,"byte_end":75366,"line_start":272,"line_end":272,"column_start":13,"column_end":23},"name":"SPIMaster0","qualname":"::samd21::sercom::spi::SPIMaster0","value":"SPIMaster0 {  }","parent":null,"children":[{"krate":0,"index":8443},{"krate":0,"index":8444}],"decl_id":null,"docs":" SPIMasterX represents the corresponding SERCOMX instance\n configured to act in the role of an SPI Master.\n Objects of this type implement the HAL `FullDuplex` and blocking\n SPI traits.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8574},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":75429,"byte_end":75439,"line_start":273,"line_end":273,"column_start":13,"column_end":23},"name":"SPIMaster1","qualname":"::samd21::sercom::spi::SPIMaster1","value":"SPIMaster1 {  }","parent":null,"children":[{"krate":0,"index":8578},{"krate":0,"index":8579}],"decl_id":null,"docs":" SPIMasterX represents the corresponding SERCOMX instance\n configured to act in the role of an SPI Master.\n Objects of this type implement the HAL `FullDuplex` and blocking\n SPI traits.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8709},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":75502,"byte_end":75512,"line_start":274,"line_end":274,"column_start":13,"column_end":23},"name":"SPIMaster2","qualname":"::samd21::sercom::spi::SPIMaster2","value":"SPIMaster2 {  }","parent":null,"children":[{"krate":0,"index":8713},{"krate":0,"index":8714}],"decl_id":null,"docs":" SPIMasterX represents the corresponding SERCOMX instance\n configured to act in the role of an SPI Master.\n Objects of this type implement the HAL `FullDuplex` and blocking\n SPI traits.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8844},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":75575,"byte_end":75585,"line_start":275,"line_end":275,"column_start":13,"column_end":23},"name":"SPIMaster3","qualname":"::samd21::sercom::spi::SPIMaster3","value":"SPIMaster3 {  }","parent":null,"children":[{"krate":0,"index":8848},{"krate":0,"index":8849}],"decl_id":null,"docs":" SPIMasterX represents the corresponding SERCOMX instance\n configured to act in the role of an SPI Master.\n Objects of this type implement the HAL `FullDuplex` and blocking\n SPI traits.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8979},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":75708,"byte_end":75718,"line_start":277,"line_end":277,"column_start":13,"column_end":23},"name":"SPIMaster4","qualname":"::samd21::sercom::spi::SPIMaster4","value":"SPIMaster4 {  }","parent":null,"children":[{"krate":0,"index":8983},{"krate":0,"index":8984}],"decl_id":null,"docs":" SPIMasterX represents the corresponding SERCOMX instance\n configured to act in the role of an SPI Master.\n Objects of this type implement the HAL `FullDuplex` and blocking\n SPI traits.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9114},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/spi.rs","byte_start":75841,"byte_end":75851,"line_start":279,"line_end":279,"column_start":13,"column_end":23},"name":"SPIMaster5","qualname":"::samd21::sercom::spi::SPIMaster5","value":"SPIMaster5 {  }","parent":null,"children":[{"krate":0,"index":9118},{"krate":0,"index":9119}],"decl_id":null,"docs":" SPIMasterX represents the corresponding SERCOMX instance\n configured to act in the role of an SPI Master.\n Objects of this type implement the HAL `FullDuplex` and blocking\n SPI traits.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":370},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":76541,"byte_end":76549,"line_start":16,"line_end":16,"column_start":11,"column_end":19},"name":"RxpoTxpo","qualname":"::samd21::sercom::uart::RxpoTxpo","value":"RxpoTxpo","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":" The RxpoTxpo trait defines a way to get the data in and data out pin out\n values for a given UARTXPadout configuration. You should not implement\n this trait for yourself; only the implementations in the sercom module make\n sense.\n","sig":null,"attributes":[{"value":"/ The RxpoTxpo trait defines a way to get the data in and data out pin out","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":76288,"byte_end":76364,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ values for a given UARTXPadout configuration. You should not implement","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":76365,"byte_end":76439,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ this trait for yourself; only the implementations in the sercom module make","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":76440,"byte_end":76519,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ sense.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":76520,"byte_end":76530,"line_start":15,"line_end":15,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":76559,"byte_end":76568,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"rxpo_txpo","qualname":"::samd21::sercom::uart::RxpoTxpo::rxpo_txpo","value":"pub fn rxpo_txpo(&Self) -> (u8, u8)","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9215},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":87165,"byte_end":87170,"line_start":263,"line_end":263,"column_start":7,"column_end":12},"name":"UART0","qualname":"::samd21::sercom::uart::UART0","value":"UART0 {  }","parent":null,"children":[{"krate":0,"index":9220},{"krate":0,"index":9221}],"decl_id":null,"docs":" UARTX represents the corresponding SERCOMX instance\n configured to act in the role of a UART Master.\n Objects of this type implement the HAL `serial::Read`,\n `serial::Write` traits.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9337},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":87227,"byte_end":87232,"line_start":264,"line_end":264,"column_start":7,"column_end":12},"name":"UART1","qualname":"::samd21::sercom::uart::UART1","value":"UART1 {  }","parent":null,"children":[{"krate":0,"index":9342},{"krate":0,"index":9343}],"decl_id":null,"docs":" UARTX represents the corresponding SERCOMX instance\n configured to act in the role of a UART Master.\n Objects of this type implement the HAL `serial::Read`,\n `serial::Write` traits.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9459},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":87289,"byte_end":87294,"line_start":265,"line_end":265,"column_start":7,"column_end":12},"name":"UART2","qualname":"::samd21::sercom::uart::UART2","value":"UART2 {  }","parent":null,"children":[{"krate":0,"index":9464},{"krate":0,"index":9465}],"decl_id":null,"docs":" UARTX represents the corresponding SERCOMX instance\n configured to act in the role of a UART Master.\n Objects of this type implement the HAL `serial::Read`,\n `serial::Write` traits.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9581},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":87351,"byte_end":87356,"line_start":266,"line_end":266,"column_start":7,"column_end":12},"name":"UART3","qualname":"::samd21::sercom::uart::UART3","value":"UART3 {  }","parent":null,"children":[{"krate":0,"index":9586},{"krate":0,"index":9587}],"decl_id":null,"docs":" UARTX represents the corresponding SERCOMX instance\n configured to act in the role of a UART Master.\n Objects of this type implement the HAL `serial::Read`,\n `serial::Write` traits.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9703},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":87473,"byte_end":87478,"line_start":268,"line_end":268,"column_start":7,"column_end":12},"name":"UART4","qualname":"::samd21::sercom::uart::UART4","value":"UART4 {  }","parent":null,"children":[{"krate":0,"index":9708},{"krate":0,"index":9709}],"decl_id":null,"docs":" UARTX represents the corresponding SERCOMX instance\n configured to act in the role of a UART Master.\n Objects of this type implement the HAL `serial::Read`,\n `serial::Write` traits.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9825},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/sercom/uart.rs","byte_start":87595,"byte_end":87600,"line_start":270,"line_end":270,"column_start":7,"column_end":12},"name":"UART5","qualname":"::samd21::sercom::uart::UART5","value":"UART5 {  }","parent":null,"children":[{"krate":0,"index":9830},{"krate":0,"index":9831}],"decl_id":null,"docs":" UARTX represents the corresponding SERCOMX instance\n configured to act in the role of a UART Master.\n Objects of this type implement the HAL `serial::Read`,\n `serial::Write` traits.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":379},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::samd21::timer","value":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":10096},{"krate":0,"index":392},{"krate":0,"index":10098},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":415},{"krate":0,"index":9877},{"krate":0,"index":9883},{"krate":0,"index":9881},{"krate":0,"index":9880},{"krate":0,"index":422},{"krate":0,"index":9885},{"krate":0,"index":9886},{"krate":0,"index":9888},{"krate":0,"index":9892},{"krate":0,"index":9893},{"krate":0,"index":9895},{"krate":0,"index":9899},{"krate":0,"index":9900},{"krate":0,"index":9902}],"decl_id":null,"docs":" Working with timer counter hardware\n","sig":null,"attributes":[{"value":"! Working with timer counter hardware","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":87993,"byte_end":88032,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88887,"byte_end":88899,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"TimerCounter","qualname":"::samd21::timer::TimerCounter","value":"TimerCounter {  }","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"decl_id":null,"docs":" A generic hardware timer counter.\n The counters are exposed in 16-bit mode only.\n The hardware allows configuring the 8-bit mode\n and pairing up some instances to run in 32-bit\n mode, but that functionality is not currently\n exposed by this hal implementation.\n TimerCounter implements both the `Periodic` and\n the `CountDown` embedded_hal timer traits.\n Before a hardware timer can be used, it must first\n have a clock configured.\n","sig":null,"attributes":[{"value":"/ A generic hardware timer counter.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88413,"byte_end":88450,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ The counters are exposed in 16-bit mode only.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88451,"byte_end":88500,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ The hardware allows configuring the 8-bit mode","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88501,"byte_end":88551,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ and pairing up some instances to run in 32-bit","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88552,"byte_end":88602,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/ mode, but that functionality is not currently","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88603,"byte_end":88652,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ exposed by this hal implementation.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88653,"byte_end":88692,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ TimerCounter implements both the `Periodic` and","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88693,"byte_end":88744,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ the `CountDown` embedded_hal timer traits.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88745,"byte_end":88791,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ Before a hardware timer can be used, it must first","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88792,"byte_end":88846,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ have a clock configured.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88847,"byte_end":88875,"line_start":25,"line_end":25,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":399},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":89138,"byte_end":89145,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"Count16","qualname":"::samd21::timer::Count16","value":"Count16","parent":null,"children":[{"krate":0,"index":400}],"decl_id":null,"docs":" This is a helper trait to make it easier to make most of the\n TimerCounter impl generic.  It doesn't make too much sense to\n to try to implement this trait outside of this module.\n","sig":null,"attributes":[{"value":"/ This is a helper trait to make it easier to make most of the","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":88938,"byte_end":89002,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/ TimerCounter impl generic.  It doesn't make too much sense to","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":89003,"byte_end":89068,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/ to try to implement this trait outside of this module.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":89069,"byte_end":89127,"line_start":33,"line_end":33,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":89155,"byte_end":89163,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"count_16","qualname":"::samd21::timer::Count16::count_16","value":"pub fn count_16(&Self) -> &COUNT16","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9877},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":93457,"byte_end":93468,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"TimerParams","qualname":"::samd21::timer::TimerParams","value":"TimerParams { divider, cycles }","parent":null,"children":[{"krate":0,"index":9878},{"krate":0,"index":9879}],"decl_id":null,"docs":" Helper type for computing cycles and divider given frequency\n","sig":null,"attributes":[{"value":"/ Helper type for computing cycles and divider given frequency","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":93351,"byte_end":93415,"line_start":167,"line_end":167,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":9878},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":93479,"byte_end":93486,"line_start":170,"line_end":170,"column_start":9,"column_end":16},"name":"divider","qualname":"::samd21::timer::TimerParams::divider","value":"u16","parent":{"krate":0,"index":9877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9879},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":93501,"byte_end":93507,"line_start":171,"line_end":171,"column_start":9,"column_end":15},"name":"cycles","qualname":"::samd21::timer::TimerParams::cycles","value":"u32","parent":{"krate":0,"index":9877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":93547,"byte_end":93550,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<TimerParams>::new","value":"pub fn new<T>(T, u32) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":93782,"byte_end":93788,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"new_us","qualname":"<TimerParams>::new_us","value":"pub fn new_us<T>(T, u32) -> Self where T: Into<Microseconds>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9885},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":94918,"byte_end":94931,"line_start":221,"line_end":221,"column_start":5,"column_end":18},"name":"TimerCounter3","qualname":"::samd21::timer::TimerCounter3","value":"TimerCounter<TC3>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9889},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":94939,"byte_end":94943,"line_start":221,"line_end":221,"column_start":26,"column_end":30},"name":"tc3_","qualname":"<TimerCounter<TC3>>::tc3_","value":"pub fn tc3_(&clock::Tcc2Tc3Clock, TC3, &mut PM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configure this timer counter instance.\n The clock is obtained from the `GenericClockController` instance\n and its frequency impacts the resolution and maximum range of\n the timeout values that can be passed to the `start` method.\n Note that some hardware timer instances share the same clock\n generator instance and thus will be clocked at the same rate.\n","sig":null,"attributes":[{"value":"/ Configure this timer counter instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92417,"byte_end":92459,"line_start":141,"line_end":141,"column_start":5,"column_end":47}},{"value":"/ The clock is obtained from the `GenericClockController` instance","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92464,"byte_end":92532,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/ and its frequency impacts the resolution and maximum range of","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92537,"byte_end":92602,"line_start":143,"line_end":143,"column_start":5,"column_end":70}},{"value":"/ the timeout values that can be passed to the `start` method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92607,"byte_end":92671,"line_start":144,"line_end":144,"column_start":5,"column_end":69}},{"value":"/ Note that some hardware timer instances share the same clock","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92676,"byte_end":92740,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/ generator instance and thus will be clocked at the same rate.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92745,"byte_end":92810,"line_start":146,"line_end":146,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":9892},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":94964,"byte_end":94977,"line_start":222,"line_end":222,"column_start":5,"column_end":18},"name":"TimerCounter4","qualname":"::samd21::timer::TimerCounter4","value":"TimerCounter<TC4>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9896},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":94985,"byte_end":94989,"line_start":222,"line_end":222,"column_start":26,"column_end":30},"name":"tc4_","qualname":"<TimerCounter<TC4>>::tc4_","value":"pub fn tc4_(&clock::Tc4Tc5Clock, TC4, &mut PM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configure this timer counter instance.\n The clock is obtained from the `GenericClockController` instance\n and its frequency impacts the resolution and maximum range of\n the timeout values that can be passed to the `start` method.\n Note that some hardware timer instances share the same clock\n generator instance and thus will be clocked at the same rate.\n","sig":null,"attributes":[{"value":"/ Configure this timer counter instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92417,"byte_end":92459,"line_start":141,"line_end":141,"column_start":5,"column_end":47}},{"value":"/ The clock is obtained from the `GenericClockController` instance","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92464,"byte_end":92532,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/ and its frequency impacts the resolution and maximum range of","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92537,"byte_end":92602,"line_start":143,"line_end":143,"column_start":5,"column_end":70}},{"value":"/ the timeout values that can be passed to the `start` method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92607,"byte_end":92671,"line_start":144,"line_end":144,"column_start":5,"column_end":69}},{"value":"/ Note that some hardware timer instances share the same clock","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92676,"byte_end":92740,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/ generator instance and thus will be clocked at the same rate.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92745,"byte_end":92810,"line_start":146,"line_end":146,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":9899},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":95009,"byte_end":95022,"line_start":223,"line_end":223,"column_start":5,"column_end":18},"name":"TimerCounter5","qualname":"::samd21::timer::TimerCounter5","value":"TimerCounter<TC5>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9903},"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":95030,"byte_end":95034,"line_start":223,"line_end":223,"column_start":26,"column_end":30},"name":"tc5_","qualname":"<TimerCounter<TC5>>::tc5_","value":"pub fn tc5_(&clock::Tc4Tc5Clock, TC5, &mut PM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configure this timer counter instance.\n The clock is obtained from the `GenericClockController` instance\n and its frequency impacts the resolution and maximum range of\n the timeout values that can be passed to the `start` method.\n Note that some hardware timer instances share the same clock\n generator instance and thus will be clocked at the same rate.\n","sig":null,"attributes":[{"value":"/ Configure this timer counter instance.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92417,"byte_end":92459,"line_start":141,"line_end":141,"column_start":5,"column_end":47}},{"value":"/ The clock is obtained from the `GenericClockController` instance","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92464,"byte_end":92532,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/ and its frequency impacts the resolution and maximum range of","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92537,"byte_end":92602,"line_start":143,"line_end":143,"column_start":5,"column_end":70}},{"value":"/ the timeout values that can be passed to the `start` method.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92607,"byte_end":92671,"line_start":144,"line_end":144,"column_start":5,"column_end":69}},{"value":"/ Note that some hardware timer instances share the same clock","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92676,"byte_end":92740,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/ generator instance and thus will be clocked at the same rate.","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":92745,"byte_end":92810,"line_start":146,"line_end":146,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2248,"byte_end":2253,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2683,"byte_end":2688,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2795,"byte_end":2800,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2905,"byte_end":2910,"line_start":45,"line_end":45,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":3015,"byte_end":3020,"line_start":51,"line_end":51,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":3793,"byte_end":3798,"line_start":79,"line_end":79,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":3902,"byte_end":3907,"line_start":85,"line_end":85,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":4406,"byte_end":4419,"line_start":17,"line_end":17,"column_start":11,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":4875,"byte_end":4888,"line_start":38,"line_end":38,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":5881,"byte_end":5894,"line_start":68,"line_end":68,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9837,"byte_end":9846,"line_start":95,"line_end":95,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9938,"byte_end":9947,"line_start":101,"line_end":101,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10047,"byte_end":10056,"line_start":107,"line_end":107,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10160,"byte_end":10165,"line_start":113,"line_end":113,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10269,"byte_end":10274,"line_start":119,"line_end":119,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10382,"byte_end":10391,"line_start":125,"line_end":125,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10514,"byte_end":10521,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10632,"byte_end":10639,"line_start":139,"line_end":139,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10756,"byte_end":10767,"line_start":145,"line_end":145,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10875,"byte_end":10886,"line_start":151,"line_end":151,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10984,"byte_end":10996,"line_start":157,"line_end":157,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":11102,"byte_end":11114,"line_start":163,"line_end":163,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":11243,"byte_end":11255,"line_start":171,"line_end":171,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":11362,"byte_end":11367,"line_start":177,"line_end":177,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":25295,"byte_end":25299,"line_start":398,"line_end":398,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30694,"byte_end":30704,"line_start":13,"line_end":13,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35444,"byte_end":35450,"line_start":27,"line_end":27,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35548,"byte_end":35553,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37353,"byte_end":37375,"line_start":96,"line_end":96,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":89209,"byte_end":89221,"line_start":38,"line_end":38,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":89252,"byte_end":89264,"line_start":39,"line_end":39,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":91441,"byte_end":91453,"line_start":107,"line_end":107,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":93522,"byte_end":93533,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":1113,"byte_end":1119,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/mod.rs","byte_start":1539,"byte_end":1544,"line_start":1,"line_end":1,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/mod.rs","byte_start":1554,"byte_end":1568,"line_start":2,"line_end":2,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":36}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/mod.rs","byte_start":1591,"byte_end":1594,"line_start":4,"line_end":4,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":61}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/mod.rs","byte_start":1604,"byte_end":1611,"line_start":5,"line_end":5,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":67}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/mod.rs","byte_start":1621,"byte_end":1625,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":73}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/mod.rs","byte_start":1635,"byte_end":1647,"line_start":7,"line_end":7,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":118}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/mod.rs","byte_start":12323,"byte_end":12327,"line_start":1,"line_end":1,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":127}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/lib.rs","byte_start":1374,"byte_end":1380,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":219}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/mod.rs","byte_start":32660,"byte_end":32671,"line_start":1,"line_end":1,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":220}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/mod.rs","byte_start":32681,"byte_end":32686,"line_start":2,"line_end":2,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":230}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/mod.rs","byte_start":32696,"byte_end":32702,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":300}},{"kind":"Mod","span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/mod.rs","byte_start":32712,"byte_end":32717,"line_start":4,"line_end":4,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":379}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2248,"byte_end":2253,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":17},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2683,"byte_end":2688,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":17},"to":{"krate":4,"index":9}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2795,"byte_end":2800,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":17},"to":{"krate":4,"index":9}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":2905,"byte_end":2910,"line_start":45,"line_end":45,"column_start":22,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":17},"to":{"krate":4,"index":9}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":3015,"byte_end":3020,"line_start":51,"line_end":51,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":17},"to":{"krate":4,"index":12}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":3793,"byte_end":3798,"line_start":79,"line_end":79,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":17},"to":{"krate":4,"index":12}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/delay.rs","byte_start":3902,"byte_end":3907,"line_start":85,"line_end":85,"column_start":22,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":17},"to":{"krate":4,"index":12}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":4406,"byte_end":4419,"line_start":17,"line_end":17,"column_start":11,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":45},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":4875,"byte_end":4888,"line_start":38,"line_end":38,"column_start":35,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":45},"to":{"krate":4,"index":12}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/sleeping_delay.rs","byte_start":5881,"byte_end":5894,"line_start":68,"line_end":68,"column_start":35,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":45},"to":{"krate":4,"index":9}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9837,"byte_end":9846,"line_start":95,"line_end":95,"column_start":22,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":9938,"byte_end":9947,"line_start":101,"line_end":101,"column_start":22,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":474},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10047,"byte_end":10056,"line_start":107,"line_end":107,"column_start":26,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":474},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10160,"byte_end":10165,"line_start":113,"line_end":113,"column_start":26,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":444},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10269,"byte_end":10274,"line_start":119,"line_end":119,"column_start":26,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":444},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10382,"byte_end":10391,"line_start":125,"line_end":125,"column_start":26,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10514,"byte_end":10521,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":489},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10632,"byte_end":10639,"line_start":139,"line_end":139,"column_start":29,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":489},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10756,"byte_end":10767,"line_start":145,"line_end":145,"column_start":29,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":504},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10875,"byte_end":10886,"line_start":151,"line_end":151,"column_start":24,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":504},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":10984,"byte_end":10996,"line_start":157,"line_end":157,"column_start":24,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":519},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":11102,"byte_end":11114,"line_start":163,"line_end":163,"column_start":28,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":519},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":11243,"byte_end":11255,"line_start":171,"line_end":171,"column_start":22,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":519},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/time.rs","byte_start":11362,"byte_end":11367,"line_start":177,"line_end":177,"column_start":29,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":444},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","byte_start":12117,"byte_end":12126,"line_start":6,"line_end":6,"column_start":33,"column_end":42},"kind":"SuperTrait","from":{"krate":4,"index":157},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/timer_traits.rs","byte_start":12156,"byte_end":12164,"line_start":6,"line_end":6,"column_start":72,"column_end":80},"kind":"SuperTrait","from":{"krate":4,"index":162},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/gpio.rs","byte_start":25295,"byte_end":25299,"line_start":398,"line_end":398,"column_start":6,"column_end":10},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/common/thumbv6m/reset_cause.rs","byte_start":30694,"byte_end":30704,"line_start":13,"line_end":13,"column_start":19,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":7324},"to":{"krate":1,"index":1844}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35444,"byte_end":35450,"line_start":27,"line_end":27,"column_start":22,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":7344},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":35548,"byte_end":35553,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/clock.rs","byte_start":37353,"byte_end":37375,"line_start":96,"line_end":96,"column_start":6,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":89209,"byte_end":89221,"line_start":38,"line_end":38,"column_start":23,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":395},"to":{"krate":4,"index":162}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":89252,"byte_end":89264,"line_start":39,"line_end":39,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":395},"to":{"krate":4,"index":157}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":91441,"byte_end":91453,"line_start":107,"line_end":107,"column_start":35,"column_end":47},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":395},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/nebelgrau/.cargo/registry/src/github.com-1ecc6299db9ec823/atsamd-hal-0.9.0/src/samd21/timer.rs","byte_start":93522,"byte_end":93533,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9877},"to":{"krate":4294967295,"index":4294967295}}]}